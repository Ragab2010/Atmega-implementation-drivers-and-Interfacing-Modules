
ADC.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000022a2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000114  00800060  000022a2  00002316  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00001104  00000000  00000000  0000242c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000ae1  00000000  00000000  00003530  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 000001c0  00000000  00000000  00004011  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000210  00000000  00000000  000041d1  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000268a  00000000  00000000  000043e1  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000014e0  00000000  00000000  00006a6b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000012a9  00000000  00000000  00007f4b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001e0  00000000  00000000  000091f4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000002fe  00000000  00000000  000093d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009aa  00000000  00000000  000096d2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000a07c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d4 e0       	ldi	r29, 0x04	; 4
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e2 ea       	ldi	r30, 0xA2	; 162
      68:	f2 e2       	ldi	r31, 0x22	; 34
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a4 37       	cpi	r26, 0x74	; 116
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 15 0e 	call	0x1c2a	; 0x1c2a <main>
      7a:	0c 94 4f 11 	jmp	0x229e	; 0x229e <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 1d 04 	call	0x83a	; 0x83a <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a3 e6       	ldi	r26, 0x63	; 99
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 93 0e 	jmp	0x1d26	; 0x1d26 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 83 0e 	jmp	0x1d06	; 0x1d06 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 6e 06 	call	0xcdc	; 0xcdc <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 6e 06 	call	0xcdc	; 0xcdc <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 99 05 	call	0xb32	; 0xb32 <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 9f 0e 	jmp	0x1d3e	; 0x1d3e <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 83 0e 	jmp	0x1d06	; 0x1d06 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 6e 06 	call	0xcdc	; 0xcdc <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 6e 06 	call	0xcdc	; 0xcdc <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 99 05 	call	0xb32	; 0xb32 <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 9f 0e 	jmp	0x1d3e	; 0x1d3e <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 6e 06 	call	0xcdc	; 0xcdc <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 6e 06 	call	0xcdc	; 0xcdc <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__stack+0x2f>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__stack+0x45>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__stack+0x1d>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__stack+0x2f>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__stack+0x25>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__stack+0x2b>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__stack+0x45>
     484:	83 e6       	ldi	r24, 0x63	; 99
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__stack+0x1b7>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__stack+0x41>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__stack+0x1b7>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__stack+0x57>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__stack+0x1b7>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__stack+0xc3>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__stack+0xb7>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__stack+0xdf>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__stack+0xf9>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__stack+0x7f>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__stack+0x13d>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__stack+0x131>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__stack+0x10f>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__stack+0x15b>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__stack+0x143>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__stack+0x19d>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__stack+0x19d>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__stack+0x19d>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__stack+0x1a7>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 99 05 	call	0xb32	; 0xb32 <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 93 0e 	jmp	0x1d26	; 0x1d26 <__epilogue_restores__>

00000622 <__divsf3>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 7f 0e 	jmp	0x1cfe	; 0x1cfe <__prologue_saves__+0x10>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	b9 e0       	ldi	r27, 0x09	; 9
     640:	eb 2e       	mov	r14, r27
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 6e 06 	call	0xcdc	; 0xcdc <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 6e 06 	call	0xcdc	; 0xcdc <__unpack_f>
     662:	29 85       	ldd	r18, Y+9	; 0x09
     664:	22 30       	cpi	r18, 0x02	; 2
     666:	08 f4       	brcc	.+2      	; 0x66a <__divsf3+0x48>
     668:	7e c0       	rjmp	.+252    	; 0x766 <__divsf3+0x144>
     66a:	39 89       	ldd	r19, Y+17	; 0x11
     66c:	32 30       	cpi	r19, 0x02	; 2
     66e:	10 f4       	brcc	.+4      	; 0x674 <__divsf3+0x52>
     670:	b8 01       	movw	r22, r16
     672:	7c c0       	rjmp	.+248    	; 0x76c <__divsf3+0x14a>
     674:	8a 85       	ldd	r24, Y+10	; 0x0a
     676:	9a 89       	ldd	r25, Y+18	; 0x12
     678:	89 27       	eor	r24, r25
     67a:	8a 87       	std	Y+10, r24	; 0x0a
     67c:	24 30       	cpi	r18, 0x04	; 4
     67e:	11 f0       	breq	.+4      	; 0x684 <__divsf3+0x62>
     680:	22 30       	cpi	r18, 0x02	; 2
     682:	31 f4       	brne	.+12     	; 0x690 <__divsf3+0x6e>
     684:	23 17       	cp	r18, r19
     686:	09 f0       	breq	.+2      	; 0x68a <__divsf3+0x68>
     688:	6e c0       	rjmp	.+220    	; 0x766 <__divsf3+0x144>
     68a:	63 e6       	ldi	r22, 0x63	; 99
     68c:	70 e0       	ldi	r23, 0x00	; 0
     68e:	6e c0       	rjmp	.+220    	; 0x76c <__divsf3+0x14a>
     690:	34 30       	cpi	r19, 0x04	; 4
     692:	39 f4       	brne	.+14     	; 0x6a2 <__divsf3+0x80>
     694:	1d 86       	std	Y+13, r1	; 0x0d
     696:	1e 86       	std	Y+14, r1	; 0x0e
     698:	1f 86       	std	Y+15, r1	; 0x0f
     69a:	18 8a       	std	Y+16, r1	; 0x10
     69c:	1c 86       	std	Y+12, r1	; 0x0c
     69e:	1b 86       	std	Y+11, r1	; 0x0b
     6a0:	04 c0       	rjmp	.+8      	; 0x6aa <__divsf3+0x88>
     6a2:	32 30       	cpi	r19, 0x02	; 2
     6a4:	21 f4       	brne	.+8      	; 0x6ae <__divsf3+0x8c>
     6a6:	84 e0       	ldi	r24, 0x04	; 4
     6a8:	89 87       	std	Y+9, r24	; 0x09
     6aa:	b7 01       	movw	r22, r14
     6ac:	5f c0       	rjmp	.+190    	; 0x76c <__divsf3+0x14a>
     6ae:	2b 85       	ldd	r18, Y+11	; 0x0b
     6b0:	3c 85       	ldd	r19, Y+12	; 0x0c
     6b2:	8b 89       	ldd	r24, Y+19	; 0x13
     6b4:	9c 89       	ldd	r25, Y+20	; 0x14
     6b6:	28 1b       	sub	r18, r24
     6b8:	39 0b       	sbc	r19, r25
     6ba:	3c 87       	std	Y+12, r19	; 0x0c
     6bc:	2b 87       	std	Y+11, r18	; 0x0b
     6be:	ed 84       	ldd	r14, Y+13	; 0x0d
     6c0:	fe 84       	ldd	r15, Y+14	; 0x0e
     6c2:	0f 85       	ldd	r16, Y+15	; 0x0f
     6c4:	18 89       	ldd	r17, Y+16	; 0x10
     6c6:	ad 88       	ldd	r10, Y+21	; 0x15
     6c8:	be 88       	ldd	r11, Y+22	; 0x16
     6ca:	cf 88       	ldd	r12, Y+23	; 0x17
     6cc:	d8 8c       	ldd	r13, Y+24	; 0x18
     6ce:	ea 14       	cp	r14, r10
     6d0:	fb 04       	cpc	r15, r11
     6d2:	0c 05       	cpc	r16, r12
     6d4:	1d 05       	cpc	r17, r13
     6d6:	40 f4       	brcc	.+16     	; 0x6e8 <__divsf3+0xc6>
     6d8:	ee 0c       	add	r14, r14
     6da:	ff 1c       	adc	r15, r15
     6dc:	00 1f       	adc	r16, r16
     6de:	11 1f       	adc	r17, r17
     6e0:	21 50       	subi	r18, 0x01	; 1
     6e2:	30 40       	sbci	r19, 0x00	; 0
     6e4:	3c 87       	std	Y+12, r19	; 0x0c
     6e6:	2b 87       	std	Y+11, r18	; 0x0b
     6e8:	20 e0       	ldi	r18, 0x00	; 0
     6ea:	30 e0       	ldi	r19, 0x00	; 0
     6ec:	40 e0       	ldi	r20, 0x00	; 0
     6ee:	50 e0       	ldi	r21, 0x00	; 0
     6f0:	80 e0       	ldi	r24, 0x00	; 0
     6f2:	90 e0       	ldi	r25, 0x00	; 0
     6f4:	a0 e0       	ldi	r26, 0x00	; 0
     6f6:	b0 e4       	ldi	r27, 0x40	; 64
     6f8:	60 e0       	ldi	r22, 0x00	; 0
     6fa:	70 e0       	ldi	r23, 0x00	; 0
     6fc:	ea 14       	cp	r14, r10
     6fe:	fb 04       	cpc	r15, r11
     700:	0c 05       	cpc	r16, r12
     702:	1d 05       	cpc	r17, r13
     704:	40 f0       	brcs	.+16     	; 0x716 <__divsf3+0xf4>
     706:	28 2b       	or	r18, r24
     708:	39 2b       	or	r19, r25
     70a:	4a 2b       	or	r20, r26
     70c:	5b 2b       	or	r21, r27
     70e:	ea 18       	sub	r14, r10
     710:	fb 08       	sbc	r15, r11
     712:	0c 09       	sbc	r16, r12
     714:	1d 09       	sbc	r17, r13
     716:	b6 95       	lsr	r27
     718:	a7 95       	ror	r26
     71a:	97 95       	ror	r25
     71c:	87 95       	ror	r24
     71e:	ee 0c       	add	r14, r14
     720:	ff 1c       	adc	r15, r15
     722:	00 1f       	adc	r16, r16
     724:	11 1f       	adc	r17, r17
     726:	6f 5f       	subi	r22, 0xFF	; 255
     728:	7f 4f       	sbci	r23, 0xFF	; 255
     72a:	6f 31       	cpi	r22, 0x1F	; 31
     72c:	71 05       	cpc	r23, r1
     72e:	31 f7       	brne	.-52     	; 0x6fc <__divsf3+0xda>
     730:	da 01       	movw	r26, r20
     732:	c9 01       	movw	r24, r18
     734:	8f 77       	andi	r24, 0x7F	; 127
     736:	90 70       	andi	r25, 0x00	; 0
     738:	a0 70       	andi	r26, 0x00	; 0
     73a:	b0 70       	andi	r27, 0x00	; 0
     73c:	80 34       	cpi	r24, 0x40	; 64
     73e:	91 05       	cpc	r25, r1
     740:	a1 05       	cpc	r26, r1
     742:	b1 05       	cpc	r27, r1
     744:	61 f4       	brne	.+24     	; 0x75e <__divsf3+0x13c>
     746:	27 fd       	sbrc	r18, 7
     748:	0a c0       	rjmp	.+20     	; 0x75e <__divsf3+0x13c>
     74a:	e1 14       	cp	r14, r1
     74c:	f1 04       	cpc	r15, r1
     74e:	01 05       	cpc	r16, r1
     750:	11 05       	cpc	r17, r1
     752:	29 f0       	breq	.+10     	; 0x75e <__divsf3+0x13c>
     754:	20 5c       	subi	r18, 0xC0	; 192
     756:	3f 4f       	sbci	r19, 0xFF	; 255
     758:	4f 4f       	sbci	r20, 0xFF	; 255
     75a:	5f 4f       	sbci	r21, 0xFF	; 255
     75c:	20 78       	andi	r18, 0x80	; 128
     75e:	2d 87       	std	Y+13, r18	; 0x0d
     760:	3e 87       	std	Y+14, r19	; 0x0e
     762:	4f 87       	std	Y+15, r20	; 0x0f
     764:	58 8b       	std	Y+16, r21	; 0x10
     766:	be 01       	movw	r22, r28
     768:	67 5f       	subi	r22, 0xF7	; 247
     76a:	7f 4f       	sbci	r23, 0xFF	; 255
     76c:	cb 01       	movw	r24, r22
     76e:	0e 94 99 05 	call	0xb32	; 0xb32 <__pack_f>
     772:	68 96       	adiw	r28, 0x18	; 24
     774:	ea e0       	ldi	r30, 0x0A	; 10
     776:	0c 94 9b 0e 	jmp	0x1d36	; 0x1d36 <__epilogue_restores__+0x10>

0000077a <__eqsf2>:
     77a:	a8 e1       	ldi	r26, 0x18	; 24
     77c:	b0 e0       	ldi	r27, 0x00	; 0
     77e:	e3 ec       	ldi	r30, 0xC3	; 195
     780:	f3 e0       	ldi	r31, 0x03	; 3
     782:	0c 94 83 0e 	jmp	0x1d06	; 0x1d06 <__prologue_saves__+0x18>
     786:	69 83       	std	Y+1, r22	; 0x01
     788:	7a 83       	std	Y+2, r23	; 0x02
     78a:	8b 83       	std	Y+3, r24	; 0x03
     78c:	9c 83       	std	Y+4, r25	; 0x04
     78e:	2d 83       	std	Y+5, r18	; 0x05
     790:	3e 83       	std	Y+6, r19	; 0x06
     792:	4f 83       	std	Y+7, r20	; 0x07
     794:	58 87       	std	Y+8, r21	; 0x08
     796:	89 e0       	ldi	r24, 0x09	; 9
     798:	e8 2e       	mov	r14, r24
     79a:	f1 2c       	mov	r15, r1
     79c:	ec 0e       	add	r14, r28
     79e:	fd 1e       	adc	r15, r29
     7a0:	ce 01       	movw	r24, r28
     7a2:	01 96       	adiw	r24, 0x01	; 1
     7a4:	b7 01       	movw	r22, r14
     7a6:	0e 94 6e 06 	call	0xcdc	; 0xcdc <__unpack_f>
     7aa:	8e 01       	movw	r16, r28
     7ac:	0f 5e       	subi	r16, 0xEF	; 239
     7ae:	1f 4f       	sbci	r17, 0xFF	; 255
     7b0:	ce 01       	movw	r24, r28
     7b2:	05 96       	adiw	r24, 0x05	; 5
     7b4:	b8 01       	movw	r22, r16
     7b6:	0e 94 6e 06 	call	0xcdc	; 0xcdc <__unpack_f>
     7ba:	89 85       	ldd	r24, Y+9	; 0x09
     7bc:	82 30       	cpi	r24, 0x02	; 2
     7be:	40 f0       	brcs	.+16     	; 0x7d0 <__eqsf2+0x56>
     7c0:	89 89       	ldd	r24, Y+17	; 0x11
     7c2:	82 30       	cpi	r24, 0x02	; 2
     7c4:	28 f0       	brcs	.+10     	; 0x7d0 <__eqsf2+0x56>
     7c6:	c7 01       	movw	r24, r14
     7c8:	b8 01       	movw	r22, r16
     7ca:	0e 94 e6 06 	call	0xdcc	; 0xdcc <__fpcmp_parts_f>
     7ce:	01 c0       	rjmp	.+2      	; 0x7d2 <__eqsf2+0x58>
     7d0:	81 e0       	ldi	r24, 0x01	; 1
     7d2:	68 96       	adiw	r28, 0x18	; 24
     7d4:	e6 e0       	ldi	r30, 0x06	; 6
     7d6:	0c 94 9f 0e 	jmp	0x1d3e	; 0x1d3e <__epilogue_restores__+0x18>

000007da <__gtsf2>:
     7da:	a8 e1       	ldi	r26, 0x18	; 24
     7dc:	b0 e0       	ldi	r27, 0x00	; 0
     7de:	e3 ef       	ldi	r30, 0xF3	; 243
     7e0:	f3 e0       	ldi	r31, 0x03	; 3
     7e2:	0c 94 83 0e 	jmp	0x1d06	; 0x1d06 <__prologue_saves__+0x18>
     7e6:	69 83       	std	Y+1, r22	; 0x01
     7e8:	7a 83       	std	Y+2, r23	; 0x02
     7ea:	8b 83       	std	Y+3, r24	; 0x03
     7ec:	9c 83       	std	Y+4, r25	; 0x04
     7ee:	2d 83       	std	Y+5, r18	; 0x05
     7f0:	3e 83       	std	Y+6, r19	; 0x06
     7f2:	4f 83       	std	Y+7, r20	; 0x07
     7f4:	58 87       	std	Y+8, r21	; 0x08
     7f6:	89 e0       	ldi	r24, 0x09	; 9
     7f8:	e8 2e       	mov	r14, r24
     7fa:	f1 2c       	mov	r15, r1
     7fc:	ec 0e       	add	r14, r28
     7fe:	fd 1e       	adc	r15, r29
     800:	ce 01       	movw	r24, r28
     802:	01 96       	adiw	r24, 0x01	; 1
     804:	b7 01       	movw	r22, r14
     806:	0e 94 6e 06 	call	0xcdc	; 0xcdc <__unpack_f>
     80a:	8e 01       	movw	r16, r28
     80c:	0f 5e       	subi	r16, 0xEF	; 239
     80e:	1f 4f       	sbci	r17, 0xFF	; 255
     810:	ce 01       	movw	r24, r28
     812:	05 96       	adiw	r24, 0x05	; 5
     814:	b8 01       	movw	r22, r16
     816:	0e 94 6e 06 	call	0xcdc	; 0xcdc <__unpack_f>
     81a:	89 85       	ldd	r24, Y+9	; 0x09
     81c:	82 30       	cpi	r24, 0x02	; 2
     81e:	40 f0       	brcs	.+16     	; 0x830 <__gtsf2+0x56>
     820:	89 89       	ldd	r24, Y+17	; 0x11
     822:	82 30       	cpi	r24, 0x02	; 2
     824:	28 f0       	brcs	.+10     	; 0x830 <__gtsf2+0x56>
     826:	c7 01       	movw	r24, r14
     828:	b8 01       	movw	r22, r16
     82a:	0e 94 e6 06 	call	0xdcc	; 0xdcc <__fpcmp_parts_f>
     82e:	01 c0       	rjmp	.+2      	; 0x832 <__gtsf2+0x58>
     830:	8f ef       	ldi	r24, 0xFF	; 255
     832:	68 96       	adiw	r28, 0x18	; 24
     834:	e6 e0       	ldi	r30, 0x06	; 6
     836:	0c 94 9f 0e 	jmp	0x1d3e	; 0x1d3e <__epilogue_restores__+0x18>

0000083a <__gesf2>:
     83a:	a8 e1       	ldi	r26, 0x18	; 24
     83c:	b0 e0       	ldi	r27, 0x00	; 0
     83e:	e3 e2       	ldi	r30, 0x23	; 35
     840:	f4 e0       	ldi	r31, 0x04	; 4
     842:	0c 94 83 0e 	jmp	0x1d06	; 0x1d06 <__prologue_saves__+0x18>
     846:	69 83       	std	Y+1, r22	; 0x01
     848:	7a 83       	std	Y+2, r23	; 0x02
     84a:	8b 83       	std	Y+3, r24	; 0x03
     84c:	9c 83       	std	Y+4, r25	; 0x04
     84e:	2d 83       	std	Y+5, r18	; 0x05
     850:	3e 83       	std	Y+6, r19	; 0x06
     852:	4f 83       	std	Y+7, r20	; 0x07
     854:	58 87       	std	Y+8, r21	; 0x08
     856:	89 e0       	ldi	r24, 0x09	; 9
     858:	e8 2e       	mov	r14, r24
     85a:	f1 2c       	mov	r15, r1
     85c:	ec 0e       	add	r14, r28
     85e:	fd 1e       	adc	r15, r29
     860:	ce 01       	movw	r24, r28
     862:	01 96       	adiw	r24, 0x01	; 1
     864:	b7 01       	movw	r22, r14
     866:	0e 94 6e 06 	call	0xcdc	; 0xcdc <__unpack_f>
     86a:	8e 01       	movw	r16, r28
     86c:	0f 5e       	subi	r16, 0xEF	; 239
     86e:	1f 4f       	sbci	r17, 0xFF	; 255
     870:	ce 01       	movw	r24, r28
     872:	05 96       	adiw	r24, 0x05	; 5
     874:	b8 01       	movw	r22, r16
     876:	0e 94 6e 06 	call	0xcdc	; 0xcdc <__unpack_f>
     87a:	89 85       	ldd	r24, Y+9	; 0x09
     87c:	82 30       	cpi	r24, 0x02	; 2
     87e:	40 f0       	brcs	.+16     	; 0x890 <__gesf2+0x56>
     880:	89 89       	ldd	r24, Y+17	; 0x11
     882:	82 30       	cpi	r24, 0x02	; 2
     884:	28 f0       	brcs	.+10     	; 0x890 <__gesf2+0x56>
     886:	c7 01       	movw	r24, r14
     888:	b8 01       	movw	r22, r16
     88a:	0e 94 e6 06 	call	0xdcc	; 0xdcc <__fpcmp_parts_f>
     88e:	01 c0       	rjmp	.+2      	; 0x892 <__gesf2+0x58>
     890:	8f ef       	ldi	r24, 0xFF	; 255
     892:	68 96       	adiw	r28, 0x18	; 24
     894:	e6 e0       	ldi	r30, 0x06	; 6
     896:	0c 94 9f 0e 	jmp	0x1d3e	; 0x1d3e <__epilogue_restores__+0x18>

0000089a <__ltsf2>:
     89a:	a8 e1       	ldi	r26, 0x18	; 24
     89c:	b0 e0       	ldi	r27, 0x00	; 0
     89e:	e3 e5       	ldi	r30, 0x53	; 83
     8a0:	f4 e0       	ldi	r31, 0x04	; 4
     8a2:	0c 94 83 0e 	jmp	0x1d06	; 0x1d06 <__prologue_saves__+0x18>
     8a6:	69 83       	std	Y+1, r22	; 0x01
     8a8:	7a 83       	std	Y+2, r23	; 0x02
     8aa:	8b 83       	std	Y+3, r24	; 0x03
     8ac:	9c 83       	std	Y+4, r25	; 0x04
     8ae:	2d 83       	std	Y+5, r18	; 0x05
     8b0:	3e 83       	std	Y+6, r19	; 0x06
     8b2:	4f 83       	std	Y+7, r20	; 0x07
     8b4:	58 87       	std	Y+8, r21	; 0x08
     8b6:	89 e0       	ldi	r24, 0x09	; 9
     8b8:	e8 2e       	mov	r14, r24
     8ba:	f1 2c       	mov	r15, r1
     8bc:	ec 0e       	add	r14, r28
     8be:	fd 1e       	adc	r15, r29
     8c0:	ce 01       	movw	r24, r28
     8c2:	01 96       	adiw	r24, 0x01	; 1
     8c4:	b7 01       	movw	r22, r14
     8c6:	0e 94 6e 06 	call	0xcdc	; 0xcdc <__unpack_f>
     8ca:	8e 01       	movw	r16, r28
     8cc:	0f 5e       	subi	r16, 0xEF	; 239
     8ce:	1f 4f       	sbci	r17, 0xFF	; 255
     8d0:	ce 01       	movw	r24, r28
     8d2:	05 96       	adiw	r24, 0x05	; 5
     8d4:	b8 01       	movw	r22, r16
     8d6:	0e 94 6e 06 	call	0xcdc	; 0xcdc <__unpack_f>
     8da:	89 85       	ldd	r24, Y+9	; 0x09
     8dc:	82 30       	cpi	r24, 0x02	; 2
     8de:	40 f0       	brcs	.+16     	; 0x8f0 <__ltsf2+0x56>
     8e0:	89 89       	ldd	r24, Y+17	; 0x11
     8e2:	82 30       	cpi	r24, 0x02	; 2
     8e4:	28 f0       	brcs	.+10     	; 0x8f0 <__ltsf2+0x56>
     8e6:	c7 01       	movw	r24, r14
     8e8:	b8 01       	movw	r22, r16
     8ea:	0e 94 e6 06 	call	0xdcc	; 0xdcc <__fpcmp_parts_f>
     8ee:	01 c0       	rjmp	.+2      	; 0x8f2 <__ltsf2+0x58>
     8f0:	81 e0       	ldi	r24, 0x01	; 1
     8f2:	68 96       	adiw	r28, 0x18	; 24
     8f4:	e6 e0       	ldi	r30, 0x06	; 6
     8f6:	0c 94 9f 0e 	jmp	0x1d3e	; 0x1d3e <__epilogue_restores__+0x18>

000008fa <__fixsfsi>:
     8fa:	ac e0       	ldi	r26, 0x0C	; 12
     8fc:	b0 e0       	ldi	r27, 0x00	; 0
     8fe:	e3 e8       	ldi	r30, 0x83	; 131
     900:	f4 e0       	ldi	r31, 0x04	; 4
     902:	0c 94 87 0e 	jmp	0x1d0e	; 0x1d0e <__prologue_saves__+0x20>
     906:	69 83       	std	Y+1, r22	; 0x01
     908:	7a 83       	std	Y+2, r23	; 0x02
     90a:	8b 83       	std	Y+3, r24	; 0x03
     90c:	9c 83       	std	Y+4, r25	; 0x04
     90e:	ce 01       	movw	r24, r28
     910:	01 96       	adiw	r24, 0x01	; 1
     912:	be 01       	movw	r22, r28
     914:	6b 5f       	subi	r22, 0xFB	; 251
     916:	7f 4f       	sbci	r23, 0xFF	; 255
     918:	0e 94 6e 06 	call	0xcdc	; 0xcdc <__unpack_f>
     91c:	8d 81       	ldd	r24, Y+5	; 0x05
     91e:	82 30       	cpi	r24, 0x02	; 2
     920:	61 f1       	breq	.+88     	; 0x97a <__fixsfsi+0x80>
     922:	82 30       	cpi	r24, 0x02	; 2
     924:	50 f1       	brcs	.+84     	; 0x97a <__fixsfsi+0x80>
     926:	84 30       	cpi	r24, 0x04	; 4
     928:	21 f4       	brne	.+8      	; 0x932 <__fixsfsi+0x38>
     92a:	8e 81       	ldd	r24, Y+6	; 0x06
     92c:	88 23       	and	r24, r24
     92e:	51 f1       	breq	.+84     	; 0x984 <__fixsfsi+0x8a>
     930:	2e c0       	rjmp	.+92     	; 0x98e <__fixsfsi+0x94>
     932:	2f 81       	ldd	r18, Y+7	; 0x07
     934:	38 85       	ldd	r19, Y+8	; 0x08
     936:	37 fd       	sbrc	r19, 7
     938:	20 c0       	rjmp	.+64     	; 0x97a <__fixsfsi+0x80>
     93a:	6e 81       	ldd	r22, Y+6	; 0x06
     93c:	2f 31       	cpi	r18, 0x1F	; 31
     93e:	31 05       	cpc	r19, r1
     940:	1c f0       	brlt	.+6      	; 0x948 <__fixsfsi+0x4e>
     942:	66 23       	and	r22, r22
     944:	f9 f0       	breq	.+62     	; 0x984 <__fixsfsi+0x8a>
     946:	23 c0       	rjmp	.+70     	; 0x98e <__fixsfsi+0x94>
     948:	8e e1       	ldi	r24, 0x1E	; 30
     94a:	90 e0       	ldi	r25, 0x00	; 0
     94c:	82 1b       	sub	r24, r18
     94e:	93 0b       	sbc	r25, r19
     950:	29 85       	ldd	r18, Y+9	; 0x09
     952:	3a 85       	ldd	r19, Y+10	; 0x0a
     954:	4b 85       	ldd	r20, Y+11	; 0x0b
     956:	5c 85       	ldd	r21, Y+12	; 0x0c
     958:	04 c0       	rjmp	.+8      	; 0x962 <__fixsfsi+0x68>
     95a:	56 95       	lsr	r21
     95c:	47 95       	ror	r20
     95e:	37 95       	ror	r19
     960:	27 95       	ror	r18
     962:	8a 95       	dec	r24
     964:	d2 f7       	brpl	.-12     	; 0x95a <__fixsfsi+0x60>
     966:	66 23       	and	r22, r22
     968:	b1 f0       	breq	.+44     	; 0x996 <__fixsfsi+0x9c>
     96a:	50 95       	com	r21
     96c:	40 95       	com	r20
     96e:	30 95       	com	r19
     970:	21 95       	neg	r18
     972:	3f 4f       	sbci	r19, 0xFF	; 255
     974:	4f 4f       	sbci	r20, 0xFF	; 255
     976:	5f 4f       	sbci	r21, 0xFF	; 255
     978:	0e c0       	rjmp	.+28     	; 0x996 <__fixsfsi+0x9c>
     97a:	20 e0       	ldi	r18, 0x00	; 0
     97c:	30 e0       	ldi	r19, 0x00	; 0
     97e:	40 e0       	ldi	r20, 0x00	; 0
     980:	50 e0       	ldi	r21, 0x00	; 0
     982:	09 c0       	rjmp	.+18     	; 0x996 <__fixsfsi+0x9c>
     984:	2f ef       	ldi	r18, 0xFF	; 255
     986:	3f ef       	ldi	r19, 0xFF	; 255
     988:	4f ef       	ldi	r20, 0xFF	; 255
     98a:	5f e7       	ldi	r21, 0x7F	; 127
     98c:	04 c0       	rjmp	.+8      	; 0x996 <__fixsfsi+0x9c>
     98e:	20 e0       	ldi	r18, 0x00	; 0
     990:	30 e0       	ldi	r19, 0x00	; 0
     992:	40 e0       	ldi	r20, 0x00	; 0
     994:	50 e8       	ldi	r21, 0x80	; 128
     996:	b9 01       	movw	r22, r18
     998:	ca 01       	movw	r24, r20
     99a:	2c 96       	adiw	r28, 0x0c	; 12
     99c:	e2 e0       	ldi	r30, 0x02	; 2
     99e:	0c 94 a3 0e 	jmp	0x1d46	; 0x1d46 <__epilogue_restores__+0x20>

000009a2 <__floatunsisf>:
     9a2:	a8 e0       	ldi	r26, 0x08	; 8
     9a4:	b0 e0       	ldi	r27, 0x00	; 0
     9a6:	e7 ed       	ldi	r30, 0xD7	; 215
     9a8:	f4 e0       	ldi	r31, 0x04	; 4
     9aa:	0c 94 7f 0e 	jmp	0x1cfe	; 0x1cfe <__prologue_saves__+0x10>
     9ae:	7b 01       	movw	r14, r22
     9b0:	8c 01       	movw	r16, r24
     9b2:	61 15       	cp	r22, r1
     9b4:	71 05       	cpc	r23, r1
     9b6:	81 05       	cpc	r24, r1
     9b8:	91 05       	cpc	r25, r1
     9ba:	19 f4       	brne	.+6      	; 0x9c2 <__floatunsisf+0x20>
     9bc:	82 e0       	ldi	r24, 0x02	; 2
     9be:	89 83       	std	Y+1, r24	; 0x01
     9c0:	60 c0       	rjmp	.+192    	; 0xa82 <__floatunsisf+0xe0>
     9c2:	83 e0       	ldi	r24, 0x03	; 3
     9c4:	89 83       	std	Y+1, r24	; 0x01
     9c6:	8e e1       	ldi	r24, 0x1E	; 30
     9c8:	c8 2e       	mov	r12, r24
     9ca:	d1 2c       	mov	r13, r1
     9cc:	dc 82       	std	Y+4, r13	; 0x04
     9ce:	cb 82       	std	Y+3, r12	; 0x03
     9d0:	ed 82       	std	Y+5, r14	; 0x05
     9d2:	fe 82       	std	Y+6, r15	; 0x06
     9d4:	0f 83       	std	Y+7, r16	; 0x07
     9d6:	18 87       	std	Y+8, r17	; 0x08
     9d8:	c8 01       	movw	r24, r16
     9da:	b7 01       	movw	r22, r14
     9dc:	0e 94 4a 05 	call	0xa94	; 0xa94 <__clzsi2>
     9e0:	fc 01       	movw	r30, r24
     9e2:	31 97       	sbiw	r30, 0x01	; 1
     9e4:	f7 ff       	sbrs	r31, 7
     9e6:	3b c0       	rjmp	.+118    	; 0xa5e <__floatunsisf+0xbc>
     9e8:	22 27       	eor	r18, r18
     9ea:	33 27       	eor	r19, r19
     9ec:	2e 1b       	sub	r18, r30
     9ee:	3f 0b       	sbc	r19, r31
     9f0:	57 01       	movw	r10, r14
     9f2:	68 01       	movw	r12, r16
     9f4:	02 2e       	mov	r0, r18
     9f6:	04 c0       	rjmp	.+8      	; 0xa00 <__floatunsisf+0x5e>
     9f8:	d6 94       	lsr	r13
     9fa:	c7 94       	ror	r12
     9fc:	b7 94       	ror	r11
     9fe:	a7 94       	ror	r10
     a00:	0a 94       	dec	r0
     a02:	d2 f7       	brpl	.-12     	; 0x9f8 <__floatunsisf+0x56>
     a04:	40 e0       	ldi	r20, 0x00	; 0
     a06:	50 e0       	ldi	r21, 0x00	; 0
     a08:	60 e0       	ldi	r22, 0x00	; 0
     a0a:	70 e0       	ldi	r23, 0x00	; 0
     a0c:	81 e0       	ldi	r24, 0x01	; 1
     a0e:	90 e0       	ldi	r25, 0x00	; 0
     a10:	a0 e0       	ldi	r26, 0x00	; 0
     a12:	b0 e0       	ldi	r27, 0x00	; 0
     a14:	04 c0       	rjmp	.+8      	; 0xa1e <__floatunsisf+0x7c>
     a16:	88 0f       	add	r24, r24
     a18:	99 1f       	adc	r25, r25
     a1a:	aa 1f       	adc	r26, r26
     a1c:	bb 1f       	adc	r27, r27
     a1e:	2a 95       	dec	r18
     a20:	d2 f7       	brpl	.-12     	; 0xa16 <__floatunsisf+0x74>
     a22:	01 97       	sbiw	r24, 0x01	; 1
     a24:	a1 09       	sbc	r26, r1
     a26:	b1 09       	sbc	r27, r1
     a28:	8e 21       	and	r24, r14
     a2a:	9f 21       	and	r25, r15
     a2c:	a0 23       	and	r26, r16
     a2e:	b1 23       	and	r27, r17
     a30:	00 97       	sbiw	r24, 0x00	; 0
     a32:	a1 05       	cpc	r26, r1
     a34:	b1 05       	cpc	r27, r1
     a36:	21 f0       	breq	.+8      	; 0xa40 <__floatunsisf+0x9e>
     a38:	41 e0       	ldi	r20, 0x01	; 1
     a3a:	50 e0       	ldi	r21, 0x00	; 0
     a3c:	60 e0       	ldi	r22, 0x00	; 0
     a3e:	70 e0       	ldi	r23, 0x00	; 0
     a40:	4a 29       	or	r20, r10
     a42:	5b 29       	or	r21, r11
     a44:	6c 29       	or	r22, r12
     a46:	7d 29       	or	r23, r13
     a48:	4d 83       	std	Y+5, r20	; 0x05
     a4a:	5e 83       	std	Y+6, r21	; 0x06
     a4c:	6f 83       	std	Y+7, r22	; 0x07
     a4e:	78 87       	std	Y+8, r23	; 0x08
     a50:	8e e1       	ldi	r24, 0x1E	; 30
     a52:	90 e0       	ldi	r25, 0x00	; 0
     a54:	8e 1b       	sub	r24, r30
     a56:	9f 0b       	sbc	r25, r31
     a58:	9c 83       	std	Y+4, r25	; 0x04
     a5a:	8b 83       	std	Y+3, r24	; 0x03
     a5c:	12 c0       	rjmp	.+36     	; 0xa82 <__floatunsisf+0xe0>
     a5e:	30 97       	sbiw	r30, 0x00	; 0
     a60:	81 f0       	breq	.+32     	; 0xa82 <__floatunsisf+0xe0>
     a62:	0e 2e       	mov	r0, r30
     a64:	04 c0       	rjmp	.+8      	; 0xa6e <__floatunsisf+0xcc>
     a66:	ee 0c       	add	r14, r14
     a68:	ff 1c       	adc	r15, r15
     a6a:	00 1f       	adc	r16, r16
     a6c:	11 1f       	adc	r17, r17
     a6e:	0a 94       	dec	r0
     a70:	d2 f7       	brpl	.-12     	; 0xa66 <__floatunsisf+0xc4>
     a72:	ed 82       	std	Y+5, r14	; 0x05
     a74:	fe 82       	std	Y+6, r15	; 0x06
     a76:	0f 83       	std	Y+7, r16	; 0x07
     a78:	18 87       	std	Y+8, r17	; 0x08
     a7a:	ce 1a       	sub	r12, r30
     a7c:	df 0a       	sbc	r13, r31
     a7e:	dc 82       	std	Y+4, r13	; 0x04
     a80:	cb 82       	std	Y+3, r12	; 0x03
     a82:	1a 82       	std	Y+2, r1	; 0x02
     a84:	ce 01       	movw	r24, r28
     a86:	01 96       	adiw	r24, 0x01	; 1
     a88:	0e 94 99 05 	call	0xb32	; 0xb32 <__pack_f>
     a8c:	28 96       	adiw	r28, 0x08	; 8
     a8e:	ea e0       	ldi	r30, 0x0A	; 10
     a90:	0c 94 9b 0e 	jmp	0x1d36	; 0x1d36 <__epilogue_restores__+0x10>

00000a94 <__clzsi2>:
     a94:	ef 92       	push	r14
     a96:	ff 92       	push	r15
     a98:	0f 93       	push	r16
     a9a:	1f 93       	push	r17
     a9c:	7b 01       	movw	r14, r22
     a9e:	8c 01       	movw	r16, r24
     aa0:	80 e0       	ldi	r24, 0x00	; 0
     aa2:	e8 16       	cp	r14, r24
     aa4:	80 e0       	ldi	r24, 0x00	; 0
     aa6:	f8 06       	cpc	r15, r24
     aa8:	81 e0       	ldi	r24, 0x01	; 1
     aaa:	08 07       	cpc	r16, r24
     aac:	80 e0       	ldi	r24, 0x00	; 0
     aae:	18 07       	cpc	r17, r24
     ab0:	88 f4       	brcc	.+34     	; 0xad4 <__clzsi2+0x40>
     ab2:	8f ef       	ldi	r24, 0xFF	; 255
     ab4:	e8 16       	cp	r14, r24
     ab6:	f1 04       	cpc	r15, r1
     ab8:	01 05       	cpc	r16, r1
     aba:	11 05       	cpc	r17, r1
     abc:	31 f0       	breq	.+12     	; 0xaca <__clzsi2+0x36>
     abe:	28 f0       	brcs	.+10     	; 0xaca <__clzsi2+0x36>
     ac0:	88 e0       	ldi	r24, 0x08	; 8
     ac2:	90 e0       	ldi	r25, 0x00	; 0
     ac4:	a0 e0       	ldi	r26, 0x00	; 0
     ac6:	b0 e0       	ldi	r27, 0x00	; 0
     ac8:	17 c0       	rjmp	.+46     	; 0xaf8 <__clzsi2+0x64>
     aca:	80 e0       	ldi	r24, 0x00	; 0
     acc:	90 e0       	ldi	r25, 0x00	; 0
     ace:	a0 e0       	ldi	r26, 0x00	; 0
     ad0:	b0 e0       	ldi	r27, 0x00	; 0
     ad2:	12 c0       	rjmp	.+36     	; 0xaf8 <__clzsi2+0x64>
     ad4:	80 e0       	ldi	r24, 0x00	; 0
     ad6:	e8 16       	cp	r14, r24
     ad8:	80 e0       	ldi	r24, 0x00	; 0
     ada:	f8 06       	cpc	r15, r24
     adc:	80 e0       	ldi	r24, 0x00	; 0
     ade:	08 07       	cpc	r16, r24
     ae0:	81 e0       	ldi	r24, 0x01	; 1
     ae2:	18 07       	cpc	r17, r24
     ae4:	28 f0       	brcs	.+10     	; 0xaf0 <__clzsi2+0x5c>
     ae6:	88 e1       	ldi	r24, 0x18	; 24
     ae8:	90 e0       	ldi	r25, 0x00	; 0
     aea:	a0 e0       	ldi	r26, 0x00	; 0
     aec:	b0 e0       	ldi	r27, 0x00	; 0
     aee:	04 c0       	rjmp	.+8      	; 0xaf8 <__clzsi2+0x64>
     af0:	80 e1       	ldi	r24, 0x10	; 16
     af2:	90 e0       	ldi	r25, 0x00	; 0
     af4:	a0 e0       	ldi	r26, 0x00	; 0
     af6:	b0 e0       	ldi	r27, 0x00	; 0
     af8:	20 e2       	ldi	r18, 0x20	; 32
     afa:	30 e0       	ldi	r19, 0x00	; 0
     afc:	40 e0       	ldi	r20, 0x00	; 0
     afe:	50 e0       	ldi	r21, 0x00	; 0
     b00:	28 1b       	sub	r18, r24
     b02:	39 0b       	sbc	r19, r25
     b04:	4a 0b       	sbc	r20, r26
     b06:	5b 0b       	sbc	r21, r27
     b08:	04 c0       	rjmp	.+8      	; 0xb12 <__clzsi2+0x7e>
     b0a:	16 95       	lsr	r17
     b0c:	07 95       	ror	r16
     b0e:	f7 94       	ror	r15
     b10:	e7 94       	ror	r14
     b12:	8a 95       	dec	r24
     b14:	d2 f7       	brpl	.-12     	; 0xb0a <__clzsi2+0x76>
     b16:	f7 01       	movw	r30, r14
     b18:	e5 59       	subi	r30, 0x95	; 149
     b1a:	ff 4f       	sbci	r31, 0xFF	; 255
     b1c:	80 81       	ld	r24, Z
     b1e:	28 1b       	sub	r18, r24
     b20:	31 09       	sbc	r19, r1
     b22:	41 09       	sbc	r20, r1
     b24:	51 09       	sbc	r21, r1
     b26:	c9 01       	movw	r24, r18
     b28:	1f 91       	pop	r17
     b2a:	0f 91       	pop	r16
     b2c:	ff 90       	pop	r15
     b2e:	ef 90       	pop	r14
     b30:	08 95       	ret

00000b32 <__pack_f>:
     b32:	df 92       	push	r13
     b34:	ef 92       	push	r14
     b36:	ff 92       	push	r15
     b38:	0f 93       	push	r16
     b3a:	1f 93       	push	r17
     b3c:	fc 01       	movw	r30, r24
     b3e:	e4 80       	ldd	r14, Z+4	; 0x04
     b40:	f5 80       	ldd	r15, Z+5	; 0x05
     b42:	06 81       	ldd	r16, Z+6	; 0x06
     b44:	17 81       	ldd	r17, Z+7	; 0x07
     b46:	d1 80       	ldd	r13, Z+1	; 0x01
     b48:	80 81       	ld	r24, Z
     b4a:	82 30       	cpi	r24, 0x02	; 2
     b4c:	48 f4       	brcc	.+18     	; 0xb60 <__pack_f+0x2e>
     b4e:	80 e0       	ldi	r24, 0x00	; 0
     b50:	90 e0       	ldi	r25, 0x00	; 0
     b52:	a0 e1       	ldi	r26, 0x10	; 16
     b54:	b0 e0       	ldi	r27, 0x00	; 0
     b56:	e8 2a       	or	r14, r24
     b58:	f9 2a       	or	r15, r25
     b5a:	0a 2b       	or	r16, r26
     b5c:	1b 2b       	or	r17, r27
     b5e:	a5 c0       	rjmp	.+330    	; 0xcaa <__pack_f+0x178>
     b60:	84 30       	cpi	r24, 0x04	; 4
     b62:	09 f4       	brne	.+2      	; 0xb66 <__pack_f+0x34>
     b64:	9f c0       	rjmp	.+318    	; 0xca4 <__pack_f+0x172>
     b66:	82 30       	cpi	r24, 0x02	; 2
     b68:	21 f4       	brne	.+8      	; 0xb72 <__pack_f+0x40>
     b6a:	ee 24       	eor	r14, r14
     b6c:	ff 24       	eor	r15, r15
     b6e:	87 01       	movw	r16, r14
     b70:	05 c0       	rjmp	.+10     	; 0xb7c <__pack_f+0x4a>
     b72:	e1 14       	cp	r14, r1
     b74:	f1 04       	cpc	r15, r1
     b76:	01 05       	cpc	r16, r1
     b78:	11 05       	cpc	r17, r1
     b7a:	19 f4       	brne	.+6      	; 0xb82 <__pack_f+0x50>
     b7c:	e0 e0       	ldi	r30, 0x00	; 0
     b7e:	f0 e0       	ldi	r31, 0x00	; 0
     b80:	96 c0       	rjmp	.+300    	; 0xcae <__pack_f+0x17c>
     b82:	62 81       	ldd	r22, Z+2	; 0x02
     b84:	73 81       	ldd	r23, Z+3	; 0x03
     b86:	9f ef       	ldi	r25, 0xFF	; 255
     b88:	62 38       	cpi	r22, 0x82	; 130
     b8a:	79 07       	cpc	r23, r25
     b8c:	0c f0       	brlt	.+2      	; 0xb90 <__pack_f+0x5e>
     b8e:	5b c0       	rjmp	.+182    	; 0xc46 <__pack_f+0x114>
     b90:	22 e8       	ldi	r18, 0x82	; 130
     b92:	3f ef       	ldi	r19, 0xFF	; 255
     b94:	26 1b       	sub	r18, r22
     b96:	37 0b       	sbc	r19, r23
     b98:	2a 31       	cpi	r18, 0x1A	; 26
     b9a:	31 05       	cpc	r19, r1
     b9c:	2c f0       	brlt	.+10     	; 0xba8 <__pack_f+0x76>
     b9e:	20 e0       	ldi	r18, 0x00	; 0
     ba0:	30 e0       	ldi	r19, 0x00	; 0
     ba2:	40 e0       	ldi	r20, 0x00	; 0
     ba4:	50 e0       	ldi	r21, 0x00	; 0
     ba6:	2a c0       	rjmp	.+84     	; 0xbfc <__pack_f+0xca>
     ba8:	b8 01       	movw	r22, r16
     baa:	a7 01       	movw	r20, r14
     bac:	02 2e       	mov	r0, r18
     bae:	04 c0       	rjmp	.+8      	; 0xbb8 <__pack_f+0x86>
     bb0:	76 95       	lsr	r23
     bb2:	67 95       	ror	r22
     bb4:	57 95       	ror	r21
     bb6:	47 95       	ror	r20
     bb8:	0a 94       	dec	r0
     bba:	d2 f7       	brpl	.-12     	; 0xbb0 <__pack_f+0x7e>
     bbc:	81 e0       	ldi	r24, 0x01	; 1
     bbe:	90 e0       	ldi	r25, 0x00	; 0
     bc0:	a0 e0       	ldi	r26, 0x00	; 0
     bc2:	b0 e0       	ldi	r27, 0x00	; 0
     bc4:	04 c0       	rjmp	.+8      	; 0xbce <__pack_f+0x9c>
     bc6:	88 0f       	add	r24, r24
     bc8:	99 1f       	adc	r25, r25
     bca:	aa 1f       	adc	r26, r26
     bcc:	bb 1f       	adc	r27, r27
     bce:	2a 95       	dec	r18
     bd0:	d2 f7       	brpl	.-12     	; 0xbc6 <__pack_f+0x94>
     bd2:	01 97       	sbiw	r24, 0x01	; 1
     bd4:	a1 09       	sbc	r26, r1
     bd6:	b1 09       	sbc	r27, r1
     bd8:	8e 21       	and	r24, r14
     bda:	9f 21       	and	r25, r15
     bdc:	a0 23       	and	r26, r16
     bde:	b1 23       	and	r27, r17
     be0:	00 97       	sbiw	r24, 0x00	; 0
     be2:	a1 05       	cpc	r26, r1
     be4:	b1 05       	cpc	r27, r1
     be6:	21 f0       	breq	.+8      	; 0xbf0 <__pack_f+0xbe>
     be8:	81 e0       	ldi	r24, 0x01	; 1
     bea:	90 e0       	ldi	r25, 0x00	; 0
     bec:	a0 e0       	ldi	r26, 0x00	; 0
     bee:	b0 e0       	ldi	r27, 0x00	; 0
     bf0:	9a 01       	movw	r18, r20
     bf2:	ab 01       	movw	r20, r22
     bf4:	28 2b       	or	r18, r24
     bf6:	39 2b       	or	r19, r25
     bf8:	4a 2b       	or	r20, r26
     bfa:	5b 2b       	or	r21, r27
     bfc:	da 01       	movw	r26, r20
     bfe:	c9 01       	movw	r24, r18
     c00:	8f 77       	andi	r24, 0x7F	; 127
     c02:	90 70       	andi	r25, 0x00	; 0
     c04:	a0 70       	andi	r26, 0x00	; 0
     c06:	b0 70       	andi	r27, 0x00	; 0
     c08:	80 34       	cpi	r24, 0x40	; 64
     c0a:	91 05       	cpc	r25, r1
     c0c:	a1 05       	cpc	r26, r1
     c0e:	b1 05       	cpc	r27, r1
     c10:	39 f4       	brne	.+14     	; 0xc20 <__pack_f+0xee>
     c12:	27 ff       	sbrs	r18, 7
     c14:	09 c0       	rjmp	.+18     	; 0xc28 <__pack_f+0xf6>
     c16:	20 5c       	subi	r18, 0xC0	; 192
     c18:	3f 4f       	sbci	r19, 0xFF	; 255
     c1a:	4f 4f       	sbci	r20, 0xFF	; 255
     c1c:	5f 4f       	sbci	r21, 0xFF	; 255
     c1e:	04 c0       	rjmp	.+8      	; 0xc28 <__pack_f+0xf6>
     c20:	21 5c       	subi	r18, 0xC1	; 193
     c22:	3f 4f       	sbci	r19, 0xFF	; 255
     c24:	4f 4f       	sbci	r20, 0xFF	; 255
     c26:	5f 4f       	sbci	r21, 0xFF	; 255
     c28:	e0 e0       	ldi	r30, 0x00	; 0
     c2a:	f0 e0       	ldi	r31, 0x00	; 0
     c2c:	20 30       	cpi	r18, 0x00	; 0
     c2e:	a0 e0       	ldi	r26, 0x00	; 0
     c30:	3a 07       	cpc	r19, r26
     c32:	a0 e0       	ldi	r26, 0x00	; 0
     c34:	4a 07       	cpc	r20, r26
     c36:	a0 e4       	ldi	r26, 0x40	; 64
     c38:	5a 07       	cpc	r21, r26
     c3a:	10 f0       	brcs	.+4      	; 0xc40 <__pack_f+0x10e>
     c3c:	e1 e0       	ldi	r30, 0x01	; 1
     c3e:	f0 e0       	ldi	r31, 0x00	; 0
     c40:	79 01       	movw	r14, r18
     c42:	8a 01       	movw	r16, r20
     c44:	27 c0       	rjmp	.+78     	; 0xc94 <__pack_f+0x162>
     c46:	60 38       	cpi	r22, 0x80	; 128
     c48:	71 05       	cpc	r23, r1
     c4a:	64 f5       	brge	.+88     	; 0xca4 <__pack_f+0x172>
     c4c:	fb 01       	movw	r30, r22
     c4e:	e1 58       	subi	r30, 0x81	; 129
     c50:	ff 4f       	sbci	r31, 0xFF	; 255
     c52:	d8 01       	movw	r26, r16
     c54:	c7 01       	movw	r24, r14
     c56:	8f 77       	andi	r24, 0x7F	; 127
     c58:	90 70       	andi	r25, 0x00	; 0
     c5a:	a0 70       	andi	r26, 0x00	; 0
     c5c:	b0 70       	andi	r27, 0x00	; 0
     c5e:	80 34       	cpi	r24, 0x40	; 64
     c60:	91 05       	cpc	r25, r1
     c62:	a1 05       	cpc	r26, r1
     c64:	b1 05       	cpc	r27, r1
     c66:	39 f4       	brne	.+14     	; 0xc76 <__pack_f+0x144>
     c68:	e7 fe       	sbrs	r14, 7
     c6a:	0d c0       	rjmp	.+26     	; 0xc86 <__pack_f+0x154>
     c6c:	80 e4       	ldi	r24, 0x40	; 64
     c6e:	90 e0       	ldi	r25, 0x00	; 0
     c70:	a0 e0       	ldi	r26, 0x00	; 0
     c72:	b0 e0       	ldi	r27, 0x00	; 0
     c74:	04 c0       	rjmp	.+8      	; 0xc7e <__pack_f+0x14c>
     c76:	8f e3       	ldi	r24, 0x3F	; 63
     c78:	90 e0       	ldi	r25, 0x00	; 0
     c7a:	a0 e0       	ldi	r26, 0x00	; 0
     c7c:	b0 e0       	ldi	r27, 0x00	; 0
     c7e:	e8 0e       	add	r14, r24
     c80:	f9 1e       	adc	r15, r25
     c82:	0a 1f       	adc	r16, r26
     c84:	1b 1f       	adc	r17, r27
     c86:	17 ff       	sbrs	r17, 7
     c88:	05 c0       	rjmp	.+10     	; 0xc94 <__pack_f+0x162>
     c8a:	16 95       	lsr	r17
     c8c:	07 95       	ror	r16
     c8e:	f7 94       	ror	r15
     c90:	e7 94       	ror	r14
     c92:	31 96       	adiw	r30, 0x01	; 1
     c94:	87 e0       	ldi	r24, 0x07	; 7
     c96:	16 95       	lsr	r17
     c98:	07 95       	ror	r16
     c9a:	f7 94       	ror	r15
     c9c:	e7 94       	ror	r14
     c9e:	8a 95       	dec	r24
     ca0:	d1 f7       	brne	.-12     	; 0xc96 <__pack_f+0x164>
     ca2:	05 c0       	rjmp	.+10     	; 0xcae <__pack_f+0x17c>
     ca4:	ee 24       	eor	r14, r14
     ca6:	ff 24       	eor	r15, r15
     ca8:	87 01       	movw	r16, r14
     caa:	ef ef       	ldi	r30, 0xFF	; 255
     cac:	f0 e0       	ldi	r31, 0x00	; 0
     cae:	6e 2f       	mov	r22, r30
     cb0:	67 95       	ror	r22
     cb2:	66 27       	eor	r22, r22
     cb4:	67 95       	ror	r22
     cb6:	90 2f       	mov	r25, r16
     cb8:	9f 77       	andi	r25, 0x7F	; 127
     cba:	d7 94       	ror	r13
     cbc:	dd 24       	eor	r13, r13
     cbe:	d7 94       	ror	r13
     cc0:	8e 2f       	mov	r24, r30
     cc2:	86 95       	lsr	r24
     cc4:	49 2f       	mov	r20, r25
     cc6:	46 2b       	or	r20, r22
     cc8:	58 2f       	mov	r21, r24
     cca:	5d 29       	or	r21, r13
     ccc:	b7 01       	movw	r22, r14
     cce:	ca 01       	movw	r24, r20
     cd0:	1f 91       	pop	r17
     cd2:	0f 91       	pop	r16
     cd4:	ff 90       	pop	r15
     cd6:	ef 90       	pop	r14
     cd8:	df 90       	pop	r13
     cda:	08 95       	ret

00000cdc <__unpack_f>:
     cdc:	fc 01       	movw	r30, r24
     cde:	db 01       	movw	r26, r22
     ce0:	40 81       	ld	r20, Z
     ce2:	51 81       	ldd	r21, Z+1	; 0x01
     ce4:	22 81       	ldd	r18, Z+2	; 0x02
     ce6:	62 2f       	mov	r22, r18
     ce8:	6f 77       	andi	r22, 0x7F	; 127
     cea:	70 e0       	ldi	r23, 0x00	; 0
     cec:	22 1f       	adc	r18, r18
     cee:	22 27       	eor	r18, r18
     cf0:	22 1f       	adc	r18, r18
     cf2:	93 81       	ldd	r25, Z+3	; 0x03
     cf4:	89 2f       	mov	r24, r25
     cf6:	88 0f       	add	r24, r24
     cf8:	82 2b       	or	r24, r18
     cfa:	28 2f       	mov	r18, r24
     cfc:	30 e0       	ldi	r19, 0x00	; 0
     cfe:	99 1f       	adc	r25, r25
     d00:	99 27       	eor	r25, r25
     d02:	99 1f       	adc	r25, r25
     d04:	11 96       	adiw	r26, 0x01	; 1
     d06:	9c 93       	st	X, r25
     d08:	11 97       	sbiw	r26, 0x01	; 1
     d0a:	21 15       	cp	r18, r1
     d0c:	31 05       	cpc	r19, r1
     d0e:	a9 f5       	brne	.+106    	; 0xd7a <__unpack_f+0x9e>
     d10:	41 15       	cp	r20, r1
     d12:	51 05       	cpc	r21, r1
     d14:	61 05       	cpc	r22, r1
     d16:	71 05       	cpc	r23, r1
     d18:	11 f4       	brne	.+4      	; 0xd1e <__unpack_f+0x42>
     d1a:	82 e0       	ldi	r24, 0x02	; 2
     d1c:	37 c0       	rjmp	.+110    	; 0xd8c <__unpack_f+0xb0>
     d1e:	82 e8       	ldi	r24, 0x82	; 130
     d20:	9f ef       	ldi	r25, 0xFF	; 255
     d22:	13 96       	adiw	r26, 0x03	; 3
     d24:	9c 93       	st	X, r25
     d26:	8e 93       	st	-X, r24
     d28:	12 97       	sbiw	r26, 0x02	; 2
     d2a:	9a 01       	movw	r18, r20
     d2c:	ab 01       	movw	r20, r22
     d2e:	67 e0       	ldi	r22, 0x07	; 7
     d30:	22 0f       	add	r18, r18
     d32:	33 1f       	adc	r19, r19
     d34:	44 1f       	adc	r20, r20
     d36:	55 1f       	adc	r21, r21
     d38:	6a 95       	dec	r22
     d3a:	d1 f7       	brne	.-12     	; 0xd30 <__unpack_f+0x54>
     d3c:	83 e0       	ldi	r24, 0x03	; 3
     d3e:	8c 93       	st	X, r24
     d40:	0d c0       	rjmp	.+26     	; 0xd5c <__unpack_f+0x80>
     d42:	22 0f       	add	r18, r18
     d44:	33 1f       	adc	r19, r19
     d46:	44 1f       	adc	r20, r20
     d48:	55 1f       	adc	r21, r21
     d4a:	12 96       	adiw	r26, 0x02	; 2
     d4c:	8d 91       	ld	r24, X+
     d4e:	9c 91       	ld	r25, X
     d50:	13 97       	sbiw	r26, 0x03	; 3
     d52:	01 97       	sbiw	r24, 0x01	; 1
     d54:	13 96       	adiw	r26, 0x03	; 3
     d56:	9c 93       	st	X, r25
     d58:	8e 93       	st	-X, r24
     d5a:	12 97       	sbiw	r26, 0x02	; 2
     d5c:	20 30       	cpi	r18, 0x00	; 0
     d5e:	80 e0       	ldi	r24, 0x00	; 0
     d60:	38 07       	cpc	r19, r24
     d62:	80 e0       	ldi	r24, 0x00	; 0
     d64:	48 07       	cpc	r20, r24
     d66:	80 e4       	ldi	r24, 0x40	; 64
     d68:	58 07       	cpc	r21, r24
     d6a:	58 f3       	brcs	.-42     	; 0xd42 <__unpack_f+0x66>
     d6c:	14 96       	adiw	r26, 0x04	; 4
     d6e:	2d 93       	st	X+, r18
     d70:	3d 93       	st	X+, r19
     d72:	4d 93       	st	X+, r20
     d74:	5c 93       	st	X, r21
     d76:	17 97       	sbiw	r26, 0x07	; 7
     d78:	08 95       	ret
     d7a:	2f 3f       	cpi	r18, 0xFF	; 255
     d7c:	31 05       	cpc	r19, r1
     d7e:	79 f4       	brne	.+30     	; 0xd9e <__unpack_f+0xc2>
     d80:	41 15       	cp	r20, r1
     d82:	51 05       	cpc	r21, r1
     d84:	61 05       	cpc	r22, r1
     d86:	71 05       	cpc	r23, r1
     d88:	19 f4       	brne	.+6      	; 0xd90 <__unpack_f+0xb4>
     d8a:	84 e0       	ldi	r24, 0x04	; 4
     d8c:	8c 93       	st	X, r24
     d8e:	08 95       	ret
     d90:	64 ff       	sbrs	r22, 4
     d92:	03 c0       	rjmp	.+6      	; 0xd9a <__unpack_f+0xbe>
     d94:	81 e0       	ldi	r24, 0x01	; 1
     d96:	8c 93       	st	X, r24
     d98:	12 c0       	rjmp	.+36     	; 0xdbe <__unpack_f+0xe2>
     d9a:	1c 92       	st	X, r1
     d9c:	10 c0       	rjmp	.+32     	; 0xdbe <__unpack_f+0xe2>
     d9e:	2f 57       	subi	r18, 0x7F	; 127
     da0:	30 40       	sbci	r19, 0x00	; 0
     da2:	13 96       	adiw	r26, 0x03	; 3
     da4:	3c 93       	st	X, r19
     da6:	2e 93       	st	-X, r18
     da8:	12 97       	sbiw	r26, 0x02	; 2
     daa:	83 e0       	ldi	r24, 0x03	; 3
     dac:	8c 93       	st	X, r24
     dae:	87 e0       	ldi	r24, 0x07	; 7
     db0:	44 0f       	add	r20, r20
     db2:	55 1f       	adc	r21, r21
     db4:	66 1f       	adc	r22, r22
     db6:	77 1f       	adc	r23, r23
     db8:	8a 95       	dec	r24
     dba:	d1 f7       	brne	.-12     	; 0xdb0 <__unpack_f+0xd4>
     dbc:	70 64       	ori	r23, 0x40	; 64
     dbe:	14 96       	adiw	r26, 0x04	; 4
     dc0:	4d 93       	st	X+, r20
     dc2:	5d 93       	st	X+, r21
     dc4:	6d 93       	st	X+, r22
     dc6:	7c 93       	st	X, r23
     dc8:	17 97       	sbiw	r26, 0x07	; 7
     dca:	08 95       	ret

00000dcc <__fpcmp_parts_f>:
     dcc:	1f 93       	push	r17
     dce:	dc 01       	movw	r26, r24
     dd0:	fb 01       	movw	r30, r22
     dd2:	9c 91       	ld	r25, X
     dd4:	92 30       	cpi	r25, 0x02	; 2
     dd6:	08 f4       	brcc	.+2      	; 0xdda <__fpcmp_parts_f+0xe>
     dd8:	47 c0       	rjmp	.+142    	; 0xe68 <__fpcmp_parts_f+0x9c>
     dda:	80 81       	ld	r24, Z
     ddc:	82 30       	cpi	r24, 0x02	; 2
     dde:	08 f4       	brcc	.+2      	; 0xde2 <__fpcmp_parts_f+0x16>
     de0:	43 c0       	rjmp	.+134    	; 0xe68 <__fpcmp_parts_f+0x9c>
     de2:	94 30       	cpi	r25, 0x04	; 4
     de4:	51 f4       	brne	.+20     	; 0xdfa <__fpcmp_parts_f+0x2e>
     de6:	11 96       	adiw	r26, 0x01	; 1
     de8:	1c 91       	ld	r17, X
     dea:	84 30       	cpi	r24, 0x04	; 4
     dec:	99 f5       	brne	.+102    	; 0xe54 <__fpcmp_parts_f+0x88>
     dee:	81 81       	ldd	r24, Z+1	; 0x01
     df0:	68 2f       	mov	r22, r24
     df2:	70 e0       	ldi	r23, 0x00	; 0
     df4:	61 1b       	sub	r22, r17
     df6:	71 09       	sbc	r23, r1
     df8:	3f c0       	rjmp	.+126    	; 0xe78 <__fpcmp_parts_f+0xac>
     dfa:	84 30       	cpi	r24, 0x04	; 4
     dfc:	21 f0       	breq	.+8      	; 0xe06 <__fpcmp_parts_f+0x3a>
     dfe:	92 30       	cpi	r25, 0x02	; 2
     e00:	31 f4       	brne	.+12     	; 0xe0e <__fpcmp_parts_f+0x42>
     e02:	82 30       	cpi	r24, 0x02	; 2
     e04:	b9 f1       	breq	.+110    	; 0xe74 <__fpcmp_parts_f+0xa8>
     e06:	81 81       	ldd	r24, Z+1	; 0x01
     e08:	88 23       	and	r24, r24
     e0a:	89 f1       	breq	.+98     	; 0xe6e <__fpcmp_parts_f+0xa2>
     e0c:	2d c0       	rjmp	.+90     	; 0xe68 <__fpcmp_parts_f+0x9c>
     e0e:	11 96       	adiw	r26, 0x01	; 1
     e10:	1c 91       	ld	r17, X
     e12:	11 97       	sbiw	r26, 0x01	; 1
     e14:	82 30       	cpi	r24, 0x02	; 2
     e16:	f1 f0       	breq	.+60     	; 0xe54 <__fpcmp_parts_f+0x88>
     e18:	81 81       	ldd	r24, Z+1	; 0x01
     e1a:	18 17       	cp	r17, r24
     e1c:	d9 f4       	brne	.+54     	; 0xe54 <__fpcmp_parts_f+0x88>
     e1e:	12 96       	adiw	r26, 0x02	; 2
     e20:	2d 91       	ld	r18, X+
     e22:	3c 91       	ld	r19, X
     e24:	13 97       	sbiw	r26, 0x03	; 3
     e26:	82 81       	ldd	r24, Z+2	; 0x02
     e28:	93 81       	ldd	r25, Z+3	; 0x03
     e2a:	82 17       	cp	r24, r18
     e2c:	93 07       	cpc	r25, r19
     e2e:	94 f0       	brlt	.+36     	; 0xe54 <__fpcmp_parts_f+0x88>
     e30:	28 17       	cp	r18, r24
     e32:	39 07       	cpc	r19, r25
     e34:	bc f0       	brlt	.+46     	; 0xe64 <__fpcmp_parts_f+0x98>
     e36:	14 96       	adiw	r26, 0x04	; 4
     e38:	8d 91       	ld	r24, X+
     e3a:	9d 91       	ld	r25, X+
     e3c:	0d 90       	ld	r0, X+
     e3e:	bc 91       	ld	r27, X
     e40:	a0 2d       	mov	r26, r0
     e42:	24 81       	ldd	r18, Z+4	; 0x04
     e44:	35 81       	ldd	r19, Z+5	; 0x05
     e46:	46 81       	ldd	r20, Z+6	; 0x06
     e48:	57 81       	ldd	r21, Z+7	; 0x07
     e4a:	28 17       	cp	r18, r24
     e4c:	39 07       	cpc	r19, r25
     e4e:	4a 07       	cpc	r20, r26
     e50:	5b 07       	cpc	r21, r27
     e52:	18 f4       	brcc	.+6      	; 0xe5a <__fpcmp_parts_f+0x8e>
     e54:	11 23       	and	r17, r17
     e56:	41 f0       	breq	.+16     	; 0xe68 <__fpcmp_parts_f+0x9c>
     e58:	0a c0       	rjmp	.+20     	; 0xe6e <__fpcmp_parts_f+0xa2>
     e5a:	82 17       	cp	r24, r18
     e5c:	93 07       	cpc	r25, r19
     e5e:	a4 07       	cpc	r26, r20
     e60:	b5 07       	cpc	r27, r21
     e62:	40 f4       	brcc	.+16     	; 0xe74 <__fpcmp_parts_f+0xa8>
     e64:	11 23       	and	r17, r17
     e66:	19 f0       	breq	.+6      	; 0xe6e <__fpcmp_parts_f+0xa2>
     e68:	61 e0       	ldi	r22, 0x01	; 1
     e6a:	70 e0       	ldi	r23, 0x00	; 0
     e6c:	05 c0       	rjmp	.+10     	; 0xe78 <__fpcmp_parts_f+0xac>
     e6e:	6f ef       	ldi	r22, 0xFF	; 255
     e70:	7f ef       	ldi	r23, 0xFF	; 255
     e72:	02 c0       	rjmp	.+4      	; 0xe78 <__fpcmp_parts_f+0xac>
     e74:	60 e0       	ldi	r22, 0x00	; 0
     e76:	70 e0       	ldi	r23, 0x00	; 0
     e78:	cb 01       	movw	r24, r22
     e7a:	1f 91       	pop	r17
     e7c:	08 95       	ret

00000e7e <LCD_init>:
void LCD_intToString(int data);
void LCD_clearScreen(void);
void LCD_displayStringRowCol(unsigned char row , unsigned char col , unsigned char *str );


void LCD_init(){
     e7e:	df 93       	push	r29
     e80:	cf 93       	push	r28
     e82:	cd b7       	in	r28, 0x3d	; 61
     e84:	de b7       	in	r29, 0x3e	; 62
	LCD_CTRL_PORT_DIR |=(1<<RS) |(1<<RW) |(1<<E);
     e86:	a1 e3       	ldi	r26, 0x31	; 49
     e88:	b0 e0       	ldi	r27, 0x00	; 0
     e8a:	e1 e3       	ldi	r30, 0x31	; 49
     e8c:	f0 e0       	ldi	r31, 0x00	; 0
     e8e:	80 81       	ld	r24, Z
     e90:	87 60       	ori	r24, 0x07	; 7
     e92:	8c 93       	st	X, r24
	LCD_DATA_PORT_DIR = 0XFF;
     e94:	e4 e3       	ldi	r30, 0x34	; 52
     e96:	f0 e0       	ldi	r31, 0x00	; 0
     e98:	8f ef       	ldi	r24, 0xFF	; 255
     e9a:	80 83       	st	Z, r24
	LCD_command(0x38);
     e9c:	88 e3       	ldi	r24, 0x38	; 56
     e9e:	0e 94 b2 07 	call	0xf64	; 0xf64 <LCD_command>
	LCD_command(0x0C);
     ea2:	8c e0       	ldi	r24, 0x0C	; 12
     ea4:	0e 94 b2 07 	call	0xf64	; 0xf64 <LCD_command>
	LCD_command(0x01);
     ea8:	81 e0       	ldi	r24, 0x01	; 1
     eaa:	0e 94 b2 07 	call	0xf64	; 0xf64 <LCD_command>



}
     eae:	cf 91       	pop	r28
     eb0:	df 91       	pop	r29
     eb2:	08 95       	ret

00000eb4 <storeShape>:
void storeShape(unsigned char row , unsigned char col  ){
     eb4:	df 93       	push	r29
     eb6:	cf 93       	push	r28
     eb8:	cd b7       	in	r28, 0x3d	; 61
     eba:	de b7       	in	r29, 0x3e	; 62
     ebc:	60 97       	sbiw	r28, 0x10	; 16
     ebe:	0f b6       	in	r0, 0x3f	; 63
     ec0:	f8 94       	cli
     ec2:	de bf       	out	0x3e, r29	; 62
     ec4:	0f be       	out	0x3f, r0	; 63
     ec6:	cd bf       	out	0x3d, r28	; 61
     ec8:	8a 87       	std	Y+10, r24	; 0x0a
     eca:	6b 87       	std	Y+11, r22	; 0x0b
	unsigned char i,shape[8]= {0,0,10,31,31,14,4,0};
     ecc:	ce 01       	movw	r24, r28
     ece:	02 96       	adiw	r24, 0x02	; 2
     ed0:	9d 87       	std	Y+13, r25	; 0x0d
     ed2:	8c 87       	std	Y+12, r24	; 0x0c
     ed4:	eb e6       	ldi	r30, 0x6B	; 107
     ed6:	f1 e0       	ldi	r31, 0x01	; 1
     ed8:	ff 87       	std	Y+15, r31	; 0x0f
     eda:	ee 87       	std	Y+14, r30	; 0x0e
     edc:	f8 e0       	ldi	r31, 0x08	; 8
     ede:	f8 8b       	std	Y+16, r31	; 0x10
     ee0:	ee 85       	ldd	r30, Y+14	; 0x0e
     ee2:	ff 85       	ldd	r31, Y+15	; 0x0f
     ee4:	00 80       	ld	r0, Z
     ee6:	8e 85       	ldd	r24, Y+14	; 0x0e
     ee8:	9f 85       	ldd	r25, Y+15	; 0x0f
     eea:	01 96       	adiw	r24, 0x01	; 1
     eec:	9f 87       	std	Y+15, r25	; 0x0f
     eee:	8e 87       	std	Y+14, r24	; 0x0e
     ef0:	ec 85       	ldd	r30, Y+12	; 0x0c
     ef2:	fd 85       	ldd	r31, Y+13	; 0x0d
     ef4:	00 82       	st	Z, r0
     ef6:	8c 85       	ldd	r24, Y+12	; 0x0c
     ef8:	9d 85       	ldd	r25, Y+13	; 0x0d
     efa:	01 96       	adiw	r24, 0x01	; 1
     efc:	9d 87       	std	Y+13, r25	; 0x0d
     efe:	8c 87       	std	Y+12, r24	; 0x0c
     f00:	98 89       	ldd	r25, Y+16	; 0x10
     f02:	91 50       	subi	r25, 0x01	; 1
     f04:	98 8b       	std	Y+16, r25	; 0x10
     f06:	e8 89       	ldd	r30, Y+16	; 0x10
     f08:	ee 23       	and	r30, r30
     f0a:	51 f7       	brne	.-44     	; 0xee0 <storeShape+0x2c>
	LCD_command(0x40);//set adress pointer to point on adress 00000 in CGRAM
     f0c:	80 e4       	ldi	r24, 0x40	; 64
     f0e:	0e 94 b2 07 	call	0xf64	; 0xf64 <LCD_command>
	for( i=0 ; i < 8  ; i++ ){
     f12:	19 82       	std	Y+1, r1	; 0x01
     f14:	0e c0       	rjmp	.+28     	; 0xf32 <storeShape+0x7e>
		LCD_Data(shape[i]);
     f16:	89 81       	ldd	r24, Y+1	; 0x01
     f18:	28 2f       	mov	r18, r24
     f1a:	30 e0       	ldi	r19, 0x00	; 0
     f1c:	ce 01       	movw	r24, r28
     f1e:	02 96       	adiw	r24, 0x02	; 2
     f20:	fc 01       	movw	r30, r24
     f22:	e2 0f       	add	r30, r18
     f24:	f3 1f       	adc	r31, r19
     f26:	80 81       	ld	r24, Z
     f28:	0e 94 a7 09 	call	0x134e	; 0x134e <LCD_Data>

}
void storeShape(unsigned char row , unsigned char col  ){
	unsigned char i,shape[8]= {0,0,10,31,31,14,4,0};
	LCD_command(0x40);//set adress pointer to point on adress 00000 in CGRAM
	for( i=0 ; i < 8  ; i++ ){
     f2c:	89 81       	ldd	r24, Y+1	; 0x01
     f2e:	8f 5f       	subi	r24, 0xFF	; 255
     f30:	89 83       	std	Y+1, r24	; 0x01
     f32:	89 81       	ldd	r24, Y+1	; 0x01
     f34:	88 30       	cpi	r24, 0x08	; 8
     f36:	78 f3       	brcs	.-34     	; 0xf16 <storeShape+0x62>
		LCD_Data(shape[i]);

	}
	LCD_goToRowCol(row , col);
     f38:	8a 85       	ldd	r24, Y+10	; 0x0a
     f3a:	48 2f       	mov	r20, r24
     f3c:	50 e0       	ldi	r21, 0x00	; 0
     f3e:	8b 85       	ldd	r24, Y+11	; 0x0b
     f40:	28 2f       	mov	r18, r24
     f42:	30 e0       	ldi	r19, 0x00	; 0
     f44:	ca 01       	movw	r24, r20
     f46:	b9 01       	movw	r22, r18
     f48:	0e 94 a3 0b 	call	0x1746	; 0x1746 <LCD_goToRowCol>
	LCD_Data(0x00); // show the address this of CGRAM
     f4c:	80 e0       	ldi	r24, 0x00	; 0
     f4e:	0e 94 a7 09 	call	0x134e	; 0x134e <LCD_Data>

}
     f52:	60 96       	adiw	r28, 0x10	; 16
     f54:	0f b6       	in	r0, 0x3f	; 63
     f56:	f8 94       	cli
     f58:	de bf       	out	0x3e, r29	; 62
     f5a:	0f be       	out	0x3f, r0	; 63
     f5c:	cd bf       	out	0x3d, r28	; 61
     f5e:	cf 91       	pop	r28
     f60:	df 91       	pop	r29
     f62:	08 95       	ret

00000f64 <LCD_command>:
void LCD_command(unsigned char command){
     f64:	df 93       	push	r29
     f66:	cf 93       	push	r28
     f68:	cd b7       	in	r28, 0x3d	; 61
     f6a:	de b7       	in	r29, 0x3e	; 62
     f6c:	e9 97       	sbiw	r28, 0x39	; 57
     f6e:	0f b6       	in	r0, 0x3f	; 63
     f70:	f8 94       	cli
     f72:	de bf       	out	0x3e, r29	; 62
     f74:	0f be       	out	0x3f, r0	; 63
     f76:	cd bf       	out	0x3d, r28	; 61
     f78:	89 af       	std	Y+57, r24	; 0x39
	LCD_CTRL_PORT &=~((1<<RS)|(1<<RW));
     f7a:	a2 e3       	ldi	r26, 0x32	; 50
     f7c:	b0 e0       	ldi	r27, 0x00	; 0
     f7e:	e2 e3       	ldi	r30, 0x32	; 50
     f80:	f0 e0       	ldi	r31, 0x00	; 0
     f82:	80 81       	ld	r24, Z
     f84:	8c 7f       	andi	r24, 0xFC	; 252
     f86:	8c 93       	st	X, r24
     f88:	80 e0       	ldi	r24, 0x00	; 0
     f8a:	90 e0       	ldi	r25, 0x00	; 0
     f8c:	a0 e8       	ldi	r26, 0x80	; 128
     f8e:	bf e3       	ldi	r27, 0x3F	; 63
     f90:	8d ab       	std	Y+53, r24	; 0x35
     f92:	9e ab       	std	Y+54, r25	; 0x36
     f94:	af ab       	std	Y+55, r26	; 0x37
     f96:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     f98:	6d a9       	ldd	r22, Y+53	; 0x35
     f9a:	7e a9       	ldd	r23, Y+54	; 0x36
     f9c:	8f a9       	ldd	r24, Y+55	; 0x37
     f9e:	98 ad       	ldd	r25, Y+56	; 0x38
     fa0:	20 e0       	ldi	r18, 0x00	; 0
     fa2:	30 e0       	ldi	r19, 0x00	; 0
     fa4:	4a ef       	ldi	r20, 0xFA	; 250
     fa6:	54 e4       	ldi	r21, 0x44	; 68
     fa8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     fac:	dc 01       	movw	r26, r24
     fae:	cb 01       	movw	r24, r22
     fb0:	89 ab       	std	Y+49, r24	; 0x31
     fb2:	9a ab       	std	Y+50, r25	; 0x32
     fb4:	ab ab       	std	Y+51, r26	; 0x33
     fb6:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
     fb8:	69 a9       	ldd	r22, Y+49	; 0x31
     fba:	7a a9       	ldd	r23, Y+50	; 0x32
     fbc:	8b a9       	ldd	r24, Y+51	; 0x33
     fbe:	9c a9       	ldd	r25, Y+52	; 0x34
     fc0:	20 e0       	ldi	r18, 0x00	; 0
     fc2:	30 e0       	ldi	r19, 0x00	; 0
     fc4:	40 e8       	ldi	r20, 0x80	; 128
     fc6:	5f e3       	ldi	r21, 0x3F	; 63
     fc8:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
     fcc:	88 23       	and	r24, r24
     fce:	2c f4       	brge	.+10     	; 0xfda <LCD_command+0x76>
		__ticks = 1;
     fd0:	81 e0       	ldi	r24, 0x01	; 1
     fd2:	90 e0       	ldi	r25, 0x00	; 0
     fd4:	98 ab       	std	Y+48, r25	; 0x30
     fd6:	8f a7       	std	Y+47, r24	; 0x2f
     fd8:	3f c0       	rjmp	.+126    	; 0x1058 <LCD_command+0xf4>
	else if (__tmp > 65535)
     fda:	69 a9       	ldd	r22, Y+49	; 0x31
     fdc:	7a a9       	ldd	r23, Y+50	; 0x32
     fde:	8b a9       	ldd	r24, Y+51	; 0x33
     fe0:	9c a9       	ldd	r25, Y+52	; 0x34
     fe2:	20 e0       	ldi	r18, 0x00	; 0
     fe4:	3f ef       	ldi	r19, 0xFF	; 255
     fe6:	4f e7       	ldi	r20, 0x7F	; 127
     fe8:	57 e4       	ldi	r21, 0x47	; 71
     fea:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
     fee:	18 16       	cp	r1, r24
     ff0:	4c f5       	brge	.+82     	; 0x1044 <LCD_command+0xe0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     ff2:	6d a9       	ldd	r22, Y+53	; 0x35
     ff4:	7e a9       	ldd	r23, Y+54	; 0x36
     ff6:	8f a9       	ldd	r24, Y+55	; 0x37
     ff8:	98 ad       	ldd	r25, Y+56	; 0x38
     ffa:	20 e0       	ldi	r18, 0x00	; 0
     ffc:	30 e0       	ldi	r19, 0x00	; 0
     ffe:	40 e2       	ldi	r20, 0x20	; 32
    1000:	51 e4       	ldi	r21, 0x41	; 65
    1002:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1006:	dc 01       	movw	r26, r24
    1008:	cb 01       	movw	r24, r22
    100a:	bc 01       	movw	r22, r24
    100c:	cd 01       	movw	r24, r26
    100e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1012:	dc 01       	movw	r26, r24
    1014:	cb 01       	movw	r24, r22
    1016:	98 ab       	std	Y+48, r25	; 0x30
    1018:	8f a7       	std	Y+47, r24	; 0x2f
    101a:	0f c0       	rjmp	.+30     	; 0x103a <LCD_command+0xd6>
    101c:	88 ec       	ldi	r24, 0xC8	; 200
    101e:	90 e0       	ldi	r25, 0x00	; 0
    1020:	9e a7       	std	Y+46, r25	; 0x2e
    1022:	8d a7       	std	Y+45, r24	; 0x2d
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1024:	8d a5       	ldd	r24, Y+45	; 0x2d
    1026:	9e a5       	ldd	r25, Y+46	; 0x2e
    1028:	01 97       	sbiw	r24, 0x01	; 1
    102a:	f1 f7       	brne	.-4      	; 0x1028 <LCD_command+0xc4>
    102c:	9e a7       	std	Y+46, r25	; 0x2e
    102e:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1030:	8f a5       	ldd	r24, Y+47	; 0x2f
    1032:	98 a9       	ldd	r25, Y+48	; 0x30
    1034:	01 97       	sbiw	r24, 0x01	; 1
    1036:	98 ab       	std	Y+48, r25	; 0x30
    1038:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    103a:	8f a5       	ldd	r24, Y+47	; 0x2f
    103c:	98 a9       	ldd	r25, Y+48	; 0x30
    103e:	00 97       	sbiw	r24, 0x00	; 0
    1040:	69 f7       	brne	.-38     	; 0x101c <LCD_command+0xb8>
    1042:	14 c0       	rjmp	.+40     	; 0x106c <LCD_command+0x108>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1044:	69 a9       	ldd	r22, Y+49	; 0x31
    1046:	7a a9       	ldd	r23, Y+50	; 0x32
    1048:	8b a9       	ldd	r24, Y+51	; 0x33
    104a:	9c a9       	ldd	r25, Y+52	; 0x34
    104c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1050:	dc 01       	movw	r26, r24
    1052:	cb 01       	movw	r24, r22
    1054:	98 ab       	std	Y+48, r25	; 0x30
    1056:	8f a7       	std	Y+47, r24	; 0x2f
    1058:	8f a5       	ldd	r24, Y+47	; 0x2f
    105a:	98 a9       	ldd	r25, Y+48	; 0x30
    105c:	9c a7       	std	Y+44, r25	; 0x2c
    105e:	8b a7       	std	Y+43, r24	; 0x2b
    1060:	8b a5       	ldd	r24, Y+43	; 0x2b
    1062:	9c a5       	ldd	r25, Y+44	; 0x2c
    1064:	01 97       	sbiw	r24, 0x01	; 1
    1066:	f1 f7       	brne	.-4      	; 0x1064 <LCD_command+0x100>
    1068:	9c a7       	std	Y+44, r25	; 0x2c
    106a:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(1);
	LCD_CTRL_PORT |=(1<<E);
    106c:	a2 e3       	ldi	r26, 0x32	; 50
    106e:	b0 e0       	ldi	r27, 0x00	; 0
    1070:	e2 e3       	ldi	r30, 0x32	; 50
    1072:	f0 e0       	ldi	r31, 0x00	; 0
    1074:	80 81       	ld	r24, Z
    1076:	84 60       	ori	r24, 0x04	; 4
    1078:	8c 93       	st	X, r24
    107a:	80 e0       	ldi	r24, 0x00	; 0
    107c:	90 e0       	ldi	r25, 0x00	; 0
    107e:	a0 e8       	ldi	r26, 0x80	; 128
    1080:	bf e3       	ldi	r27, 0x3F	; 63
    1082:	8f a3       	std	Y+39, r24	; 0x27
    1084:	98 a7       	std	Y+40, r25	; 0x28
    1086:	a9 a7       	std	Y+41, r26	; 0x29
    1088:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    108a:	6f a1       	ldd	r22, Y+39	; 0x27
    108c:	78 a5       	ldd	r23, Y+40	; 0x28
    108e:	89 a5       	ldd	r24, Y+41	; 0x29
    1090:	9a a5       	ldd	r25, Y+42	; 0x2a
    1092:	20 e0       	ldi	r18, 0x00	; 0
    1094:	30 e0       	ldi	r19, 0x00	; 0
    1096:	4a ef       	ldi	r20, 0xFA	; 250
    1098:	54 e4       	ldi	r21, 0x44	; 68
    109a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    109e:	dc 01       	movw	r26, r24
    10a0:	cb 01       	movw	r24, r22
    10a2:	8b a3       	std	Y+35, r24	; 0x23
    10a4:	9c a3       	std	Y+36, r25	; 0x24
    10a6:	ad a3       	std	Y+37, r26	; 0x25
    10a8:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    10aa:	6b a1       	ldd	r22, Y+35	; 0x23
    10ac:	7c a1       	ldd	r23, Y+36	; 0x24
    10ae:	8d a1       	ldd	r24, Y+37	; 0x25
    10b0:	9e a1       	ldd	r25, Y+38	; 0x26
    10b2:	20 e0       	ldi	r18, 0x00	; 0
    10b4:	30 e0       	ldi	r19, 0x00	; 0
    10b6:	40 e8       	ldi	r20, 0x80	; 128
    10b8:	5f e3       	ldi	r21, 0x3F	; 63
    10ba:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    10be:	88 23       	and	r24, r24
    10c0:	2c f4       	brge	.+10     	; 0x10cc <LCD_command+0x168>
		__ticks = 1;
    10c2:	81 e0       	ldi	r24, 0x01	; 1
    10c4:	90 e0       	ldi	r25, 0x00	; 0
    10c6:	9a a3       	std	Y+34, r25	; 0x22
    10c8:	89 a3       	std	Y+33, r24	; 0x21
    10ca:	3f c0       	rjmp	.+126    	; 0x114a <LCD_command+0x1e6>
	else if (__tmp > 65535)
    10cc:	6b a1       	ldd	r22, Y+35	; 0x23
    10ce:	7c a1       	ldd	r23, Y+36	; 0x24
    10d0:	8d a1       	ldd	r24, Y+37	; 0x25
    10d2:	9e a1       	ldd	r25, Y+38	; 0x26
    10d4:	20 e0       	ldi	r18, 0x00	; 0
    10d6:	3f ef       	ldi	r19, 0xFF	; 255
    10d8:	4f e7       	ldi	r20, 0x7F	; 127
    10da:	57 e4       	ldi	r21, 0x47	; 71
    10dc:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    10e0:	18 16       	cp	r1, r24
    10e2:	4c f5       	brge	.+82     	; 0x1136 <LCD_command+0x1d2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    10e4:	6f a1       	ldd	r22, Y+39	; 0x27
    10e6:	78 a5       	ldd	r23, Y+40	; 0x28
    10e8:	89 a5       	ldd	r24, Y+41	; 0x29
    10ea:	9a a5       	ldd	r25, Y+42	; 0x2a
    10ec:	20 e0       	ldi	r18, 0x00	; 0
    10ee:	30 e0       	ldi	r19, 0x00	; 0
    10f0:	40 e2       	ldi	r20, 0x20	; 32
    10f2:	51 e4       	ldi	r21, 0x41	; 65
    10f4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    10f8:	dc 01       	movw	r26, r24
    10fa:	cb 01       	movw	r24, r22
    10fc:	bc 01       	movw	r22, r24
    10fe:	cd 01       	movw	r24, r26
    1100:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1104:	dc 01       	movw	r26, r24
    1106:	cb 01       	movw	r24, r22
    1108:	9a a3       	std	Y+34, r25	; 0x22
    110a:	89 a3       	std	Y+33, r24	; 0x21
    110c:	0f c0       	rjmp	.+30     	; 0x112c <LCD_command+0x1c8>
    110e:	88 ec       	ldi	r24, 0xC8	; 200
    1110:	90 e0       	ldi	r25, 0x00	; 0
    1112:	98 a3       	std	Y+32, r25	; 0x20
    1114:	8f 8f       	std	Y+31, r24	; 0x1f
    1116:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1118:	98 a1       	ldd	r25, Y+32	; 0x20
    111a:	01 97       	sbiw	r24, 0x01	; 1
    111c:	f1 f7       	brne	.-4      	; 0x111a <LCD_command+0x1b6>
    111e:	98 a3       	std	Y+32, r25	; 0x20
    1120:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1122:	89 a1       	ldd	r24, Y+33	; 0x21
    1124:	9a a1       	ldd	r25, Y+34	; 0x22
    1126:	01 97       	sbiw	r24, 0x01	; 1
    1128:	9a a3       	std	Y+34, r25	; 0x22
    112a:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    112c:	89 a1       	ldd	r24, Y+33	; 0x21
    112e:	9a a1       	ldd	r25, Y+34	; 0x22
    1130:	00 97       	sbiw	r24, 0x00	; 0
    1132:	69 f7       	brne	.-38     	; 0x110e <LCD_command+0x1aa>
    1134:	14 c0       	rjmp	.+40     	; 0x115e <LCD_command+0x1fa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1136:	6b a1       	ldd	r22, Y+35	; 0x23
    1138:	7c a1       	ldd	r23, Y+36	; 0x24
    113a:	8d a1       	ldd	r24, Y+37	; 0x25
    113c:	9e a1       	ldd	r25, Y+38	; 0x26
    113e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1142:	dc 01       	movw	r26, r24
    1144:	cb 01       	movw	r24, r22
    1146:	9a a3       	std	Y+34, r25	; 0x22
    1148:	89 a3       	std	Y+33, r24	; 0x21
    114a:	89 a1       	ldd	r24, Y+33	; 0x21
    114c:	9a a1       	ldd	r25, Y+34	; 0x22
    114e:	9e 8f       	std	Y+30, r25	; 0x1e
    1150:	8d 8f       	std	Y+29, r24	; 0x1d
    1152:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1154:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1156:	01 97       	sbiw	r24, 0x01	; 1
    1158:	f1 f7       	brne	.-4      	; 0x1156 <LCD_command+0x1f2>
    115a:	9e 8f       	std	Y+30, r25	; 0x1e
    115c:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1);
	LCD_DATA_PORT = command;
    115e:	e5 e3       	ldi	r30, 0x35	; 53
    1160:	f0 e0       	ldi	r31, 0x00	; 0
    1162:	89 ad       	ldd	r24, Y+57	; 0x39
    1164:	80 83       	st	Z, r24
    1166:	80 e0       	ldi	r24, 0x00	; 0
    1168:	90 e0       	ldi	r25, 0x00	; 0
    116a:	a0 e8       	ldi	r26, 0x80	; 128
    116c:	bf e3       	ldi	r27, 0x3F	; 63
    116e:	89 8f       	std	Y+25, r24	; 0x19
    1170:	9a 8f       	std	Y+26, r25	; 0x1a
    1172:	ab 8f       	std	Y+27, r26	; 0x1b
    1174:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1176:	69 8d       	ldd	r22, Y+25	; 0x19
    1178:	7a 8d       	ldd	r23, Y+26	; 0x1a
    117a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    117c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    117e:	20 e0       	ldi	r18, 0x00	; 0
    1180:	30 e0       	ldi	r19, 0x00	; 0
    1182:	4a ef       	ldi	r20, 0xFA	; 250
    1184:	54 e4       	ldi	r21, 0x44	; 68
    1186:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    118a:	dc 01       	movw	r26, r24
    118c:	cb 01       	movw	r24, r22
    118e:	8d 8b       	std	Y+21, r24	; 0x15
    1190:	9e 8b       	std	Y+22, r25	; 0x16
    1192:	af 8b       	std	Y+23, r26	; 0x17
    1194:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1196:	6d 89       	ldd	r22, Y+21	; 0x15
    1198:	7e 89       	ldd	r23, Y+22	; 0x16
    119a:	8f 89       	ldd	r24, Y+23	; 0x17
    119c:	98 8d       	ldd	r25, Y+24	; 0x18
    119e:	20 e0       	ldi	r18, 0x00	; 0
    11a0:	30 e0       	ldi	r19, 0x00	; 0
    11a2:	40 e8       	ldi	r20, 0x80	; 128
    11a4:	5f e3       	ldi	r21, 0x3F	; 63
    11a6:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    11aa:	88 23       	and	r24, r24
    11ac:	2c f4       	brge	.+10     	; 0x11b8 <LCD_command+0x254>
		__ticks = 1;
    11ae:	81 e0       	ldi	r24, 0x01	; 1
    11b0:	90 e0       	ldi	r25, 0x00	; 0
    11b2:	9c 8b       	std	Y+20, r25	; 0x14
    11b4:	8b 8b       	std	Y+19, r24	; 0x13
    11b6:	3f c0       	rjmp	.+126    	; 0x1236 <LCD_command+0x2d2>
	else if (__tmp > 65535)
    11b8:	6d 89       	ldd	r22, Y+21	; 0x15
    11ba:	7e 89       	ldd	r23, Y+22	; 0x16
    11bc:	8f 89       	ldd	r24, Y+23	; 0x17
    11be:	98 8d       	ldd	r25, Y+24	; 0x18
    11c0:	20 e0       	ldi	r18, 0x00	; 0
    11c2:	3f ef       	ldi	r19, 0xFF	; 255
    11c4:	4f e7       	ldi	r20, 0x7F	; 127
    11c6:	57 e4       	ldi	r21, 0x47	; 71
    11c8:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    11cc:	18 16       	cp	r1, r24
    11ce:	4c f5       	brge	.+82     	; 0x1222 <LCD_command+0x2be>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    11d0:	69 8d       	ldd	r22, Y+25	; 0x19
    11d2:	7a 8d       	ldd	r23, Y+26	; 0x1a
    11d4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    11d6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    11d8:	20 e0       	ldi	r18, 0x00	; 0
    11da:	30 e0       	ldi	r19, 0x00	; 0
    11dc:	40 e2       	ldi	r20, 0x20	; 32
    11de:	51 e4       	ldi	r21, 0x41	; 65
    11e0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    11e4:	dc 01       	movw	r26, r24
    11e6:	cb 01       	movw	r24, r22
    11e8:	bc 01       	movw	r22, r24
    11ea:	cd 01       	movw	r24, r26
    11ec:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    11f0:	dc 01       	movw	r26, r24
    11f2:	cb 01       	movw	r24, r22
    11f4:	9c 8b       	std	Y+20, r25	; 0x14
    11f6:	8b 8b       	std	Y+19, r24	; 0x13
    11f8:	0f c0       	rjmp	.+30     	; 0x1218 <LCD_command+0x2b4>
    11fa:	88 ec       	ldi	r24, 0xC8	; 200
    11fc:	90 e0       	ldi	r25, 0x00	; 0
    11fe:	9a 8b       	std	Y+18, r25	; 0x12
    1200:	89 8b       	std	Y+17, r24	; 0x11
    1202:	89 89       	ldd	r24, Y+17	; 0x11
    1204:	9a 89       	ldd	r25, Y+18	; 0x12
    1206:	01 97       	sbiw	r24, 0x01	; 1
    1208:	f1 f7       	brne	.-4      	; 0x1206 <LCD_command+0x2a2>
    120a:	9a 8b       	std	Y+18, r25	; 0x12
    120c:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    120e:	8b 89       	ldd	r24, Y+19	; 0x13
    1210:	9c 89       	ldd	r25, Y+20	; 0x14
    1212:	01 97       	sbiw	r24, 0x01	; 1
    1214:	9c 8b       	std	Y+20, r25	; 0x14
    1216:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1218:	8b 89       	ldd	r24, Y+19	; 0x13
    121a:	9c 89       	ldd	r25, Y+20	; 0x14
    121c:	00 97       	sbiw	r24, 0x00	; 0
    121e:	69 f7       	brne	.-38     	; 0x11fa <LCD_command+0x296>
    1220:	14 c0       	rjmp	.+40     	; 0x124a <LCD_command+0x2e6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1222:	6d 89       	ldd	r22, Y+21	; 0x15
    1224:	7e 89       	ldd	r23, Y+22	; 0x16
    1226:	8f 89       	ldd	r24, Y+23	; 0x17
    1228:	98 8d       	ldd	r25, Y+24	; 0x18
    122a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    122e:	dc 01       	movw	r26, r24
    1230:	cb 01       	movw	r24, r22
    1232:	9c 8b       	std	Y+20, r25	; 0x14
    1234:	8b 8b       	std	Y+19, r24	; 0x13
    1236:	8b 89       	ldd	r24, Y+19	; 0x13
    1238:	9c 89       	ldd	r25, Y+20	; 0x14
    123a:	98 8b       	std	Y+16, r25	; 0x10
    123c:	8f 87       	std	Y+15, r24	; 0x0f
    123e:	8f 85       	ldd	r24, Y+15	; 0x0f
    1240:	98 89       	ldd	r25, Y+16	; 0x10
    1242:	01 97       	sbiw	r24, 0x01	; 1
    1244:	f1 f7       	brne	.-4      	; 0x1242 <LCD_command+0x2de>
    1246:	98 8b       	std	Y+16, r25	; 0x10
    1248:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	LCD_CTRL_PORT &=~(1<<E);
    124a:	a2 e3       	ldi	r26, 0x32	; 50
    124c:	b0 e0       	ldi	r27, 0x00	; 0
    124e:	e2 e3       	ldi	r30, 0x32	; 50
    1250:	f0 e0       	ldi	r31, 0x00	; 0
    1252:	80 81       	ld	r24, Z
    1254:	8b 7f       	andi	r24, 0xFB	; 251
    1256:	8c 93       	st	X, r24
    1258:	80 e0       	ldi	r24, 0x00	; 0
    125a:	90 e0       	ldi	r25, 0x00	; 0
    125c:	a0 e8       	ldi	r26, 0x80	; 128
    125e:	bf e3       	ldi	r27, 0x3F	; 63
    1260:	8b 87       	std	Y+11, r24	; 0x0b
    1262:	9c 87       	std	Y+12, r25	; 0x0c
    1264:	ad 87       	std	Y+13, r26	; 0x0d
    1266:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1268:	6b 85       	ldd	r22, Y+11	; 0x0b
    126a:	7c 85       	ldd	r23, Y+12	; 0x0c
    126c:	8d 85       	ldd	r24, Y+13	; 0x0d
    126e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1270:	20 e0       	ldi	r18, 0x00	; 0
    1272:	30 e0       	ldi	r19, 0x00	; 0
    1274:	4a ef       	ldi	r20, 0xFA	; 250
    1276:	54 e4       	ldi	r21, 0x44	; 68
    1278:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    127c:	dc 01       	movw	r26, r24
    127e:	cb 01       	movw	r24, r22
    1280:	8f 83       	std	Y+7, r24	; 0x07
    1282:	98 87       	std	Y+8, r25	; 0x08
    1284:	a9 87       	std	Y+9, r26	; 0x09
    1286:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1288:	6f 81       	ldd	r22, Y+7	; 0x07
    128a:	78 85       	ldd	r23, Y+8	; 0x08
    128c:	89 85       	ldd	r24, Y+9	; 0x09
    128e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1290:	20 e0       	ldi	r18, 0x00	; 0
    1292:	30 e0       	ldi	r19, 0x00	; 0
    1294:	40 e8       	ldi	r20, 0x80	; 128
    1296:	5f e3       	ldi	r21, 0x3F	; 63
    1298:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    129c:	88 23       	and	r24, r24
    129e:	2c f4       	brge	.+10     	; 0x12aa <LCD_command+0x346>
		__ticks = 1;
    12a0:	81 e0       	ldi	r24, 0x01	; 1
    12a2:	90 e0       	ldi	r25, 0x00	; 0
    12a4:	9e 83       	std	Y+6, r25	; 0x06
    12a6:	8d 83       	std	Y+5, r24	; 0x05
    12a8:	3f c0       	rjmp	.+126    	; 0x1328 <LCD_command+0x3c4>
	else if (__tmp > 65535)
    12aa:	6f 81       	ldd	r22, Y+7	; 0x07
    12ac:	78 85       	ldd	r23, Y+8	; 0x08
    12ae:	89 85       	ldd	r24, Y+9	; 0x09
    12b0:	9a 85       	ldd	r25, Y+10	; 0x0a
    12b2:	20 e0       	ldi	r18, 0x00	; 0
    12b4:	3f ef       	ldi	r19, 0xFF	; 255
    12b6:	4f e7       	ldi	r20, 0x7F	; 127
    12b8:	57 e4       	ldi	r21, 0x47	; 71
    12ba:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    12be:	18 16       	cp	r1, r24
    12c0:	4c f5       	brge	.+82     	; 0x1314 <LCD_command+0x3b0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    12c2:	6b 85       	ldd	r22, Y+11	; 0x0b
    12c4:	7c 85       	ldd	r23, Y+12	; 0x0c
    12c6:	8d 85       	ldd	r24, Y+13	; 0x0d
    12c8:	9e 85       	ldd	r25, Y+14	; 0x0e
    12ca:	20 e0       	ldi	r18, 0x00	; 0
    12cc:	30 e0       	ldi	r19, 0x00	; 0
    12ce:	40 e2       	ldi	r20, 0x20	; 32
    12d0:	51 e4       	ldi	r21, 0x41	; 65
    12d2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    12d6:	dc 01       	movw	r26, r24
    12d8:	cb 01       	movw	r24, r22
    12da:	bc 01       	movw	r22, r24
    12dc:	cd 01       	movw	r24, r26
    12de:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    12e2:	dc 01       	movw	r26, r24
    12e4:	cb 01       	movw	r24, r22
    12e6:	9e 83       	std	Y+6, r25	; 0x06
    12e8:	8d 83       	std	Y+5, r24	; 0x05
    12ea:	0f c0       	rjmp	.+30     	; 0x130a <LCD_command+0x3a6>
    12ec:	88 ec       	ldi	r24, 0xC8	; 200
    12ee:	90 e0       	ldi	r25, 0x00	; 0
    12f0:	9c 83       	std	Y+4, r25	; 0x04
    12f2:	8b 83       	std	Y+3, r24	; 0x03
    12f4:	8b 81       	ldd	r24, Y+3	; 0x03
    12f6:	9c 81       	ldd	r25, Y+4	; 0x04
    12f8:	01 97       	sbiw	r24, 0x01	; 1
    12fa:	f1 f7       	brne	.-4      	; 0x12f8 <LCD_command+0x394>
    12fc:	9c 83       	std	Y+4, r25	; 0x04
    12fe:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1300:	8d 81       	ldd	r24, Y+5	; 0x05
    1302:	9e 81       	ldd	r25, Y+6	; 0x06
    1304:	01 97       	sbiw	r24, 0x01	; 1
    1306:	9e 83       	std	Y+6, r25	; 0x06
    1308:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    130a:	8d 81       	ldd	r24, Y+5	; 0x05
    130c:	9e 81       	ldd	r25, Y+6	; 0x06
    130e:	00 97       	sbiw	r24, 0x00	; 0
    1310:	69 f7       	brne	.-38     	; 0x12ec <LCD_command+0x388>
    1312:	14 c0       	rjmp	.+40     	; 0x133c <LCD_command+0x3d8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1314:	6f 81       	ldd	r22, Y+7	; 0x07
    1316:	78 85       	ldd	r23, Y+8	; 0x08
    1318:	89 85       	ldd	r24, Y+9	; 0x09
    131a:	9a 85       	ldd	r25, Y+10	; 0x0a
    131c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1320:	dc 01       	movw	r26, r24
    1322:	cb 01       	movw	r24, r22
    1324:	9e 83       	std	Y+6, r25	; 0x06
    1326:	8d 83       	std	Y+5, r24	; 0x05
    1328:	8d 81       	ldd	r24, Y+5	; 0x05
    132a:	9e 81       	ldd	r25, Y+6	; 0x06
    132c:	9a 83       	std	Y+2, r25	; 0x02
    132e:	89 83       	std	Y+1, r24	; 0x01
    1330:	89 81       	ldd	r24, Y+1	; 0x01
    1332:	9a 81       	ldd	r25, Y+2	; 0x02
    1334:	01 97       	sbiw	r24, 0x01	; 1
    1336:	f1 f7       	brne	.-4      	; 0x1334 <LCD_command+0x3d0>
    1338:	9a 83       	std	Y+2, r25	; 0x02
    133a:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
}
    133c:	e9 96       	adiw	r28, 0x39	; 57
    133e:	0f b6       	in	r0, 0x3f	; 63
    1340:	f8 94       	cli
    1342:	de bf       	out	0x3e, r29	; 62
    1344:	0f be       	out	0x3f, r0	; 63
    1346:	cd bf       	out	0x3d, r28	; 61
    1348:	cf 91       	pop	r28
    134a:	df 91       	pop	r29
    134c:	08 95       	ret

0000134e <LCD_Data>:
void LCD_Data(unsigned char data){
    134e:	df 93       	push	r29
    1350:	cf 93       	push	r28
    1352:	cd b7       	in	r28, 0x3d	; 61
    1354:	de b7       	in	r29, 0x3e	; 62
    1356:	e9 97       	sbiw	r28, 0x39	; 57
    1358:	0f b6       	in	r0, 0x3f	; 63
    135a:	f8 94       	cli
    135c:	de bf       	out	0x3e, r29	; 62
    135e:	0f be       	out	0x3f, r0	; 63
    1360:	cd bf       	out	0x3d, r28	; 61
    1362:	89 af       	std	Y+57, r24	; 0x39
	LCD_CTRL_PORT |=(1<<RS);
    1364:	a2 e3       	ldi	r26, 0x32	; 50
    1366:	b0 e0       	ldi	r27, 0x00	; 0
    1368:	e2 e3       	ldi	r30, 0x32	; 50
    136a:	f0 e0       	ldi	r31, 0x00	; 0
    136c:	80 81       	ld	r24, Z
    136e:	81 60       	ori	r24, 0x01	; 1
    1370:	8c 93       	st	X, r24
	LCD_CTRL_PORT &=~(1<<RW);
    1372:	a2 e3       	ldi	r26, 0x32	; 50
    1374:	b0 e0       	ldi	r27, 0x00	; 0
    1376:	e2 e3       	ldi	r30, 0x32	; 50
    1378:	f0 e0       	ldi	r31, 0x00	; 0
    137a:	80 81       	ld	r24, Z
    137c:	8d 7f       	andi	r24, 0xFD	; 253
    137e:	8c 93       	st	X, r24
    1380:	80 e0       	ldi	r24, 0x00	; 0
    1382:	90 e0       	ldi	r25, 0x00	; 0
    1384:	a0 e8       	ldi	r26, 0x80	; 128
    1386:	bf e3       	ldi	r27, 0x3F	; 63
    1388:	8d ab       	std	Y+53, r24	; 0x35
    138a:	9e ab       	std	Y+54, r25	; 0x36
    138c:	af ab       	std	Y+55, r26	; 0x37
    138e:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1390:	6d a9       	ldd	r22, Y+53	; 0x35
    1392:	7e a9       	ldd	r23, Y+54	; 0x36
    1394:	8f a9       	ldd	r24, Y+55	; 0x37
    1396:	98 ad       	ldd	r25, Y+56	; 0x38
    1398:	20 e0       	ldi	r18, 0x00	; 0
    139a:	30 e0       	ldi	r19, 0x00	; 0
    139c:	4a ef       	ldi	r20, 0xFA	; 250
    139e:	54 e4       	ldi	r21, 0x44	; 68
    13a0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    13a4:	dc 01       	movw	r26, r24
    13a6:	cb 01       	movw	r24, r22
    13a8:	89 ab       	std	Y+49, r24	; 0x31
    13aa:	9a ab       	std	Y+50, r25	; 0x32
    13ac:	ab ab       	std	Y+51, r26	; 0x33
    13ae:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    13b0:	69 a9       	ldd	r22, Y+49	; 0x31
    13b2:	7a a9       	ldd	r23, Y+50	; 0x32
    13b4:	8b a9       	ldd	r24, Y+51	; 0x33
    13b6:	9c a9       	ldd	r25, Y+52	; 0x34
    13b8:	20 e0       	ldi	r18, 0x00	; 0
    13ba:	30 e0       	ldi	r19, 0x00	; 0
    13bc:	40 e8       	ldi	r20, 0x80	; 128
    13be:	5f e3       	ldi	r21, 0x3F	; 63
    13c0:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    13c4:	88 23       	and	r24, r24
    13c6:	2c f4       	brge	.+10     	; 0x13d2 <LCD_Data+0x84>
		__ticks = 1;
    13c8:	81 e0       	ldi	r24, 0x01	; 1
    13ca:	90 e0       	ldi	r25, 0x00	; 0
    13cc:	98 ab       	std	Y+48, r25	; 0x30
    13ce:	8f a7       	std	Y+47, r24	; 0x2f
    13d0:	3f c0       	rjmp	.+126    	; 0x1450 <LCD_Data+0x102>
	else if (__tmp > 65535)
    13d2:	69 a9       	ldd	r22, Y+49	; 0x31
    13d4:	7a a9       	ldd	r23, Y+50	; 0x32
    13d6:	8b a9       	ldd	r24, Y+51	; 0x33
    13d8:	9c a9       	ldd	r25, Y+52	; 0x34
    13da:	20 e0       	ldi	r18, 0x00	; 0
    13dc:	3f ef       	ldi	r19, 0xFF	; 255
    13de:	4f e7       	ldi	r20, 0x7F	; 127
    13e0:	57 e4       	ldi	r21, 0x47	; 71
    13e2:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    13e6:	18 16       	cp	r1, r24
    13e8:	4c f5       	brge	.+82     	; 0x143c <LCD_Data+0xee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    13ea:	6d a9       	ldd	r22, Y+53	; 0x35
    13ec:	7e a9       	ldd	r23, Y+54	; 0x36
    13ee:	8f a9       	ldd	r24, Y+55	; 0x37
    13f0:	98 ad       	ldd	r25, Y+56	; 0x38
    13f2:	20 e0       	ldi	r18, 0x00	; 0
    13f4:	30 e0       	ldi	r19, 0x00	; 0
    13f6:	40 e2       	ldi	r20, 0x20	; 32
    13f8:	51 e4       	ldi	r21, 0x41	; 65
    13fa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    13fe:	dc 01       	movw	r26, r24
    1400:	cb 01       	movw	r24, r22
    1402:	bc 01       	movw	r22, r24
    1404:	cd 01       	movw	r24, r26
    1406:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    140a:	dc 01       	movw	r26, r24
    140c:	cb 01       	movw	r24, r22
    140e:	98 ab       	std	Y+48, r25	; 0x30
    1410:	8f a7       	std	Y+47, r24	; 0x2f
    1412:	0f c0       	rjmp	.+30     	; 0x1432 <LCD_Data+0xe4>
    1414:	88 ec       	ldi	r24, 0xC8	; 200
    1416:	90 e0       	ldi	r25, 0x00	; 0
    1418:	9e a7       	std	Y+46, r25	; 0x2e
    141a:	8d a7       	std	Y+45, r24	; 0x2d
    141c:	8d a5       	ldd	r24, Y+45	; 0x2d
    141e:	9e a5       	ldd	r25, Y+46	; 0x2e
    1420:	01 97       	sbiw	r24, 0x01	; 1
    1422:	f1 f7       	brne	.-4      	; 0x1420 <LCD_Data+0xd2>
    1424:	9e a7       	std	Y+46, r25	; 0x2e
    1426:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1428:	8f a5       	ldd	r24, Y+47	; 0x2f
    142a:	98 a9       	ldd	r25, Y+48	; 0x30
    142c:	01 97       	sbiw	r24, 0x01	; 1
    142e:	98 ab       	std	Y+48, r25	; 0x30
    1430:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1432:	8f a5       	ldd	r24, Y+47	; 0x2f
    1434:	98 a9       	ldd	r25, Y+48	; 0x30
    1436:	00 97       	sbiw	r24, 0x00	; 0
    1438:	69 f7       	brne	.-38     	; 0x1414 <LCD_Data+0xc6>
    143a:	14 c0       	rjmp	.+40     	; 0x1464 <LCD_Data+0x116>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    143c:	69 a9       	ldd	r22, Y+49	; 0x31
    143e:	7a a9       	ldd	r23, Y+50	; 0x32
    1440:	8b a9       	ldd	r24, Y+51	; 0x33
    1442:	9c a9       	ldd	r25, Y+52	; 0x34
    1444:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1448:	dc 01       	movw	r26, r24
    144a:	cb 01       	movw	r24, r22
    144c:	98 ab       	std	Y+48, r25	; 0x30
    144e:	8f a7       	std	Y+47, r24	; 0x2f
    1450:	8f a5       	ldd	r24, Y+47	; 0x2f
    1452:	98 a9       	ldd	r25, Y+48	; 0x30
    1454:	9c a7       	std	Y+44, r25	; 0x2c
    1456:	8b a7       	std	Y+43, r24	; 0x2b
    1458:	8b a5       	ldd	r24, Y+43	; 0x2b
    145a:	9c a5       	ldd	r25, Y+44	; 0x2c
    145c:	01 97       	sbiw	r24, 0x01	; 1
    145e:	f1 f7       	brne	.-4      	; 0x145c <LCD_Data+0x10e>
    1460:	9c a7       	std	Y+44, r25	; 0x2c
    1462:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(1);
	LCD_CTRL_PORT |=(1<<E);
    1464:	a2 e3       	ldi	r26, 0x32	; 50
    1466:	b0 e0       	ldi	r27, 0x00	; 0
    1468:	e2 e3       	ldi	r30, 0x32	; 50
    146a:	f0 e0       	ldi	r31, 0x00	; 0
    146c:	80 81       	ld	r24, Z
    146e:	84 60       	ori	r24, 0x04	; 4
    1470:	8c 93       	st	X, r24
    1472:	80 e0       	ldi	r24, 0x00	; 0
    1474:	90 e0       	ldi	r25, 0x00	; 0
    1476:	a0 e8       	ldi	r26, 0x80	; 128
    1478:	bf e3       	ldi	r27, 0x3F	; 63
    147a:	8f a3       	std	Y+39, r24	; 0x27
    147c:	98 a7       	std	Y+40, r25	; 0x28
    147e:	a9 a7       	std	Y+41, r26	; 0x29
    1480:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1482:	6f a1       	ldd	r22, Y+39	; 0x27
    1484:	78 a5       	ldd	r23, Y+40	; 0x28
    1486:	89 a5       	ldd	r24, Y+41	; 0x29
    1488:	9a a5       	ldd	r25, Y+42	; 0x2a
    148a:	20 e0       	ldi	r18, 0x00	; 0
    148c:	30 e0       	ldi	r19, 0x00	; 0
    148e:	4a ef       	ldi	r20, 0xFA	; 250
    1490:	54 e4       	ldi	r21, 0x44	; 68
    1492:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1496:	dc 01       	movw	r26, r24
    1498:	cb 01       	movw	r24, r22
    149a:	8b a3       	std	Y+35, r24	; 0x23
    149c:	9c a3       	std	Y+36, r25	; 0x24
    149e:	ad a3       	std	Y+37, r26	; 0x25
    14a0:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    14a2:	6b a1       	ldd	r22, Y+35	; 0x23
    14a4:	7c a1       	ldd	r23, Y+36	; 0x24
    14a6:	8d a1       	ldd	r24, Y+37	; 0x25
    14a8:	9e a1       	ldd	r25, Y+38	; 0x26
    14aa:	20 e0       	ldi	r18, 0x00	; 0
    14ac:	30 e0       	ldi	r19, 0x00	; 0
    14ae:	40 e8       	ldi	r20, 0x80	; 128
    14b0:	5f e3       	ldi	r21, 0x3F	; 63
    14b2:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    14b6:	88 23       	and	r24, r24
    14b8:	2c f4       	brge	.+10     	; 0x14c4 <LCD_Data+0x176>
		__ticks = 1;
    14ba:	81 e0       	ldi	r24, 0x01	; 1
    14bc:	90 e0       	ldi	r25, 0x00	; 0
    14be:	9a a3       	std	Y+34, r25	; 0x22
    14c0:	89 a3       	std	Y+33, r24	; 0x21
    14c2:	3f c0       	rjmp	.+126    	; 0x1542 <LCD_Data+0x1f4>
	else if (__tmp > 65535)
    14c4:	6b a1       	ldd	r22, Y+35	; 0x23
    14c6:	7c a1       	ldd	r23, Y+36	; 0x24
    14c8:	8d a1       	ldd	r24, Y+37	; 0x25
    14ca:	9e a1       	ldd	r25, Y+38	; 0x26
    14cc:	20 e0       	ldi	r18, 0x00	; 0
    14ce:	3f ef       	ldi	r19, 0xFF	; 255
    14d0:	4f e7       	ldi	r20, 0x7F	; 127
    14d2:	57 e4       	ldi	r21, 0x47	; 71
    14d4:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    14d8:	18 16       	cp	r1, r24
    14da:	4c f5       	brge	.+82     	; 0x152e <LCD_Data+0x1e0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    14dc:	6f a1       	ldd	r22, Y+39	; 0x27
    14de:	78 a5       	ldd	r23, Y+40	; 0x28
    14e0:	89 a5       	ldd	r24, Y+41	; 0x29
    14e2:	9a a5       	ldd	r25, Y+42	; 0x2a
    14e4:	20 e0       	ldi	r18, 0x00	; 0
    14e6:	30 e0       	ldi	r19, 0x00	; 0
    14e8:	40 e2       	ldi	r20, 0x20	; 32
    14ea:	51 e4       	ldi	r21, 0x41	; 65
    14ec:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    14f0:	dc 01       	movw	r26, r24
    14f2:	cb 01       	movw	r24, r22
    14f4:	bc 01       	movw	r22, r24
    14f6:	cd 01       	movw	r24, r26
    14f8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    14fc:	dc 01       	movw	r26, r24
    14fe:	cb 01       	movw	r24, r22
    1500:	9a a3       	std	Y+34, r25	; 0x22
    1502:	89 a3       	std	Y+33, r24	; 0x21
    1504:	0f c0       	rjmp	.+30     	; 0x1524 <LCD_Data+0x1d6>
    1506:	88 ec       	ldi	r24, 0xC8	; 200
    1508:	90 e0       	ldi	r25, 0x00	; 0
    150a:	98 a3       	std	Y+32, r25	; 0x20
    150c:	8f 8f       	std	Y+31, r24	; 0x1f
    150e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1510:	98 a1       	ldd	r25, Y+32	; 0x20
    1512:	01 97       	sbiw	r24, 0x01	; 1
    1514:	f1 f7       	brne	.-4      	; 0x1512 <LCD_Data+0x1c4>
    1516:	98 a3       	std	Y+32, r25	; 0x20
    1518:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    151a:	89 a1       	ldd	r24, Y+33	; 0x21
    151c:	9a a1       	ldd	r25, Y+34	; 0x22
    151e:	01 97       	sbiw	r24, 0x01	; 1
    1520:	9a a3       	std	Y+34, r25	; 0x22
    1522:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1524:	89 a1       	ldd	r24, Y+33	; 0x21
    1526:	9a a1       	ldd	r25, Y+34	; 0x22
    1528:	00 97       	sbiw	r24, 0x00	; 0
    152a:	69 f7       	brne	.-38     	; 0x1506 <LCD_Data+0x1b8>
    152c:	14 c0       	rjmp	.+40     	; 0x1556 <LCD_Data+0x208>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    152e:	6b a1       	ldd	r22, Y+35	; 0x23
    1530:	7c a1       	ldd	r23, Y+36	; 0x24
    1532:	8d a1       	ldd	r24, Y+37	; 0x25
    1534:	9e a1       	ldd	r25, Y+38	; 0x26
    1536:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    153a:	dc 01       	movw	r26, r24
    153c:	cb 01       	movw	r24, r22
    153e:	9a a3       	std	Y+34, r25	; 0x22
    1540:	89 a3       	std	Y+33, r24	; 0x21
    1542:	89 a1       	ldd	r24, Y+33	; 0x21
    1544:	9a a1       	ldd	r25, Y+34	; 0x22
    1546:	9e 8f       	std	Y+30, r25	; 0x1e
    1548:	8d 8f       	std	Y+29, r24	; 0x1d
    154a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    154c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    154e:	01 97       	sbiw	r24, 0x01	; 1
    1550:	f1 f7       	brne	.-4      	; 0x154e <LCD_Data+0x200>
    1552:	9e 8f       	std	Y+30, r25	; 0x1e
    1554:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1);
	LCD_DATA_PORT = data;
    1556:	e5 e3       	ldi	r30, 0x35	; 53
    1558:	f0 e0       	ldi	r31, 0x00	; 0
    155a:	89 ad       	ldd	r24, Y+57	; 0x39
    155c:	80 83       	st	Z, r24
    155e:	80 e0       	ldi	r24, 0x00	; 0
    1560:	90 e0       	ldi	r25, 0x00	; 0
    1562:	a0 e8       	ldi	r26, 0x80	; 128
    1564:	bf e3       	ldi	r27, 0x3F	; 63
    1566:	89 8f       	std	Y+25, r24	; 0x19
    1568:	9a 8f       	std	Y+26, r25	; 0x1a
    156a:	ab 8f       	std	Y+27, r26	; 0x1b
    156c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    156e:	69 8d       	ldd	r22, Y+25	; 0x19
    1570:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1572:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1574:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1576:	20 e0       	ldi	r18, 0x00	; 0
    1578:	30 e0       	ldi	r19, 0x00	; 0
    157a:	4a ef       	ldi	r20, 0xFA	; 250
    157c:	54 e4       	ldi	r21, 0x44	; 68
    157e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1582:	dc 01       	movw	r26, r24
    1584:	cb 01       	movw	r24, r22
    1586:	8d 8b       	std	Y+21, r24	; 0x15
    1588:	9e 8b       	std	Y+22, r25	; 0x16
    158a:	af 8b       	std	Y+23, r26	; 0x17
    158c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    158e:	6d 89       	ldd	r22, Y+21	; 0x15
    1590:	7e 89       	ldd	r23, Y+22	; 0x16
    1592:	8f 89       	ldd	r24, Y+23	; 0x17
    1594:	98 8d       	ldd	r25, Y+24	; 0x18
    1596:	20 e0       	ldi	r18, 0x00	; 0
    1598:	30 e0       	ldi	r19, 0x00	; 0
    159a:	40 e8       	ldi	r20, 0x80	; 128
    159c:	5f e3       	ldi	r21, 0x3F	; 63
    159e:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    15a2:	88 23       	and	r24, r24
    15a4:	2c f4       	brge	.+10     	; 0x15b0 <LCD_Data+0x262>
		__ticks = 1;
    15a6:	81 e0       	ldi	r24, 0x01	; 1
    15a8:	90 e0       	ldi	r25, 0x00	; 0
    15aa:	9c 8b       	std	Y+20, r25	; 0x14
    15ac:	8b 8b       	std	Y+19, r24	; 0x13
    15ae:	3f c0       	rjmp	.+126    	; 0x162e <LCD_Data+0x2e0>
	else if (__tmp > 65535)
    15b0:	6d 89       	ldd	r22, Y+21	; 0x15
    15b2:	7e 89       	ldd	r23, Y+22	; 0x16
    15b4:	8f 89       	ldd	r24, Y+23	; 0x17
    15b6:	98 8d       	ldd	r25, Y+24	; 0x18
    15b8:	20 e0       	ldi	r18, 0x00	; 0
    15ba:	3f ef       	ldi	r19, 0xFF	; 255
    15bc:	4f e7       	ldi	r20, 0x7F	; 127
    15be:	57 e4       	ldi	r21, 0x47	; 71
    15c0:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    15c4:	18 16       	cp	r1, r24
    15c6:	4c f5       	brge	.+82     	; 0x161a <LCD_Data+0x2cc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    15c8:	69 8d       	ldd	r22, Y+25	; 0x19
    15ca:	7a 8d       	ldd	r23, Y+26	; 0x1a
    15cc:	8b 8d       	ldd	r24, Y+27	; 0x1b
    15ce:	9c 8d       	ldd	r25, Y+28	; 0x1c
    15d0:	20 e0       	ldi	r18, 0x00	; 0
    15d2:	30 e0       	ldi	r19, 0x00	; 0
    15d4:	40 e2       	ldi	r20, 0x20	; 32
    15d6:	51 e4       	ldi	r21, 0x41	; 65
    15d8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    15dc:	dc 01       	movw	r26, r24
    15de:	cb 01       	movw	r24, r22
    15e0:	bc 01       	movw	r22, r24
    15e2:	cd 01       	movw	r24, r26
    15e4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    15e8:	dc 01       	movw	r26, r24
    15ea:	cb 01       	movw	r24, r22
    15ec:	9c 8b       	std	Y+20, r25	; 0x14
    15ee:	8b 8b       	std	Y+19, r24	; 0x13
    15f0:	0f c0       	rjmp	.+30     	; 0x1610 <LCD_Data+0x2c2>
    15f2:	88 ec       	ldi	r24, 0xC8	; 200
    15f4:	90 e0       	ldi	r25, 0x00	; 0
    15f6:	9a 8b       	std	Y+18, r25	; 0x12
    15f8:	89 8b       	std	Y+17, r24	; 0x11
    15fa:	89 89       	ldd	r24, Y+17	; 0x11
    15fc:	9a 89       	ldd	r25, Y+18	; 0x12
    15fe:	01 97       	sbiw	r24, 0x01	; 1
    1600:	f1 f7       	brne	.-4      	; 0x15fe <LCD_Data+0x2b0>
    1602:	9a 8b       	std	Y+18, r25	; 0x12
    1604:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1606:	8b 89       	ldd	r24, Y+19	; 0x13
    1608:	9c 89       	ldd	r25, Y+20	; 0x14
    160a:	01 97       	sbiw	r24, 0x01	; 1
    160c:	9c 8b       	std	Y+20, r25	; 0x14
    160e:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1610:	8b 89       	ldd	r24, Y+19	; 0x13
    1612:	9c 89       	ldd	r25, Y+20	; 0x14
    1614:	00 97       	sbiw	r24, 0x00	; 0
    1616:	69 f7       	brne	.-38     	; 0x15f2 <LCD_Data+0x2a4>
    1618:	14 c0       	rjmp	.+40     	; 0x1642 <LCD_Data+0x2f4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    161a:	6d 89       	ldd	r22, Y+21	; 0x15
    161c:	7e 89       	ldd	r23, Y+22	; 0x16
    161e:	8f 89       	ldd	r24, Y+23	; 0x17
    1620:	98 8d       	ldd	r25, Y+24	; 0x18
    1622:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1626:	dc 01       	movw	r26, r24
    1628:	cb 01       	movw	r24, r22
    162a:	9c 8b       	std	Y+20, r25	; 0x14
    162c:	8b 8b       	std	Y+19, r24	; 0x13
    162e:	8b 89       	ldd	r24, Y+19	; 0x13
    1630:	9c 89       	ldd	r25, Y+20	; 0x14
    1632:	98 8b       	std	Y+16, r25	; 0x10
    1634:	8f 87       	std	Y+15, r24	; 0x0f
    1636:	8f 85       	ldd	r24, Y+15	; 0x0f
    1638:	98 89       	ldd	r25, Y+16	; 0x10
    163a:	01 97       	sbiw	r24, 0x01	; 1
    163c:	f1 f7       	brne	.-4      	; 0x163a <LCD_Data+0x2ec>
    163e:	98 8b       	std	Y+16, r25	; 0x10
    1640:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	LCD_CTRL_PORT &=~(1<<E);
    1642:	a2 e3       	ldi	r26, 0x32	; 50
    1644:	b0 e0       	ldi	r27, 0x00	; 0
    1646:	e2 e3       	ldi	r30, 0x32	; 50
    1648:	f0 e0       	ldi	r31, 0x00	; 0
    164a:	80 81       	ld	r24, Z
    164c:	8b 7f       	andi	r24, 0xFB	; 251
    164e:	8c 93       	st	X, r24
    1650:	80 e0       	ldi	r24, 0x00	; 0
    1652:	90 e0       	ldi	r25, 0x00	; 0
    1654:	a0 e8       	ldi	r26, 0x80	; 128
    1656:	bf e3       	ldi	r27, 0x3F	; 63
    1658:	8b 87       	std	Y+11, r24	; 0x0b
    165a:	9c 87       	std	Y+12, r25	; 0x0c
    165c:	ad 87       	std	Y+13, r26	; 0x0d
    165e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1660:	6b 85       	ldd	r22, Y+11	; 0x0b
    1662:	7c 85       	ldd	r23, Y+12	; 0x0c
    1664:	8d 85       	ldd	r24, Y+13	; 0x0d
    1666:	9e 85       	ldd	r25, Y+14	; 0x0e
    1668:	20 e0       	ldi	r18, 0x00	; 0
    166a:	30 e0       	ldi	r19, 0x00	; 0
    166c:	4a ef       	ldi	r20, 0xFA	; 250
    166e:	54 e4       	ldi	r21, 0x44	; 68
    1670:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1674:	dc 01       	movw	r26, r24
    1676:	cb 01       	movw	r24, r22
    1678:	8f 83       	std	Y+7, r24	; 0x07
    167a:	98 87       	std	Y+8, r25	; 0x08
    167c:	a9 87       	std	Y+9, r26	; 0x09
    167e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1680:	6f 81       	ldd	r22, Y+7	; 0x07
    1682:	78 85       	ldd	r23, Y+8	; 0x08
    1684:	89 85       	ldd	r24, Y+9	; 0x09
    1686:	9a 85       	ldd	r25, Y+10	; 0x0a
    1688:	20 e0       	ldi	r18, 0x00	; 0
    168a:	30 e0       	ldi	r19, 0x00	; 0
    168c:	40 e8       	ldi	r20, 0x80	; 128
    168e:	5f e3       	ldi	r21, 0x3F	; 63
    1690:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    1694:	88 23       	and	r24, r24
    1696:	2c f4       	brge	.+10     	; 0x16a2 <LCD_Data+0x354>
		__ticks = 1;
    1698:	81 e0       	ldi	r24, 0x01	; 1
    169a:	90 e0       	ldi	r25, 0x00	; 0
    169c:	9e 83       	std	Y+6, r25	; 0x06
    169e:	8d 83       	std	Y+5, r24	; 0x05
    16a0:	3f c0       	rjmp	.+126    	; 0x1720 <LCD_Data+0x3d2>
	else if (__tmp > 65535)
    16a2:	6f 81       	ldd	r22, Y+7	; 0x07
    16a4:	78 85       	ldd	r23, Y+8	; 0x08
    16a6:	89 85       	ldd	r24, Y+9	; 0x09
    16a8:	9a 85       	ldd	r25, Y+10	; 0x0a
    16aa:	20 e0       	ldi	r18, 0x00	; 0
    16ac:	3f ef       	ldi	r19, 0xFF	; 255
    16ae:	4f e7       	ldi	r20, 0x7F	; 127
    16b0:	57 e4       	ldi	r21, 0x47	; 71
    16b2:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    16b6:	18 16       	cp	r1, r24
    16b8:	4c f5       	brge	.+82     	; 0x170c <LCD_Data+0x3be>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    16ba:	6b 85       	ldd	r22, Y+11	; 0x0b
    16bc:	7c 85       	ldd	r23, Y+12	; 0x0c
    16be:	8d 85       	ldd	r24, Y+13	; 0x0d
    16c0:	9e 85       	ldd	r25, Y+14	; 0x0e
    16c2:	20 e0       	ldi	r18, 0x00	; 0
    16c4:	30 e0       	ldi	r19, 0x00	; 0
    16c6:	40 e2       	ldi	r20, 0x20	; 32
    16c8:	51 e4       	ldi	r21, 0x41	; 65
    16ca:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    16ce:	dc 01       	movw	r26, r24
    16d0:	cb 01       	movw	r24, r22
    16d2:	bc 01       	movw	r22, r24
    16d4:	cd 01       	movw	r24, r26
    16d6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    16da:	dc 01       	movw	r26, r24
    16dc:	cb 01       	movw	r24, r22
    16de:	9e 83       	std	Y+6, r25	; 0x06
    16e0:	8d 83       	std	Y+5, r24	; 0x05
    16e2:	0f c0       	rjmp	.+30     	; 0x1702 <LCD_Data+0x3b4>
    16e4:	88 ec       	ldi	r24, 0xC8	; 200
    16e6:	90 e0       	ldi	r25, 0x00	; 0
    16e8:	9c 83       	std	Y+4, r25	; 0x04
    16ea:	8b 83       	std	Y+3, r24	; 0x03
    16ec:	8b 81       	ldd	r24, Y+3	; 0x03
    16ee:	9c 81       	ldd	r25, Y+4	; 0x04
    16f0:	01 97       	sbiw	r24, 0x01	; 1
    16f2:	f1 f7       	brne	.-4      	; 0x16f0 <LCD_Data+0x3a2>
    16f4:	9c 83       	std	Y+4, r25	; 0x04
    16f6:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    16f8:	8d 81       	ldd	r24, Y+5	; 0x05
    16fa:	9e 81       	ldd	r25, Y+6	; 0x06
    16fc:	01 97       	sbiw	r24, 0x01	; 1
    16fe:	9e 83       	std	Y+6, r25	; 0x06
    1700:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1702:	8d 81       	ldd	r24, Y+5	; 0x05
    1704:	9e 81       	ldd	r25, Y+6	; 0x06
    1706:	00 97       	sbiw	r24, 0x00	; 0
    1708:	69 f7       	brne	.-38     	; 0x16e4 <LCD_Data+0x396>
    170a:	14 c0       	rjmp	.+40     	; 0x1734 <LCD_Data+0x3e6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    170c:	6f 81       	ldd	r22, Y+7	; 0x07
    170e:	78 85       	ldd	r23, Y+8	; 0x08
    1710:	89 85       	ldd	r24, Y+9	; 0x09
    1712:	9a 85       	ldd	r25, Y+10	; 0x0a
    1714:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1718:	dc 01       	movw	r26, r24
    171a:	cb 01       	movw	r24, r22
    171c:	9e 83       	std	Y+6, r25	; 0x06
    171e:	8d 83       	std	Y+5, r24	; 0x05
    1720:	8d 81       	ldd	r24, Y+5	; 0x05
    1722:	9e 81       	ldd	r25, Y+6	; 0x06
    1724:	9a 83       	std	Y+2, r25	; 0x02
    1726:	89 83       	std	Y+1, r24	; 0x01
    1728:	89 81       	ldd	r24, Y+1	; 0x01
    172a:	9a 81       	ldd	r25, Y+2	; 0x02
    172c:	01 97       	sbiw	r24, 0x01	; 1
    172e:	f1 f7       	brne	.-4      	; 0x172c <LCD_Data+0x3de>
    1730:	9a 83       	std	Y+2, r25	; 0x02
    1732:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
}
    1734:	e9 96       	adiw	r28, 0x39	; 57
    1736:	0f b6       	in	r0, 0x3f	; 63
    1738:	f8 94       	cli
    173a:	de bf       	out	0x3e, r29	; 62
    173c:	0f be       	out	0x3f, r0	; 63
    173e:	cd bf       	out	0x3d, r28	; 61
    1740:	cf 91       	pop	r28
    1742:	df 91       	pop	r29
    1744:	08 95       	ret

00001746 <LCD_goToRowCol>:
void LCD_goToRowCol(unsigned char row ,unsigned char col ){
    1746:	df 93       	push	r29
    1748:	cf 93       	push	r28
    174a:	cd b7       	in	r28, 0x3d	; 61
    174c:	de b7       	in	r29, 0x3e	; 62
    174e:	64 97       	sbiw	r28, 0x14	; 20
    1750:	0f b6       	in	r0, 0x3f	; 63
    1752:	f8 94       	cli
    1754:	de bf       	out	0x3e, r29	; 62
    1756:	0f be       	out	0x3f, r0	; 63
    1758:	cd bf       	out	0x3d, r28	; 61
    175a:	8b 8b       	std	Y+19, r24	; 0x13
    175c:	6c 8b       	std	Y+20, r22	; 0x14
	unsigned char fristCharAddr[]={0x80 , 0XC0, 0X94 ,0XD4};
    175e:	80 e8       	ldi	r24, 0x80	; 128
    1760:	8f 87       	std	Y+15, r24	; 0x0f
    1762:	80 ec       	ldi	r24, 0xC0	; 192
    1764:	88 8b       	std	Y+16, r24	; 0x10
    1766:	84 e9       	ldi	r24, 0x94	; 148
    1768:	89 8b       	std	Y+17, r24	; 0x11
    176a:	84 ed       	ldi	r24, 0xD4	; 212
    176c:	8a 8b       	std	Y+18, r24	; 0x12
	LCD_command(fristCharAddr[row-1] + col-1);
    176e:	8b 89       	ldd	r24, Y+19	; 0x13
    1770:	88 2f       	mov	r24, r24
    1772:	90 e0       	ldi	r25, 0x00	; 0
    1774:	9c 01       	movw	r18, r24
    1776:	21 50       	subi	r18, 0x01	; 1
    1778:	30 40       	sbci	r19, 0x00	; 0
    177a:	ce 01       	movw	r24, r28
    177c:	0f 96       	adiw	r24, 0x0f	; 15
    177e:	fc 01       	movw	r30, r24
    1780:	e2 0f       	add	r30, r18
    1782:	f3 1f       	adc	r31, r19
    1784:	90 81       	ld	r25, Z
    1786:	8c 89       	ldd	r24, Y+20	; 0x14
    1788:	89 0f       	add	r24, r25
    178a:	81 50       	subi	r24, 0x01	; 1
    178c:	0e 94 b2 07 	call	0xf64	; 0xf64 <LCD_command>
    1790:	80 e0       	ldi	r24, 0x00	; 0
    1792:	90 e0       	ldi	r25, 0x00	; 0
    1794:	a0 e8       	ldi	r26, 0x80	; 128
    1796:	bf e3       	ldi	r27, 0x3F	; 63
    1798:	8b 87       	std	Y+11, r24	; 0x0b
    179a:	9c 87       	std	Y+12, r25	; 0x0c
    179c:	ad 87       	std	Y+13, r26	; 0x0d
    179e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    17a0:	6b 85       	ldd	r22, Y+11	; 0x0b
    17a2:	7c 85       	ldd	r23, Y+12	; 0x0c
    17a4:	8d 85       	ldd	r24, Y+13	; 0x0d
    17a6:	9e 85       	ldd	r25, Y+14	; 0x0e
    17a8:	20 e0       	ldi	r18, 0x00	; 0
    17aa:	30 e0       	ldi	r19, 0x00	; 0
    17ac:	4a ef       	ldi	r20, 0xFA	; 250
    17ae:	54 e4       	ldi	r21, 0x44	; 68
    17b0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    17b4:	dc 01       	movw	r26, r24
    17b6:	cb 01       	movw	r24, r22
    17b8:	8f 83       	std	Y+7, r24	; 0x07
    17ba:	98 87       	std	Y+8, r25	; 0x08
    17bc:	a9 87       	std	Y+9, r26	; 0x09
    17be:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    17c0:	6f 81       	ldd	r22, Y+7	; 0x07
    17c2:	78 85       	ldd	r23, Y+8	; 0x08
    17c4:	89 85       	ldd	r24, Y+9	; 0x09
    17c6:	9a 85       	ldd	r25, Y+10	; 0x0a
    17c8:	20 e0       	ldi	r18, 0x00	; 0
    17ca:	30 e0       	ldi	r19, 0x00	; 0
    17cc:	40 e8       	ldi	r20, 0x80	; 128
    17ce:	5f e3       	ldi	r21, 0x3F	; 63
    17d0:	0e 94 4d 04 	call	0x89a	; 0x89a <__ltsf2>
    17d4:	88 23       	and	r24, r24
    17d6:	2c f4       	brge	.+10     	; 0x17e2 <LCD_goToRowCol+0x9c>
		__ticks = 1;
    17d8:	81 e0       	ldi	r24, 0x01	; 1
    17da:	90 e0       	ldi	r25, 0x00	; 0
    17dc:	9e 83       	std	Y+6, r25	; 0x06
    17de:	8d 83       	std	Y+5, r24	; 0x05
    17e0:	3f c0       	rjmp	.+126    	; 0x1860 <LCD_goToRowCol+0x11a>
	else if (__tmp > 65535)
    17e2:	6f 81       	ldd	r22, Y+7	; 0x07
    17e4:	78 85       	ldd	r23, Y+8	; 0x08
    17e6:	89 85       	ldd	r24, Y+9	; 0x09
    17e8:	9a 85       	ldd	r25, Y+10	; 0x0a
    17ea:	20 e0       	ldi	r18, 0x00	; 0
    17ec:	3f ef       	ldi	r19, 0xFF	; 255
    17ee:	4f e7       	ldi	r20, 0x7F	; 127
    17f0:	57 e4       	ldi	r21, 0x47	; 71
    17f2:	0e 94 ed 03 	call	0x7da	; 0x7da <__gtsf2>
    17f6:	18 16       	cp	r1, r24
    17f8:	4c f5       	brge	.+82     	; 0x184c <LCD_goToRowCol+0x106>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    17fa:	6b 85       	ldd	r22, Y+11	; 0x0b
    17fc:	7c 85       	ldd	r23, Y+12	; 0x0c
    17fe:	8d 85       	ldd	r24, Y+13	; 0x0d
    1800:	9e 85       	ldd	r25, Y+14	; 0x0e
    1802:	20 e0       	ldi	r18, 0x00	; 0
    1804:	30 e0       	ldi	r19, 0x00	; 0
    1806:	40 e2       	ldi	r20, 0x20	; 32
    1808:	51 e4       	ldi	r21, 0x41	; 65
    180a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    180e:	dc 01       	movw	r26, r24
    1810:	cb 01       	movw	r24, r22
    1812:	bc 01       	movw	r22, r24
    1814:	cd 01       	movw	r24, r26
    1816:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    181a:	dc 01       	movw	r26, r24
    181c:	cb 01       	movw	r24, r22
    181e:	9e 83       	std	Y+6, r25	; 0x06
    1820:	8d 83       	std	Y+5, r24	; 0x05
    1822:	0f c0       	rjmp	.+30     	; 0x1842 <LCD_goToRowCol+0xfc>
    1824:	88 ec       	ldi	r24, 0xC8	; 200
    1826:	90 e0       	ldi	r25, 0x00	; 0
    1828:	9c 83       	std	Y+4, r25	; 0x04
    182a:	8b 83       	std	Y+3, r24	; 0x03
    182c:	8b 81       	ldd	r24, Y+3	; 0x03
    182e:	9c 81       	ldd	r25, Y+4	; 0x04
    1830:	01 97       	sbiw	r24, 0x01	; 1
    1832:	f1 f7       	brne	.-4      	; 0x1830 <LCD_goToRowCol+0xea>
    1834:	9c 83       	std	Y+4, r25	; 0x04
    1836:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1838:	8d 81       	ldd	r24, Y+5	; 0x05
    183a:	9e 81       	ldd	r25, Y+6	; 0x06
    183c:	01 97       	sbiw	r24, 0x01	; 1
    183e:	9e 83       	std	Y+6, r25	; 0x06
    1840:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1842:	8d 81       	ldd	r24, Y+5	; 0x05
    1844:	9e 81       	ldd	r25, Y+6	; 0x06
    1846:	00 97       	sbiw	r24, 0x00	; 0
    1848:	69 f7       	brne	.-38     	; 0x1824 <LCD_goToRowCol+0xde>
    184a:	14 c0       	rjmp	.+40     	; 0x1874 <LCD_goToRowCol+0x12e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    184c:	6f 81       	ldd	r22, Y+7	; 0x07
    184e:	78 85       	ldd	r23, Y+8	; 0x08
    1850:	89 85       	ldd	r24, Y+9	; 0x09
    1852:	9a 85       	ldd	r25, Y+10	; 0x0a
    1854:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1858:	dc 01       	movw	r26, r24
    185a:	cb 01       	movw	r24, r22
    185c:	9e 83       	std	Y+6, r25	; 0x06
    185e:	8d 83       	std	Y+5, r24	; 0x05
    1860:	8d 81       	ldd	r24, Y+5	; 0x05
    1862:	9e 81       	ldd	r25, Y+6	; 0x06
    1864:	9a 83       	std	Y+2, r25	; 0x02
    1866:	89 83       	std	Y+1, r24	; 0x01
    1868:	89 81       	ldd	r24, Y+1	; 0x01
    186a:	9a 81       	ldd	r25, Y+2	; 0x02
    186c:	01 97       	sbiw	r24, 0x01	; 1
    186e:	f1 f7       	brne	.-4      	; 0x186c <LCD_goToRowCol+0x126>
    1870:	9a 83       	std	Y+2, r25	; 0x02
    1872:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);

}
    1874:	64 96       	adiw	r28, 0x14	; 20
    1876:	0f b6       	in	r0, 0x3f	; 63
    1878:	f8 94       	cli
    187a:	de bf       	out	0x3e, r29	; 62
    187c:	0f be       	out	0x3f, r0	; 63
    187e:	cd bf       	out	0x3d, r28	; 61
    1880:	cf 91       	pop	r28
    1882:	df 91       	pop	r29
    1884:	08 95       	ret

00001886 <LCD_displayCharacter>:
void LCD_displayCharacter(unsigned char Byte ){
    1886:	df 93       	push	r29
    1888:	cf 93       	push	r28
    188a:	0f 92       	push	r0
    188c:	cd b7       	in	r28, 0x3d	; 61
    188e:	de b7       	in	r29, 0x3e	; 62
    1890:	89 83       	std	Y+1, r24	; 0x01
	LCD_Data(Byte);
    1892:	89 81       	ldd	r24, Y+1	; 0x01
    1894:	0e 94 a7 09 	call	0x134e	; 0x134e <LCD_Data>
}
    1898:	0f 90       	pop	r0
    189a:	cf 91       	pop	r28
    189c:	df 91       	pop	r29
    189e:	08 95       	ret

000018a0 <LCD_displayString>:

void LCD_displayString(unsigned char *str ){
    18a0:	df 93       	push	r29
    18a2:	cf 93       	push	r28
    18a4:	00 d0       	rcall	.+0      	; 0x18a6 <LCD_displayString+0x6>
    18a6:	cd b7       	in	r28, 0x3d	; 61
    18a8:	de b7       	in	r29, 0x3e	; 62
    18aa:	9a 83       	std	Y+2, r25	; 0x02
    18ac:	89 83       	std	Y+1, r24	; 0x01
	do{
		LCD_Data(*str++);
    18ae:	e9 81       	ldd	r30, Y+1	; 0x01
    18b0:	fa 81       	ldd	r31, Y+2	; 0x02
    18b2:	20 81       	ld	r18, Z
    18b4:	89 81       	ldd	r24, Y+1	; 0x01
    18b6:	9a 81       	ldd	r25, Y+2	; 0x02
    18b8:	01 96       	adiw	r24, 0x01	; 1
    18ba:	9a 83       	std	Y+2, r25	; 0x02
    18bc:	89 83       	std	Y+1, r24	; 0x01
    18be:	82 2f       	mov	r24, r18
    18c0:	0e 94 a7 09 	call	0x134e	; 0x134e <LCD_Data>
	}while(*str);
    18c4:	e9 81       	ldd	r30, Y+1	; 0x01
    18c6:	fa 81       	ldd	r31, Y+2	; 0x02
    18c8:	80 81       	ld	r24, Z
    18ca:	88 23       	and	r24, r24
    18cc:	81 f7       	brne	.-32     	; 0x18ae <LCD_displayString+0xe>
}
    18ce:	0f 90       	pop	r0
    18d0:	0f 90       	pop	r0
    18d2:	cf 91       	pop	r28
    18d4:	df 91       	pop	r29
    18d6:	08 95       	ret

000018d8 <LCD_displayStringRowCol>:
void LCD_displayStringRowCol(unsigned char row , unsigned char col , unsigned char *str ){
    18d8:	df 93       	push	r29
    18da:	cf 93       	push	r28
    18dc:	00 d0       	rcall	.+0      	; 0x18de <LCD_displayStringRowCol+0x6>
    18de:	00 d0       	rcall	.+0      	; 0x18e0 <LCD_displayStringRowCol+0x8>
    18e0:	cd b7       	in	r28, 0x3d	; 61
    18e2:	de b7       	in	r29, 0x3e	; 62
    18e4:	89 83       	std	Y+1, r24	; 0x01
    18e6:	6a 83       	std	Y+2, r22	; 0x02
    18e8:	5c 83       	std	Y+4, r21	; 0x04
    18ea:	4b 83       	std	Y+3, r20	; 0x03
	LCD_goToRowCol(row , col);
    18ec:	89 81       	ldd	r24, Y+1	; 0x01
    18ee:	6a 81       	ldd	r22, Y+2	; 0x02
    18f0:	0e 94 a3 0b 	call	0x1746	; 0x1746 <LCD_goToRowCol>
	LCD_displayString(str);
    18f4:	8b 81       	ldd	r24, Y+3	; 0x03
    18f6:	9c 81       	ldd	r25, Y+4	; 0x04
    18f8:	0e 94 50 0c 	call	0x18a0	; 0x18a0 <LCD_displayString>
}
    18fc:	0f 90       	pop	r0
    18fe:	0f 90       	pop	r0
    1900:	0f 90       	pop	r0
    1902:	0f 90       	pop	r0
    1904:	cf 91       	pop	r28
    1906:	df 91       	pop	r29
    1908:	08 95       	ret

0000190a <LCD_clearScreen>:
void LCD_clearScreen(void){
    190a:	df 93       	push	r29
    190c:	cf 93       	push	r28
    190e:	cd b7       	in	r28, 0x3d	; 61
    1910:	de b7       	in	r29, 0x3e	; 62
	LCD_command(0x01); //clear display
    1912:	81 e0       	ldi	r24, 0x01	; 1
    1914:	0e 94 b2 07 	call	0xf64	; 0xf64 <LCD_command>
}
    1918:	cf 91       	pop	r28
    191a:	df 91       	pop	r29
    191c:	08 95       	ret

0000191e <LCD_intToString>:
void LCD_intToString(int data){
    191e:	df 93       	push	r29
    1920:	cf 93       	push	r28
    1922:	cd b7       	in	r28, 0x3d	; 61
    1924:	de b7       	in	r29, 0x3e	; 62
    1926:	62 97       	sbiw	r28, 0x12	; 18
    1928:	0f b6       	in	r0, 0x3f	; 63
    192a:	f8 94       	cli
    192c:	de bf       	out	0x3e, r29	; 62
    192e:	0f be       	out	0x3f, r0	; 63
    1930:	cd bf       	out	0x3d, r28	; 61
    1932:	9a 8b       	std	Y+18, r25	; 0x12
    1934:	89 8b       	std	Y+17, r24	; 0x11
	unsigned char buff[16]; /* String to hold the ascii result */
	// itoa(data,buff,10); /* 10 for decimal */
	sprintf(buff ,"%d",data);
    1936:	00 d0       	rcall	.+0      	; 0x1938 <LCD_intToString+0x1a>
    1938:	00 d0       	rcall	.+0      	; 0x193a <LCD_intToString+0x1c>
    193a:	00 d0       	rcall	.+0      	; 0x193c <LCD_intToString+0x1e>
    193c:	ed b7       	in	r30, 0x3d	; 61
    193e:	fe b7       	in	r31, 0x3e	; 62
    1940:	31 96       	adiw	r30, 0x01	; 1
    1942:	ce 01       	movw	r24, r28
    1944:	01 96       	adiw	r24, 0x01	; 1
    1946:	91 83       	std	Z+1, r25	; 0x01
    1948:	80 83       	st	Z, r24
    194a:	80 e6       	ldi	r24, 0x60	; 96
    194c:	90 e0       	ldi	r25, 0x00	; 0
    194e:	93 83       	std	Z+3, r25	; 0x03
    1950:	82 83       	std	Z+2, r24	; 0x02
    1952:	89 89       	ldd	r24, Y+17	; 0x11
    1954:	9a 89       	ldd	r25, Y+18	; 0x12
    1956:	95 83       	std	Z+5, r25	; 0x05
    1958:	84 83       	std	Z+4, r24	; 0x04
    195a:	0e 94 ae 0e 	call	0x1d5c	; 0x1d5c <sprintf>
    195e:	8d b7       	in	r24, 0x3d	; 61
    1960:	9e b7       	in	r25, 0x3e	; 62
    1962:	06 96       	adiw	r24, 0x06	; 6
    1964:	0f b6       	in	r0, 0x3f	; 63
    1966:	f8 94       	cli
    1968:	9e bf       	out	0x3e, r25	; 62
    196a:	0f be       	out	0x3f, r0	; 63
    196c:	8d bf       	out	0x3d, r24	; 61
	 LCD_displayString(buff);
    196e:	ce 01       	movw	r24, r28
    1970:	01 96       	adiw	r24, 0x01	; 1
    1972:	0e 94 50 0c 	call	0x18a0	; 0x18a0 <LCD_displayString>
}
    1976:	62 96       	adiw	r28, 0x12	; 18
    1978:	0f b6       	in	r0, 0x3f	; 63
    197a:	f8 94       	cli
    197c:	de bf       	out	0x3e, r29	; 62
    197e:	0f be       	out	0x3f, r0	; 63
    1980:	cd bf       	out	0x3d, r28	; 61
    1982:	cf 91       	pop	r28
    1984:	df 91       	pop	r29
    1986:	08 95       	ret

00001988 <ADC_init>:
#include "util/delay.h"
#include "lcdlib.h"

#define VREF 5

void ADC_init(){
    1988:	df 93       	push	r29
    198a:	cf 93       	push	r28
    198c:	cd b7       	in	r28, 0x3d	; 61
    198e:	de b7       	in	r29, 0x3e	; 62
	/*Internal 2.56V Voltage Reference with external capacitor at AREF pin*/
	ADMUX |=(1<<REFS0) ;
    1990:	a7 e2       	ldi	r26, 0x27	; 39
    1992:	b0 e0       	ldi	r27, 0x00	; 0
    1994:	e7 e2       	ldi	r30, 0x27	; 39
    1996:	f0 e0       	ldi	r31, 0x00	; 0
    1998:	80 81       	ld	r24, Z
    199a:	80 64       	ori	r24, 0x40	; 64
    199c:	8c 93       	st	X, r24
	/* ADC Enable*/
	ADCSRA |=(1<<ADEN)|(1<<ADPS1)|(1<<ADPS2);
    199e:	a6 e2       	ldi	r26, 0x26	; 38
    19a0:	b0 e0       	ldi	r27, 0x00	; 0
    19a2:	e6 e2       	ldi	r30, 0x26	; 38
    19a4:	f0 e0       	ldi	r31, 0x00	; 0
    19a6:	80 81       	ld	r24, Z
    19a8:	86 68       	ori	r24, 0x86	; 134
    19aa:	8c 93       	st	X, r24
}
    19ac:	cf 91       	pop	r28
    19ae:	df 91       	pop	r29
    19b0:	08 95       	ret

000019b2 <ADC_read>:

unsigned short ADC_read(unsigned char ch){
    19b2:	df 93       	push	r29
    19b4:	cf 93       	push	r28
    19b6:	0f 92       	push	r0
    19b8:	cd b7       	in	r28, 0x3d	; 61
    19ba:	de b7       	in	r29, 0x3e	; 62
    19bc:	89 83       	std	Y+1, r24	; 0x01
	ch &=0x07;
    19be:	89 81       	ldd	r24, Y+1	; 0x01
    19c0:	87 70       	andi	r24, 0x07	; 7
    19c2:	89 83       	std	Y+1, r24	; 0x01
	DDRA &=~(1<<ch);
    19c4:	aa e3       	ldi	r26, 0x3A	; 58
    19c6:	b0 e0       	ldi	r27, 0x00	; 0
    19c8:	ea e3       	ldi	r30, 0x3A	; 58
    19ca:	f0 e0       	ldi	r31, 0x00	; 0
    19cc:	80 81       	ld	r24, Z
    19ce:	48 2f       	mov	r20, r24
    19d0:	89 81       	ldd	r24, Y+1	; 0x01
    19d2:	28 2f       	mov	r18, r24
    19d4:	30 e0       	ldi	r19, 0x00	; 0
    19d6:	81 e0       	ldi	r24, 0x01	; 1
    19d8:	90 e0       	ldi	r25, 0x00	; 0
    19da:	02 2e       	mov	r0, r18
    19dc:	02 c0       	rjmp	.+4      	; 0x19e2 <ADC_read+0x30>
    19de:	88 0f       	add	r24, r24
    19e0:	99 1f       	adc	r25, r25
    19e2:	0a 94       	dec	r0
    19e4:	e2 f7       	brpl	.-8      	; 0x19de <ADC_read+0x2c>
    19e6:	80 95       	com	r24
    19e8:	84 23       	and	r24, r20
    19ea:	8c 93       	st	X, r24
	ADMUX |= ch ;
    19ec:	a7 e2       	ldi	r26, 0x27	; 39
    19ee:	b0 e0       	ldi	r27, 0x00	; 0
    19f0:	e7 e2       	ldi	r30, 0x27	; 39
    19f2:	f0 e0       	ldi	r31, 0x00	; 0
    19f4:	90 81       	ld	r25, Z
    19f6:	89 81       	ldd	r24, Y+1	; 0x01
    19f8:	89 2b       	or	r24, r25
    19fa:	8c 93       	st	X, r24
	ADCSRA |=(1<<ADSC);
    19fc:	a6 e2       	ldi	r26, 0x26	; 38
    19fe:	b0 e0       	ldi	r27, 0x00	; 0
    1a00:	e6 e2       	ldi	r30, 0x26	; 38
    1a02:	f0 e0       	ldi	r31, 0x00	; 0
    1a04:	80 81       	ld	r24, Z
    1a06:	80 64       	ori	r24, 0x40	; 64
    1a08:	8c 93       	st	X, r24
	while(!(ADCSRA & (1<<ADIF)) );
    1a0a:	e6 e2       	ldi	r30, 0x26	; 38
    1a0c:	f0 e0       	ldi	r31, 0x00	; 0
    1a0e:	80 81       	ld	r24, Z
    1a10:	88 2f       	mov	r24, r24
    1a12:	90 e0       	ldi	r25, 0x00	; 0
    1a14:	80 71       	andi	r24, 0x10	; 16
    1a16:	90 70       	andi	r25, 0x00	; 0
    1a18:	00 97       	sbiw	r24, 0x00	; 0
    1a1a:	b9 f3       	breq	.-18     	; 0x1a0a <ADC_read+0x58>
	ADCSRA |=(1<<ADIF);
    1a1c:	a6 e2       	ldi	r26, 0x26	; 38
    1a1e:	b0 e0       	ldi	r27, 0x00	; 0
    1a20:	e6 e2       	ldi	r30, 0x26	; 38
    1a22:	f0 e0       	ldi	r31, 0x00	; 0
    1a24:	80 81       	ld	r24, Z
    1a26:	80 61       	ori	r24, 0x10	; 16
    1a28:	8c 93       	st	X, r24
	return ADC;
    1a2a:	e4 e2       	ldi	r30, 0x24	; 36
    1a2c:	f0 e0       	ldi	r31, 0x00	; 0
    1a2e:	80 81       	ld	r24, Z
    1a30:	91 81       	ldd	r25, Z+1	; 0x01
}
    1a32:	0f 90       	pop	r0
    1a34:	cf 91       	pop	r28
    1a36:	df 91       	pop	r29
    1a38:	08 95       	ret

00001a3a <PWM_init_phaseCorrect>:



void PWM_init_phaseCorrect(){
    1a3a:	df 93       	push	r29
    1a3c:	cf 93       	push	r28
    1a3e:	cd b7       	in	r28, 0x3d	; 61
    1a40:	de b7       	in	r29, 0x3e	; 62
	DDRB |=(1<<PB3);
    1a42:	a7 e3       	ldi	r26, 0x37	; 55
    1a44:	b0 e0       	ldi	r27, 0x00	; 0
    1a46:	e7 e3       	ldi	r30, 0x37	; 55
    1a48:	f0 e0       	ldi	r31, 0x00	; 0
    1a4a:	80 81       	ld	r24, Z
    1a4c:	88 60       	ori	r24, 0x08	; 8
    1a4e:	8c 93       	st	X, r24
	OCR0 =0;
    1a50:	ec e5       	ldi	r30, 0x5C	; 92
    1a52:	f0 e0       	ldi	r31, 0x00	; 0
    1a54:	10 82       	st	Z, r1
	TCCR0 =(1<<WGM00)|(1<<COM01)|(1<<CS00);
    1a56:	e3 e5       	ldi	r30, 0x53	; 83
    1a58:	f0 e0       	ldi	r31, 0x00	; 0
    1a5a:	81 e6       	ldi	r24, 0x61	; 97
    1a5c:	80 83       	st	Z, r24
}
    1a5e:	cf 91       	pop	r28
    1a60:	df 91       	pop	r29
    1a62:	08 95       	ret

00001a64 <PWM_init_fastPwm>:

void PWM_init_fastPwm(){
    1a64:	df 93       	push	r29
    1a66:	cf 93       	push	r28
    1a68:	cd b7       	in	r28, 0x3d	; 61
    1a6a:	de b7       	in	r29, 0x3e	; 62
	DDRB |=(1<<PB3);
    1a6c:	a7 e3       	ldi	r26, 0x37	; 55
    1a6e:	b0 e0       	ldi	r27, 0x00	; 0
    1a70:	e7 e3       	ldi	r30, 0x37	; 55
    1a72:	f0 e0       	ldi	r31, 0x00	; 0
    1a74:	80 81       	ld	r24, Z
    1a76:	88 60       	ori	r24, 0x08	; 8
    1a78:	8c 93       	st	X, r24
	OCR0 =0;
    1a7a:	ec e5       	ldi	r30, 0x5C	; 92
    1a7c:	f0 e0       	ldi	r31, 0x00	; 0
    1a7e:	10 82       	st	Z, r1
	TCCR0 =(1<<WGM00)|(1<<WGM01)|(1<<COM01)|(1<<CS00);
    1a80:	e3 e5       	ldi	r30, 0x53	; 83
    1a82:	f0 e0       	ldi	r31, 0x00	; 0
    1a84:	89 e6       	ldi	r24, 0x69	; 105
    1a86:	80 83       	st	Z, r24
}
    1a88:	cf 91       	pop	r28
    1a8a:	df 91       	pop	r29
    1a8c:	08 95       	ret

00001a8e <adc_to_pwmbyPhaseCorrect>:

void adc_to_pwmbyPhaseCorrect(float inputVolt ){
    1a8e:	df 93       	push	r29
    1a90:	cf 93       	push	r28
    1a92:	cd b7       	in	r28, 0x3d	; 61
    1a94:	de b7       	in	r29, 0x3e	; 62
    1a96:	29 97       	sbiw	r28, 0x09	; 9
    1a98:	0f b6       	in	r0, 0x3f	; 63
    1a9a:	f8 94       	cli
    1a9c:	de bf       	out	0x3e, r29	; 62
    1a9e:	0f be       	out	0x3f, r0	; 63
    1aa0:	cd bf       	out	0x3d, r28	; 61
    1aa2:	6e 83       	std	Y+6, r22	; 0x06
    1aa4:	7f 83       	std	Y+7, r23	; 0x07
    1aa6:	88 87       	std	Y+8, r24	; 0x08
    1aa8:	99 87       	std	Y+9, r25	; 0x09
	float duty= (inputVolt/VREF)*100;
    1aaa:	6e 81       	ldd	r22, Y+6	; 0x06
    1aac:	7f 81       	ldd	r23, Y+7	; 0x07
    1aae:	88 85       	ldd	r24, Y+8	; 0x08
    1ab0:	99 85       	ldd	r25, Y+9	; 0x09
    1ab2:	20 e0       	ldi	r18, 0x00	; 0
    1ab4:	30 e0       	ldi	r19, 0x00	; 0
    1ab6:	40 ea       	ldi	r20, 0xA0	; 160
    1ab8:	50 e4       	ldi	r21, 0x40	; 64
    1aba:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    1abe:	dc 01       	movw	r26, r24
    1ac0:	cb 01       	movw	r24, r22
    1ac2:	bc 01       	movw	r22, r24
    1ac4:	cd 01       	movw	r24, r26
    1ac6:	20 e0       	ldi	r18, 0x00	; 0
    1ac8:	30 e0       	ldi	r19, 0x00	; 0
    1aca:	48 ec       	ldi	r20, 0xC8	; 200
    1acc:	52 e4       	ldi	r21, 0x42	; 66
    1ace:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1ad2:	dc 01       	movw	r26, r24
    1ad4:	cb 01       	movw	r24, r22
    1ad6:	8a 83       	std	Y+2, r24	; 0x02
    1ad8:	9b 83       	std	Y+3, r25	; 0x03
    1ada:	ac 83       	std	Y+4, r26	; 0x04
    1adc:	bd 83       	std	Y+5, r27	; 0x05
	unsigned char ocr = ((duty*255)/100);
    1ade:	6a 81       	ldd	r22, Y+2	; 0x02
    1ae0:	7b 81       	ldd	r23, Y+3	; 0x03
    1ae2:	8c 81       	ldd	r24, Y+4	; 0x04
    1ae4:	9d 81       	ldd	r25, Y+5	; 0x05
    1ae6:	20 e0       	ldi	r18, 0x00	; 0
    1ae8:	30 e0       	ldi	r19, 0x00	; 0
    1aea:	4f e7       	ldi	r20, 0x7F	; 127
    1aec:	53 e4       	ldi	r21, 0x43	; 67
    1aee:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1af2:	dc 01       	movw	r26, r24
    1af4:	cb 01       	movw	r24, r22
    1af6:	bc 01       	movw	r22, r24
    1af8:	cd 01       	movw	r24, r26
    1afa:	20 e0       	ldi	r18, 0x00	; 0
    1afc:	30 e0       	ldi	r19, 0x00	; 0
    1afe:	48 ec       	ldi	r20, 0xC8	; 200
    1b00:	52 e4       	ldi	r21, 0x42	; 66
    1b02:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    1b06:	dc 01       	movw	r26, r24
    1b08:	cb 01       	movw	r24, r22
    1b0a:	bc 01       	movw	r22, r24
    1b0c:	cd 01       	movw	r24, r26
    1b0e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1b12:	dc 01       	movw	r26, r24
    1b14:	cb 01       	movw	r24, r22
    1b16:	89 83       	std	Y+1, r24	; 0x01
	OCR0 =ocr;
    1b18:	ec e5       	ldi	r30, 0x5C	; 92
    1b1a:	f0 e0       	ldi	r31, 0x00	; 0
    1b1c:	89 81       	ldd	r24, Y+1	; 0x01
    1b1e:	80 83       	st	Z, r24
	LCD_goToRowCol(1,11);
    1b20:	81 e0       	ldi	r24, 0x01	; 1
    1b22:	6b e0       	ldi	r22, 0x0B	; 11
    1b24:	0e 94 a3 0b 	call	0x1746	; 0x1746 <LCD_goToRowCol>
	LCD_intToString(ocr);
    1b28:	89 81       	ldd	r24, Y+1	; 0x01
    1b2a:	88 2f       	mov	r24, r24
    1b2c:	90 e0       	ldi	r25, 0x00	; 0
    1b2e:	0e 94 8f 0c 	call	0x191e	; 0x191e <LCD_intToString>


}
    1b32:	29 96       	adiw	r28, 0x09	; 9
    1b34:	0f b6       	in	r0, 0x3f	; 63
    1b36:	f8 94       	cli
    1b38:	de bf       	out	0x3e, r29	; 62
    1b3a:	0f be       	out	0x3f, r0	; 63
    1b3c:	cd bf       	out	0x3d, r28	; 61
    1b3e:	cf 91       	pop	r28
    1b40:	df 91       	pop	r29
    1b42:	08 95       	ret

00001b44 <adc_to_pwmbyFastPwm>:
void adc_to_pwmbyFastPwm(float inputVolt){
    1b44:	df 93       	push	r29
    1b46:	cf 93       	push	r28
    1b48:	cd b7       	in	r28, 0x3d	; 61
    1b4a:	de b7       	in	r29, 0x3e	; 62
    1b4c:	29 97       	sbiw	r28, 0x09	; 9
    1b4e:	0f b6       	in	r0, 0x3f	; 63
    1b50:	f8 94       	cli
    1b52:	de bf       	out	0x3e, r29	; 62
    1b54:	0f be       	out	0x3f, r0	; 63
    1b56:	cd bf       	out	0x3d, r28	; 61
    1b58:	6e 83       	std	Y+6, r22	; 0x06
    1b5a:	7f 83       	std	Y+7, r23	; 0x07
    1b5c:	88 87       	std	Y+8, r24	; 0x08
    1b5e:	99 87       	std	Y+9, r25	; 0x09
		float duty= (inputVolt/VREF)*100;
    1b60:	6e 81       	ldd	r22, Y+6	; 0x06
    1b62:	7f 81       	ldd	r23, Y+7	; 0x07
    1b64:	88 85       	ldd	r24, Y+8	; 0x08
    1b66:	99 85       	ldd	r25, Y+9	; 0x09
    1b68:	20 e0       	ldi	r18, 0x00	; 0
    1b6a:	30 e0       	ldi	r19, 0x00	; 0
    1b6c:	40 ea       	ldi	r20, 0xA0	; 160
    1b6e:	50 e4       	ldi	r21, 0x40	; 64
    1b70:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    1b74:	dc 01       	movw	r26, r24
    1b76:	cb 01       	movw	r24, r22
    1b78:	bc 01       	movw	r22, r24
    1b7a:	cd 01       	movw	r24, r26
    1b7c:	20 e0       	ldi	r18, 0x00	; 0
    1b7e:	30 e0       	ldi	r19, 0x00	; 0
    1b80:	48 ec       	ldi	r20, 0xC8	; 200
    1b82:	52 e4       	ldi	r21, 0x42	; 66
    1b84:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1b88:	dc 01       	movw	r26, r24
    1b8a:	cb 01       	movw	r24, r22
    1b8c:	8a 83       	std	Y+2, r24	; 0x02
    1b8e:	9b 83       	std	Y+3, r25	; 0x03
    1b90:	ac 83       	std	Y+4, r26	; 0x04
    1b92:	bd 83       	std	Y+5, r27	; 0x05
		unsigned char ocr;
		if(duty==0){
    1b94:	6a 81       	ldd	r22, Y+2	; 0x02
    1b96:	7b 81       	ldd	r23, Y+3	; 0x03
    1b98:	8c 81       	ldd	r24, Y+4	; 0x04
    1b9a:	9d 81       	ldd	r25, Y+5	; 0x05
    1b9c:	20 e0       	ldi	r18, 0x00	; 0
    1b9e:	30 e0       	ldi	r19, 0x00	; 0
    1ba0:	40 e0       	ldi	r20, 0x00	; 0
    1ba2:	50 e0       	ldi	r21, 0x00	; 0
    1ba4:	0e 94 bd 03 	call	0x77a	; 0x77a <__eqsf2>
    1ba8:	88 23       	and	r24, r24
    1baa:	11 f4       	brne	.+4      	; 0x1bb0 <adc_to_pwmbyFastPwm+0x6c>
			ocr =0;
    1bac:	19 82       	std	Y+1, r1	; 0x01
    1bae:	27 c0       	rjmp	.+78     	; 0x1bfe <adc_to_pwmbyFastPwm+0xba>
		}else{
			ocr = ((duty*256)/100)-1;
    1bb0:	6a 81       	ldd	r22, Y+2	; 0x02
    1bb2:	7b 81       	ldd	r23, Y+3	; 0x03
    1bb4:	8c 81       	ldd	r24, Y+4	; 0x04
    1bb6:	9d 81       	ldd	r25, Y+5	; 0x05
    1bb8:	20 e0       	ldi	r18, 0x00	; 0
    1bba:	30 e0       	ldi	r19, 0x00	; 0
    1bbc:	40 e8       	ldi	r20, 0x80	; 128
    1bbe:	53 e4       	ldi	r21, 0x43	; 67
    1bc0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1bc4:	dc 01       	movw	r26, r24
    1bc6:	cb 01       	movw	r24, r22
    1bc8:	bc 01       	movw	r22, r24
    1bca:	cd 01       	movw	r24, r26
    1bcc:	20 e0       	ldi	r18, 0x00	; 0
    1bce:	30 e0       	ldi	r19, 0x00	; 0
    1bd0:	48 ec       	ldi	r20, 0xC8	; 200
    1bd2:	52 e4       	ldi	r21, 0x42	; 66
    1bd4:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    1bd8:	dc 01       	movw	r26, r24
    1bda:	cb 01       	movw	r24, r22
    1bdc:	bc 01       	movw	r22, r24
    1bde:	cd 01       	movw	r24, r26
    1be0:	20 e0       	ldi	r18, 0x00	; 0
    1be2:	30 e0       	ldi	r19, 0x00	; 0
    1be4:	40 e8       	ldi	r20, 0x80	; 128
    1be6:	5f e3       	ldi	r21, 0x3F	; 63
    1be8:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
    1bec:	dc 01       	movw	r26, r24
    1bee:	cb 01       	movw	r24, r22
    1bf0:	bc 01       	movw	r22, r24
    1bf2:	cd 01       	movw	r24, r26
    1bf4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1bf8:	dc 01       	movw	r26, r24
    1bfa:	cb 01       	movw	r24, r22
    1bfc:	89 83       	std	Y+1, r24	; 0x01
		}
		OCR0 =ocr;
    1bfe:	ec e5       	ldi	r30, 0x5C	; 92
    1c00:	f0 e0       	ldi	r31, 0x00	; 0
    1c02:	89 81       	ldd	r24, Y+1	; 0x01
    1c04:	80 83       	st	Z, r24
		LCD_goToRowCol(1,11);
    1c06:	81 e0       	ldi	r24, 0x01	; 1
    1c08:	6b e0       	ldi	r22, 0x0B	; 11
    1c0a:	0e 94 a3 0b 	call	0x1746	; 0x1746 <LCD_goToRowCol>
		LCD_intToString(ocr);
    1c0e:	89 81       	ldd	r24, Y+1	; 0x01
    1c10:	88 2f       	mov	r24, r24
    1c12:	90 e0       	ldi	r25, 0x00	; 0
    1c14:	0e 94 8f 0c 	call	0x191e	; 0x191e <LCD_intToString>


}
    1c18:	29 96       	adiw	r28, 0x09	; 9
    1c1a:	0f b6       	in	r0, 0x3f	; 63
    1c1c:	f8 94       	cli
    1c1e:	de bf       	out	0x3e, r29	; 62
    1c20:	0f be       	out	0x3f, r0	; 63
    1c22:	cd bf       	out	0x3d, r28	; 61
    1c24:	cf 91       	pop	r28
    1c26:	df 91       	pop	r29
    1c28:	08 95       	ret

00001c2a <main>:

int main(){
    1c2a:	df 93       	push	r29
    1c2c:	cf 93       	push	r28
    1c2e:	cd b7       	in	r28, 0x3d	; 61
    1c30:	de b7       	in	r29, 0x3e	; 62
    1c32:	28 97       	sbiw	r28, 0x08	; 8
    1c34:	0f b6       	in	r0, 0x3f	; 63
    1c36:	f8 94       	cli
    1c38:	de bf       	out	0x3e, r29	; 62
    1c3a:	0f be       	out	0x3f, r0	; 63
    1c3c:	cd bf       	out	0x3d, r28	; 61

	LCD_init();
    1c3e:	0e 94 3f 07 	call	0xe7e	; 0xe7e <LCD_init>
	ADC_init();
    1c42:	0e 94 c4 0c 	call	0x1988	; 0x1988 <ADC_init>
	//PWM_init_fastPwm();
	PWM_init_phaseCorrect();
    1c46:	0e 94 1d 0d 	call	0x1a3a	; 0x1a3a <PWM_init_phaseCorrect>
	DDRB = 0XFF;
    1c4a:	e7 e3       	ldi	r30, 0x37	; 55
    1c4c:	f0 e0       	ldi	r31, 0x00	; 0
    1c4e:	8f ef       	ldi	r24, 0xFF	; 255
    1c50:	80 83       	st	Z, r24
	PORTB=0X00;
    1c52:	e8 e3       	ldi	r30, 0x38	; 56
    1c54:	f0 e0       	ldi	r31, 0x00	; 0
    1c56:	10 82       	st	Z, r1
	float  rest;
	float vo;
	while(1){
		LCD_goToRowCol(1,1);
    1c58:	81 e0       	ldi	r24, 0x01	; 1
    1c5a:	61 e0       	ldi	r22, 0x01	; 1
    1c5c:	0e 94 a3 0b 	call	0x1746	; 0x1746 <LCD_goToRowCol>
		rest =ADC_read(0);
    1c60:	80 e0       	ldi	r24, 0x00	; 0
    1c62:	0e 94 d9 0c 	call	0x19b2	; 0x19b2 <ADC_read>
    1c66:	cc 01       	movw	r24, r24
    1c68:	a0 e0       	ldi	r26, 0x00	; 0
    1c6a:	b0 e0       	ldi	r27, 0x00	; 0
    1c6c:	bc 01       	movw	r22, r24
    1c6e:	cd 01       	movw	r24, r26
    1c70:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <__floatunsisf>
    1c74:	dc 01       	movw	r26, r24
    1c76:	cb 01       	movw	r24, r22
    1c78:	8d 83       	std	Y+5, r24	; 0x05
    1c7a:	9e 83       	std	Y+6, r25	; 0x06
    1c7c:	af 83       	std	Y+7, r26	; 0x07
    1c7e:	b8 87       	std	Y+8, r27	; 0x08
		vo =(rest * 5)/1024;
    1c80:	6d 81       	ldd	r22, Y+5	; 0x05
    1c82:	7e 81       	ldd	r23, Y+6	; 0x06
    1c84:	8f 81       	ldd	r24, Y+7	; 0x07
    1c86:	98 85       	ldd	r25, Y+8	; 0x08
    1c88:	20 e0       	ldi	r18, 0x00	; 0
    1c8a:	30 e0       	ldi	r19, 0x00	; 0
    1c8c:	40 ea       	ldi	r20, 0xA0	; 160
    1c8e:	50 e4       	ldi	r21, 0x40	; 64
    1c90:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c94:	dc 01       	movw	r26, r24
    1c96:	cb 01       	movw	r24, r22
    1c98:	bc 01       	movw	r22, r24
    1c9a:	cd 01       	movw	r24, r26
    1c9c:	20 e0       	ldi	r18, 0x00	; 0
    1c9e:	30 e0       	ldi	r19, 0x00	; 0
    1ca0:	40 e8       	ldi	r20, 0x80	; 128
    1ca2:	54 e4       	ldi	r21, 0x44	; 68
    1ca4:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    1ca8:	dc 01       	movw	r26, r24
    1caa:	cb 01       	movw	r24, r22
    1cac:	89 83       	std	Y+1, r24	; 0x01
    1cae:	9a 83       	std	Y+2, r25	; 0x02
    1cb0:	ab 83       	std	Y+3, r26	; 0x03
    1cb2:	bc 83       	std	Y+4, r27	; 0x04
		LCD_intToString(vo*100);
    1cb4:	69 81       	ldd	r22, Y+1	; 0x01
    1cb6:	7a 81       	ldd	r23, Y+2	; 0x02
    1cb8:	8b 81       	ldd	r24, Y+3	; 0x03
    1cba:	9c 81       	ldd	r25, Y+4	; 0x04
    1cbc:	20 e0       	ldi	r18, 0x00	; 0
    1cbe:	30 e0       	ldi	r19, 0x00	; 0
    1cc0:	48 ec       	ldi	r20, 0xC8	; 200
    1cc2:	52 e4       	ldi	r21, 0x42	; 66
    1cc4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1cc8:	dc 01       	movw	r26, r24
    1cca:	cb 01       	movw	r24, r22
    1ccc:	bc 01       	movw	r22, r24
    1cce:	cd 01       	movw	r24, r26
    1cd0:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__fixsfsi>
    1cd4:	dc 01       	movw	r26, r24
    1cd6:	cb 01       	movw	r24, r22
    1cd8:	0e 94 8f 0c 	call	0x191e	; 0x191e <LCD_intToString>
		/*output the volt by pwm*/
		//adc_to_pwmbyFastPwm(vo);
		adc_to_pwmbyPhaseCorrect(vo);
    1cdc:	89 81       	ldd	r24, Y+1	; 0x01
    1cde:	9a 81       	ldd	r25, Y+2	; 0x02
    1ce0:	ab 81       	ldd	r26, Y+3	; 0x03
    1ce2:	bc 81       	ldd	r27, Y+4	; 0x04
    1ce4:	bc 01       	movw	r22, r24
    1ce6:	cd 01       	movw	r24, r26
    1ce8:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <adc_to_pwmbyPhaseCorrect>
    1cec:	b5 cf       	rjmp	.-150    	; 0x1c58 <main+0x2e>

00001cee <__prologue_saves__>:
    1cee:	2f 92       	push	r2
    1cf0:	3f 92       	push	r3
    1cf2:	4f 92       	push	r4
    1cf4:	5f 92       	push	r5
    1cf6:	6f 92       	push	r6
    1cf8:	7f 92       	push	r7
    1cfa:	8f 92       	push	r8
    1cfc:	9f 92       	push	r9
    1cfe:	af 92       	push	r10
    1d00:	bf 92       	push	r11
    1d02:	cf 92       	push	r12
    1d04:	df 92       	push	r13
    1d06:	ef 92       	push	r14
    1d08:	ff 92       	push	r15
    1d0a:	0f 93       	push	r16
    1d0c:	1f 93       	push	r17
    1d0e:	cf 93       	push	r28
    1d10:	df 93       	push	r29
    1d12:	cd b7       	in	r28, 0x3d	; 61
    1d14:	de b7       	in	r29, 0x3e	; 62
    1d16:	ca 1b       	sub	r28, r26
    1d18:	db 0b       	sbc	r29, r27
    1d1a:	0f b6       	in	r0, 0x3f	; 63
    1d1c:	f8 94       	cli
    1d1e:	de bf       	out	0x3e, r29	; 62
    1d20:	0f be       	out	0x3f, r0	; 63
    1d22:	cd bf       	out	0x3d, r28	; 61
    1d24:	09 94       	ijmp

00001d26 <__epilogue_restores__>:
    1d26:	2a 88       	ldd	r2, Y+18	; 0x12
    1d28:	39 88       	ldd	r3, Y+17	; 0x11
    1d2a:	48 88       	ldd	r4, Y+16	; 0x10
    1d2c:	5f 84       	ldd	r5, Y+15	; 0x0f
    1d2e:	6e 84       	ldd	r6, Y+14	; 0x0e
    1d30:	7d 84       	ldd	r7, Y+13	; 0x0d
    1d32:	8c 84       	ldd	r8, Y+12	; 0x0c
    1d34:	9b 84       	ldd	r9, Y+11	; 0x0b
    1d36:	aa 84       	ldd	r10, Y+10	; 0x0a
    1d38:	b9 84       	ldd	r11, Y+9	; 0x09
    1d3a:	c8 84       	ldd	r12, Y+8	; 0x08
    1d3c:	df 80       	ldd	r13, Y+7	; 0x07
    1d3e:	ee 80       	ldd	r14, Y+6	; 0x06
    1d40:	fd 80       	ldd	r15, Y+5	; 0x05
    1d42:	0c 81       	ldd	r16, Y+4	; 0x04
    1d44:	1b 81       	ldd	r17, Y+3	; 0x03
    1d46:	aa 81       	ldd	r26, Y+2	; 0x02
    1d48:	b9 81       	ldd	r27, Y+1	; 0x01
    1d4a:	ce 0f       	add	r28, r30
    1d4c:	d1 1d       	adc	r29, r1
    1d4e:	0f b6       	in	r0, 0x3f	; 63
    1d50:	f8 94       	cli
    1d52:	de bf       	out	0x3e, r29	; 62
    1d54:	0f be       	out	0x3f, r0	; 63
    1d56:	cd bf       	out	0x3d, r28	; 61
    1d58:	ed 01       	movw	r28, r26
    1d5a:	08 95       	ret

00001d5c <sprintf>:
    1d5c:	ae e0       	ldi	r26, 0x0E	; 14
    1d5e:	b0 e0       	ldi	r27, 0x00	; 0
    1d60:	e4 eb       	ldi	r30, 0xB4	; 180
    1d62:	fe e0       	ldi	r31, 0x0E	; 14
    1d64:	0c 94 85 0e 	jmp	0x1d0a	; 0x1d0a <__prologue_saves__+0x1c>
    1d68:	0d 89       	ldd	r16, Y+21	; 0x15
    1d6a:	1e 89       	ldd	r17, Y+22	; 0x16
    1d6c:	86 e0       	ldi	r24, 0x06	; 6
    1d6e:	8c 83       	std	Y+4, r24	; 0x04
    1d70:	1a 83       	std	Y+2, r17	; 0x02
    1d72:	09 83       	std	Y+1, r16	; 0x01
    1d74:	8f ef       	ldi	r24, 0xFF	; 255
    1d76:	9f e7       	ldi	r25, 0x7F	; 127
    1d78:	9e 83       	std	Y+6, r25	; 0x06
    1d7a:	8d 83       	std	Y+5, r24	; 0x05
    1d7c:	9e 01       	movw	r18, r28
    1d7e:	27 5e       	subi	r18, 0xE7	; 231
    1d80:	3f 4f       	sbci	r19, 0xFF	; 255
    1d82:	ce 01       	movw	r24, r28
    1d84:	01 96       	adiw	r24, 0x01	; 1
    1d86:	6f 89       	ldd	r22, Y+23	; 0x17
    1d88:	78 8d       	ldd	r23, Y+24	; 0x18
    1d8a:	a9 01       	movw	r20, r18
    1d8c:	0e 94 d2 0e 	call	0x1da4	; 0x1da4 <vfprintf>
    1d90:	2f 81       	ldd	r18, Y+7	; 0x07
    1d92:	38 85       	ldd	r19, Y+8	; 0x08
    1d94:	02 0f       	add	r16, r18
    1d96:	13 1f       	adc	r17, r19
    1d98:	f8 01       	movw	r30, r16
    1d9a:	10 82       	st	Z, r1
    1d9c:	2e 96       	adiw	r28, 0x0e	; 14
    1d9e:	e4 e0       	ldi	r30, 0x04	; 4
    1da0:	0c 94 a1 0e 	jmp	0x1d42	; 0x1d42 <__epilogue_restores__+0x1c>

00001da4 <vfprintf>:
    1da4:	ab e0       	ldi	r26, 0x0B	; 11
    1da6:	b0 e0       	ldi	r27, 0x00	; 0
    1da8:	e8 ed       	ldi	r30, 0xD8	; 216
    1daa:	fe e0       	ldi	r31, 0x0E	; 14
    1dac:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__prologue_saves__>
    1db0:	3c 01       	movw	r6, r24
    1db2:	2b 01       	movw	r4, r22
    1db4:	5a 01       	movw	r10, r20
    1db6:	fc 01       	movw	r30, r24
    1db8:	17 82       	std	Z+7, r1	; 0x07
    1dba:	16 82       	std	Z+6, r1	; 0x06
    1dbc:	83 81       	ldd	r24, Z+3	; 0x03
    1dbe:	81 fd       	sbrc	r24, 1
    1dc0:	03 c0       	rjmp	.+6      	; 0x1dc8 <vfprintf+0x24>
    1dc2:	6f ef       	ldi	r22, 0xFF	; 255
    1dc4:	7f ef       	ldi	r23, 0xFF	; 255
    1dc6:	c6 c1       	rjmp	.+908    	; 0x2154 <vfprintf+0x3b0>
    1dc8:	9a e0       	ldi	r25, 0x0A	; 10
    1dca:	89 2e       	mov	r8, r25
    1dcc:	1e 01       	movw	r2, r28
    1dce:	08 94       	sec
    1dd0:	21 1c       	adc	r2, r1
    1dd2:	31 1c       	adc	r3, r1
    1dd4:	f3 01       	movw	r30, r6
    1dd6:	23 81       	ldd	r18, Z+3	; 0x03
    1dd8:	f2 01       	movw	r30, r4
    1dda:	23 fd       	sbrc	r18, 3
    1ddc:	85 91       	lpm	r24, Z+
    1dde:	23 ff       	sbrs	r18, 3
    1de0:	81 91       	ld	r24, Z+
    1de2:	2f 01       	movw	r4, r30
    1de4:	88 23       	and	r24, r24
    1de6:	09 f4       	brne	.+2      	; 0x1dea <vfprintf+0x46>
    1de8:	b2 c1       	rjmp	.+868    	; 0x214e <vfprintf+0x3aa>
    1dea:	85 32       	cpi	r24, 0x25	; 37
    1dec:	39 f4       	brne	.+14     	; 0x1dfc <vfprintf+0x58>
    1dee:	23 fd       	sbrc	r18, 3
    1df0:	85 91       	lpm	r24, Z+
    1df2:	23 ff       	sbrs	r18, 3
    1df4:	81 91       	ld	r24, Z+
    1df6:	2f 01       	movw	r4, r30
    1df8:	85 32       	cpi	r24, 0x25	; 37
    1dfa:	29 f4       	brne	.+10     	; 0x1e06 <vfprintf+0x62>
    1dfc:	90 e0       	ldi	r25, 0x00	; 0
    1dfe:	b3 01       	movw	r22, r6
    1e00:	0e 94 c5 10 	call	0x218a	; 0x218a <fputc>
    1e04:	e7 cf       	rjmp	.-50     	; 0x1dd4 <vfprintf+0x30>
    1e06:	98 2f       	mov	r25, r24
    1e08:	ff 24       	eor	r15, r15
    1e0a:	ee 24       	eor	r14, r14
    1e0c:	99 24       	eor	r9, r9
    1e0e:	ff e1       	ldi	r31, 0x1F	; 31
    1e10:	ff 15       	cp	r31, r15
    1e12:	d0 f0       	brcs	.+52     	; 0x1e48 <vfprintf+0xa4>
    1e14:	9b 32       	cpi	r25, 0x2B	; 43
    1e16:	69 f0       	breq	.+26     	; 0x1e32 <vfprintf+0x8e>
    1e18:	9c 32       	cpi	r25, 0x2C	; 44
    1e1a:	28 f4       	brcc	.+10     	; 0x1e26 <vfprintf+0x82>
    1e1c:	90 32       	cpi	r25, 0x20	; 32
    1e1e:	59 f0       	breq	.+22     	; 0x1e36 <vfprintf+0x92>
    1e20:	93 32       	cpi	r25, 0x23	; 35
    1e22:	91 f4       	brne	.+36     	; 0x1e48 <vfprintf+0xa4>
    1e24:	0e c0       	rjmp	.+28     	; 0x1e42 <vfprintf+0x9e>
    1e26:	9d 32       	cpi	r25, 0x2D	; 45
    1e28:	49 f0       	breq	.+18     	; 0x1e3c <vfprintf+0x98>
    1e2a:	90 33       	cpi	r25, 0x30	; 48
    1e2c:	69 f4       	brne	.+26     	; 0x1e48 <vfprintf+0xa4>
    1e2e:	41 e0       	ldi	r20, 0x01	; 1
    1e30:	24 c0       	rjmp	.+72     	; 0x1e7a <vfprintf+0xd6>
    1e32:	52 e0       	ldi	r21, 0x02	; 2
    1e34:	f5 2a       	or	r15, r21
    1e36:	84 e0       	ldi	r24, 0x04	; 4
    1e38:	f8 2a       	or	r15, r24
    1e3a:	28 c0       	rjmp	.+80     	; 0x1e8c <vfprintf+0xe8>
    1e3c:	98 e0       	ldi	r25, 0x08	; 8
    1e3e:	f9 2a       	or	r15, r25
    1e40:	25 c0       	rjmp	.+74     	; 0x1e8c <vfprintf+0xe8>
    1e42:	e0 e1       	ldi	r30, 0x10	; 16
    1e44:	fe 2a       	or	r15, r30
    1e46:	22 c0       	rjmp	.+68     	; 0x1e8c <vfprintf+0xe8>
    1e48:	f7 fc       	sbrc	r15, 7
    1e4a:	29 c0       	rjmp	.+82     	; 0x1e9e <vfprintf+0xfa>
    1e4c:	89 2f       	mov	r24, r25
    1e4e:	80 53       	subi	r24, 0x30	; 48
    1e50:	8a 30       	cpi	r24, 0x0A	; 10
    1e52:	70 f4       	brcc	.+28     	; 0x1e70 <vfprintf+0xcc>
    1e54:	f6 fe       	sbrs	r15, 6
    1e56:	05 c0       	rjmp	.+10     	; 0x1e62 <vfprintf+0xbe>
    1e58:	98 9c       	mul	r9, r8
    1e5a:	90 2c       	mov	r9, r0
    1e5c:	11 24       	eor	r1, r1
    1e5e:	98 0e       	add	r9, r24
    1e60:	15 c0       	rjmp	.+42     	; 0x1e8c <vfprintf+0xe8>
    1e62:	e8 9c       	mul	r14, r8
    1e64:	e0 2c       	mov	r14, r0
    1e66:	11 24       	eor	r1, r1
    1e68:	e8 0e       	add	r14, r24
    1e6a:	f0 e2       	ldi	r31, 0x20	; 32
    1e6c:	ff 2a       	or	r15, r31
    1e6e:	0e c0       	rjmp	.+28     	; 0x1e8c <vfprintf+0xe8>
    1e70:	9e 32       	cpi	r25, 0x2E	; 46
    1e72:	29 f4       	brne	.+10     	; 0x1e7e <vfprintf+0xda>
    1e74:	f6 fc       	sbrc	r15, 6
    1e76:	6b c1       	rjmp	.+726    	; 0x214e <vfprintf+0x3aa>
    1e78:	40 e4       	ldi	r20, 0x40	; 64
    1e7a:	f4 2a       	or	r15, r20
    1e7c:	07 c0       	rjmp	.+14     	; 0x1e8c <vfprintf+0xe8>
    1e7e:	9c 36       	cpi	r25, 0x6C	; 108
    1e80:	19 f4       	brne	.+6      	; 0x1e88 <vfprintf+0xe4>
    1e82:	50 e8       	ldi	r21, 0x80	; 128
    1e84:	f5 2a       	or	r15, r21
    1e86:	02 c0       	rjmp	.+4      	; 0x1e8c <vfprintf+0xe8>
    1e88:	98 36       	cpi	r25, 0x68	; 104
    1e8a:	49 f4       	brne	.+18     	; 0x1e9e <vfprintf+0xfa>
    1e8c:	f2 01       	movw	r30, r4
    1e8e:	23 fd       	sbrc	r18, 3
    1e90:	95 91       	lpm	r25, Z+
    1e92:	23 ff       	sbrs	r18, 3
    1e94:	91 91       	ld	r25, Z+
    1e96:	2f 01       	movw	r4, r30
    1e98:	99 23       	and	r25, r25
    1e9a:	09 f0       	breq	.+2      	; 0x1e9e <vfprintf+0xfa>
    1e9c:	b8 cf       	rjmp	.-144    	; 0x1e0e <vfprintf+0x6a>
    1e9e:	89 2f       	mov	r24, r25
    1ea0:	85 54       	subi	r24, 0x45	; 69
    1ea2:	83 30       	cpi	r24, 0x03	; 3
    1ea4:	18 f0       	brcs	.+6      	; 0x1eac <vfprintf+0x108>
    1ea6:	80 52       	subi	r24, 0x20	; 32
    1ea8:	83 30       	cpi	r24, 0x03	; 3
    1eaa:	38 f4       	brcc	.+14     	; 0x1eba <vfprintf+0x116>
    1eac:	44 e0       	ldi	r20, 0x04	; 4
    1eae:	50 e0       	ldi	r21, 0x00	; 0
    1eb0:	a4 0e       	add	r10, r20
    1eb2:	b5 1e       	adc	r11, r21
    1eb4:	5f e3       	ldi	r21, 0x3F	; 63
    1eb6:	59 83       	std	Y+1, r21	; 0x01
    1eb8:	0f c0       	rjmp	.+30     	; 0x1ed8 <vfprintf+0x134>
    1eba:	93 36       	cpi	r25, 0x63	; 99
    1ebc:	31 f0       	breq	.+12     	; 0x1eca <vfprintf+0x126>
    1ebe:	93 37       	cpi	r25, 0x73	; 115
    1ec0:	79 f0       	breq	.+30     	; 0x1ee0 <vfprintf+0x13c>
    1ec2:	93 35       	cpi	r25, 0x53	; 83
    1ec4:	09 f0       	breq	.+2      	; 0x1ec8 <vfprintf+0x124>
    1ec6:	56 c0       	rjmp	.+172    	; 0x1f74 <vfprintf+0x1d0>
    1ec8:	20 c0       	rjmp	.+64     	; 0x1f0a <vfprintf+0x166>
    1eca:	f5 01       	movw	r30, r10
    1ecc:	80 81       	ld	r24, Z
    1ece:	89 83       	std	Y+1, r24	; 0x01
    1ed0:	42 e0       	ldi	r20, 0x02	; 2
    1ed2:	50 e0       	ldi	r21, 0x00	; 0
    1ed4:	a4 0e       	add	r10, r20
    1ed6:	b5 1e       	adc	r11, r21
    1ed8:	61 01       	movw	r12, r2
    1eda:	01 e0       	ldi	r16, 0x01	; 1
    1edc:	10 e0       	ldi	r17, 0x00	; 0
    1ede:	12 c0       	rjmp	.+36     	; 0x1f04 <vfprintf+0x160>
    1ee0:	f5 01       	movw	r30, r10
    1ee2:	c0 80       	ld	r12, Z
    1ee4:	d1 80       	ldd	r13, Z+1	; 0x01
    1ee6:	f6 fc       	sbrc	r15, 6
    1ee8:	03 c0       	rjmp	.+6      	; 0x1ef0 <vfprintf+0x14c>
    1eea:	6f ef       	ldi	r22, 0xFF	; 255
    1eec:	7f ef       	ldi	r23, 0xFF	; 255
    1eee:	02 c0       	rjmp	.+4      	; 0x1ef4 <vfprintf+0x150>
    1ef0:	69 2d       	mov	r22, r9
    1ef2:	70 e0       	ldi	r23, 0x00	; 0
    1ef4:	42 e0       	ldi	r20, 0x02	; 2
    1ef6:	50 e0       	ldi	r21, 0x00	; 0
    1ef8:	a4 0e       	add	r10, r20
    1efa:	b5 1e       	adc	r11, r21
    1efc:	c6 01       	movw	r24, r12
    1efe:	0e 94 ba 10 	call	0x2174	; 0x2174 <strnlen>
    1f02:	8c 01       	movw	r16, r24
    1f04:	5f e7       	ldi	r21, 0x7F	; 127
    1f06:	f5 22       	and	r15, r21
    1f08:	14 c0       	rjmp	.+40     	; 0x1f32 <vfprintf+0x18e>
    1f0a:	f5 01       	movw	r30, r10
    1f0c:	c0 80       	ld	r12, Z
    1f0e:	d1 80       	ldd	r13, Z+1	; 0x01
    1f10:	f6 fc       	sbrc	r15, 6
    1f12:	03 c0       	rjmp	.+6      	; 0x1f1a <vfprintf+0x176>
    1f14:	6f ef       	ldi	r22, 0xFF	; 255
    1f16:	7f ef       	ldi	r23, 0xFF	; 255
    1f18:	02 c0       	rjmp	.+4      	; 0x1f1e <vfprintf+0x17a>
    1f1a:	69 2d       	mov	r22, r9
    1f1c:	70 e0       	ldi	r23, 0x00	; 0
    1f1e:	42 e0       	ldi	r20, 0x02	; 2
    1f20:	50 e0       	ldi	r21, 0x00	; 0
    1f22:	a4 0e       	add	r10, r20
    1f24:	b5 1e       	adc	r11, r21
    1f26:	c6 01       	movw	r24, r12
    1f28:	0e 94 af 10 	call	0x215e	; 0x215e <strnlen_P>
    1f2c:	8c 01       	movw	r16, r24
    1f2e:	50 e8       	ldi	r21, 0x80	; 128
    1f30:	f5 2a       	or	r15, r21
    1f32:	f3 fe       	sbrs	r15, 3
    1f34:	07 c0       	rjmp	.+14     	; 0x1f44 <vfprintf+0x1a0>
    1f36:	1a c0       	rjmp	.+52     	; 0x1f6c <vfprintf+0x1c8>
    1f38:	80 e2       	ldi	r24, 0x20	; 32
    1f3a:	90 e0       	ldi	r25, 0x00	; 0
    1f3c:	b3 01       	movw	r22, r6
    1f3e:	0e 94 c5 10 	call	0x218a	; 0x218a <fputc>
    1f42:	ea 94       	dec	r14
    1f44:	8e 2d       	mov	r24, r14
    1f46:	90 e0       	ldi	r25, 0x00	; 0
    1f48:	08 17       	cp	r16, r24
    1f4a:	19 07       	cpc	r17, r25
    1f4c:	a8 f3       	brcs	.-22     	; 0x1f38 <vfprintf+0x194>
    1f4e:	0e c0       	rjmp	.+28     	; 0x1f6c <vfprintf+0x1c8>
    1f50:	f6 01       	movw	r30, r12
    1f52:	f7 fc       	sbrc	r15, 7
    1f54:	85 91       	lpm	r24, Z+
    1f56:	f7 fe       	sbrs	r15, 7
    1f58:	81 91       	ld	r24, Z+
    1f5a:	6f 01       	movw	r12, r30
    1f5c:	90 e0       	ldi	r25, 0x00	; 0
    1f5e:	b3 01       	movw	r22, r6
    1f60:	0e 94 c5 10 	call	0x218a	; 0x218a <fputc>
    1f64:	e1 10       	cpse	r14, r1
    1f66:	ea 94       	dec	r14
    1f68:	01 50       	subi	r16, 0x01	; 1
    1f6a:	10 40       	sbci	r17, 0x00	; 0
    1f6c:	01 15       	cp	r16, r1
    1f6e:	11 05       	cpc	r17, r1
    1f70:	79 f7       	brne	.-34     	; 0x1f50 <vfprintf+0x1ac>
    1f72:	ea c0       	rjmp	.+468    	; 0x2148 <vfprintf+0x3a4>
    1f74:	94 36       	cpi	r25, 0x64	; 100
    1f76:	11 f0       	breq	.+4      	; 0x1f7c <vfprintf+0x1d8>
    1f78:	99 36       	cpi	r25, 0x69	; 105
    1f7a:	69 f5       	brne	.+90     	; 0x1fd6 <vfprintf+0x232>
    1f7c:	f7 fe       	sbrs	r15, 7
    1f7e:	08 c0       	rjmp	.+16     	; 0x1f90 <vfprintf+0x1ec>
    1f80:	f5 01       	movw	r30, r10
    1f82:	20 81       	ld	r18, Z
    1f84:	31 81       	ldd	r19, Z+1	; 0x01
    1f86:	42 81       	ldd	r20, Z+2	; 0x02
    1f88:	53 81       	ldd	r21, Z+3	; 0x03
    1f8a:	84 e0       	ldi	r24, 0x04	; 4
    1f8c:	90 e0       	ldi	r25, 0x00	; 0
    1f8e:	0a c0       	rjmp	.+20     	; 0x1fa4 <vfprintf+0x200>
    1f90:	f5 01       	movw	r30, r10
    1f92:	80 81       	ld	r24, Z
    1f94:	91 81       	ldd	r25, Z+1	; 0x01
    1f96:	9c 01       	movw	r18, r24
    1f98:	44 27       	eor	r20, r20
    1f9a:	37 fd       	sbrc	r19, 7
    1f9c:	40 95       	com	r20
    1f9e:	54 2f       	mov	r21, r20
    1fa0:	82 e0       	ldi	r24, 0x02	; 2
    1fa2:	90 e0       	ldi	r25, 0x00	; 0
    1fa4:	a8 0e       	add	r10, r24
    1fa6:	b9 1e       	adc	r11, r25
    1fa8:	9f e6       	ldi	r25, 0x6F	; 111
    1faa:	f9 22       	and	r15, r25
    1fac:	57 ff       	sbrs	r21, 7
    1fae:	09 c0       	rjmp	.+18     	; 0x1fc2 <vfprintf+0x21e>
    1fb0:	50 95       	com	r21
    1fb2:	40 95       	com	r20
    1fb4:	30 95       	com	r19
    1fb6:	21 95       	neg	r18
    1fb8:	3f 4f       	sbci	r19, 0xFF	; 255
    1fba:	4f 4f       	sbci	r20, 0xFF	; 255
    1fbc:	5f 4f       	sbci	r21, 0xFF	; 255
    1fbe:	e0 e8       	ldi	r30, 0x80	; 128
    1fc0:	fe 2a       	or	r15, r30
    1fc2:	ca 01       	movw	r24, r20
    1fc4:	b9 01       	movw	r22, r18
    1fc6:	a1 01       	movw	r20, r2
    1fc8:	2a e0       	ldi	r18, 0x0A	; 10
    1fca:	30 e0       	ldi	r19, 0x00	; 0
    1fcc:	0e 94 f1 10 	call	0x21e2	; 0x21e2 <__ultoa_invert>
    1fd0:	d8 2e       	mov	r13, r24
    1fd2:	d2 18       	sub	r13, r2
    1fd4:	40 c0       	rjmp	.+128    	; 0x2056 <vfprintf+0x2b2>
    1fd6:	95 37       	cpi	r25, 0x75	; 117
    1fd8:	29 f4       	brne	.+10     	; 0x1fe4 <vfprintf+0x240>
    1fda:	1f 2d       	mov	r17, r15
    1fdc:	1f 7e       	andi	r17, 0xEF	; 239
    1fde:	2a e0       	ldi	r18, 0x0A	; 10
    1fe0:	30 e0       	ldi	r19, 0x00	; 0
    1fe2:	1d c0       	rjmp	.+58     	; 0x201e <vfprintf+0x27a>
    1fe4:	1f 2d       	mov	r17, r15
    1fe6:	19 7f       	andi	r17, 0xF9	; 249
    1fe8:	9f 36       	cpi	r25, 0x6F	; 111
    1fea:	61 f0       	breq	.+24     	; 0x2004 <vfprintf+0x260>
    1fec:	90 37       	cpi	r25, 0x70	; 112
    1fee:	20 f4       	brcc	.+8      	; 0x1ff8 <vfprintf+0x254>
    1ff0:	98 35       	cpi	r25, 0x58	; 88
    1ff2:	09 f0       	breq	.+2      	; 0x1ff6 <vfprintf+0x252>
    1ff4:	ac c0       	rjmp	.+344    	; 0x214e <vfprintf+0x3aa>
    1ff6:	0f c0       	rjmp	.+30     	; 0x2016 <vfprintf+0x272>
    1ff8:	90 37       	cpi	r25, 0x70	; 112
    1ffa:	39 f0       	breq	.+14     	; 0x200a <vfprintf+0x266>
    1ffc:	98 37       	cpi	r25, 0x78	; 120
    1ffe:	09 f0       	breq	.+2      	; 0x2002 <vfprintf+0x25e>
    2000:	a6 c0       	rjmp	.+332    	; 0x214e <vfprintf+0x3aa>
    2002:	04 c0       	rjmp	.+8      	; 0x200c <vfprintf+0x268>
    2004:	28 e0       	ldi	r18, 0x08	; 8
    2006:	30 e0       	ldi	r19, 0x00	; 0
    2008:	0a c0       	rjmp	.+20     	; 0x201e <vfprintf+0x27a>
    200a:	10 61       	ori	r17, 0x10	; 16
    200c:	14 fd       	sbrc	r17, 4
    200e:	14 60       	ori	r17, 0x04	; 4
    2010:	20 e1       	ldi	r18, 0x10	; 16
    2012:	30 e0       	ldi	r19, 0x00	; 0
    2014:	04 c0       	rjmp	.+8      	; 0x201e <vfprintf+0x27a>
    2016:	14 fd       	sbrc	r17, 4
    2018:	16 60       	ori	r17, 0x06	; 6
    201a:	20 e1       	ldi	r18, 0x10	; 16
    201c:	32 e0       	ldi	r19, 0x02	; 2
    201e:	17 ff       	sbrs	r17, 7
    2020:	08 c0       	rjmp	.+16     	; 0x2032 <vfprintf+0x28e>
    2022:	f5 01       	movw	r30, r10
    2024:	60 81       	ld	r22, Z
    2026:	71 81       	ldd	r23, Z+1	; 0x01
    2028:	82 81       	ldd	r24, Z+2	; 0x02
    202a:	93 81       	ldd	r25, Z+3	; 0x03
    202c:	44 e0       	ldi	r20, 0x04	; 4
    202e:	50 e0       	ldi	r21, 0x00	; 0
    2030:	08 c0       	rjmp	.+16     	; 0x2042 <vfprintf+0x29e>
    2032:	f5 01       	movw	r30, r10
    2034:	80 81       	ld	r24, Z
    2036:	91 81       	ldd	r25, Z+1	; 0x01
    2038:	bc 01       	movw	r22, r24
    203a:	80 e0       	ldi	r24, 0x00	; 0
    203c:	90 e0       	ldi	r25, 0x00	; 0
    203e:	42 e0       	ldi	r20, 0x02	; 2
    2040:	50 e0       	ldi	r21, 0x00	; 0
    2042:	a4 0e       	add	r10, r20
    2044:	b5 1e       	adc	r11, r21
    2046:	a1 01       	movw	r20, r2
    2048:	0e 94 f1 10 	call	0x21e2	; 0x21e2 <__ultoa_invert>
    204c:	d8 2e       	mov	r13, r24
    204e:	d2 18       	sub	r13, r2
    2050:	8f e7       	ldi	r24, 0x7F	; 127
    2052:	f8 2e       	mov	r15, r24
    2054:	f1 22       	and	r15, r17
    2056:	f6 fe       	sbrs	r15, 6
    2058:	0b c0       	rjmp	.+22     	; 0x2070 <vfprintf+0x2cc>
    205a:	5e ef       	ldi	r21, 0xFE	; 254
    205c:	f5 22       	and	r15, r21
    205e:	d9 14       	cp	r13, r9
    2060:	38 f4       	brcc	.+14     	; 0x2070 <vfprintf+0x2cc>
    2062:	f4 fe       	sbrs	r15, 4
    2064:	07 c0       	rjmp	.+14     	; 0x2074 <vfprintf+0x2d0>
    2066:	f2 fc       	sbrc	r15, 2
    2068:	05 c0       	rjmp	.+10     	; 0x2074 <vfprintf+0x2d0>
    206a:	8f ee       	ldi	r24, 0xEF	; 239
    206c:	f8 22       	and	r15, r24
    206e:	02 c0       	rjmp	.+4      	; 0x2074 <vfprintf+0x2d0>
    2070:	1d 2d       	mov	r17, r13
    2072:	01 c0       	rjmp	.+2      	; 0x2076 <vfprintf+0x2d2>
    2074:	19 2d       	mov	r17, r9
    2076:	f4 fe       	sbrs	r15, 4
    2078:	0d c0       	rjmp	.+26     	; 0x2094 <vfprintf+0x2f0>
    207a:	fe 01       	movw	r30, r28
    207c:	ed 0d       	add	r30, r13
    207e:	f1 1d       	adc	r31, r1
    2080:	80 81       	ld	r24, Z
    2082:	80 33       	cpi	r24, 0x30	; 48
    2084:	19 f4       	brne	.+6      	; 0x208c <vfprintf+0x2e8>
    2086:	99 ee       	ldi	r25, 0xE9	; 233
    2088:	f9 22       	and	r15, r25
    208a:	08 c0       	rjmp	.+16     	; 0x209c <vfprintf+0x2f8>
    208c:	1f 5f       	subi	r17, 0xFF	; 255
    208e:	f2 fe       	sbrs	r15, 2
    2090:	05 c0       	rjmp	.+10     	; 0x209c <vfprintf+0x2f8>
    2092:	03 c0       	rjmp	.+6      	; 0x209a <vfprintf+0x2f6>
    2094:	8f 2d       	mov	r24, r15
    2096:	86 78       	andi	r24, 0x86	; 134
    2098:	09 f0       	breq	.+2      	; 0x209c <vfprintf+0x2f8>
    209a:	1f 5f       	subi	r17, 0xFF	; 255
    209c:	0f 2d       	mov	r16, r15
    209e:	f3 fc       	sbrc	r15, 3
    20a0:	14 c0       	rjmp	.+40     	; 0x20ca <vfprintf+0x326>
    20a2:	f0 fe       	sbrs	r15, 0
    20a4:	0f c0       	rjmp	.+30     	; 0x20c4 <vfprintf+0x320>
    20a6:	1e 15       	cp	r17, r14
    20a8:	10 f0       	brcs	.+4      	; 0x20ae <vfprintf+0x30a>
    20aa:	9d 2c       	mov	r9, r13
    20ac:	0b c0       	rjmp	.+22     	; 0x20c4 <vfprintf+0x320>
    20ae:	9d 2c       	mov	r9, r13
    20b0:	9e 0c       	add	r9, r14
    20b2:	91 1a       	sub	r9, r17
    20b4:	1e 2d       	mov	r17, r14
    20b6:	06 c0       	rjmp	.+12     	; 0x20c4 <vfprintf+0x320>
    20b8:	80 e2       	ldi	r24, 0x20	; 32
    20ba:	90 e0       	ldi	r25, 0x00	; 0
    20bc:	b3 01       	movw	r22, r6
    20be:	0e 94 c5 10 	call	0x218a	; 0x218a <fputc>
    20c2:	1f 5f       	subi	r17, 0xFF	; 255
    20c4:	1e 15       	cp	r17, r14
    20c6:	c0 f3       	brcs	.-16     	; 0x20b8 <vfprintf+0x314>
    20c8:	04 c0       	rjmp	.+8      	; 0x20d2 <vfprintf+0x32e>
    20ca:	1e 15       	cp	r17, r14
    20cc:	10 f4       	brcc	.+4      	; 0x20d2 <vfprintf+0x32e>
    20ce:	e1 1a       	sub	r14, r17
    20d0:	01 c0       	rjmp	.+2      	; 0x20d4 <vfprintf+0x330>
    20d2:	ee 24       	eor	r14, r14
    20d4:	04 ff       	sbrs	r16, 4
    20d6:	0f c0       	rjmp	.+30     	; 0x20f6 <vfprintf+0x352>
    20d8:	80 e3       	ldi	r24, 0x30	; 48
    20da:	90 e0       	ldi	r25, 0x00	; 0
    20dc:	b3 01       	movw	r22, r6
    20de:	0e 94 c5 10 	call	0x218a	; 0x218a <fputc>
    20e2:	02 ff       	sbrs	r16, 2
    20e4:	1d c0       	rjmp	.+58     	; 0x2120 <vfprintf+0x37c>
    20e6:	01 fd       	sbrc	r16, 1
    20e8:	03 c0       	rjmp	.+6      	; 0x20f0 <vfprintf+0x34c>
    20ea:	88 e7       	ldi	r24, 0x78	; 120
    20ec:	90 e0       	ldi	r25, 0x00	; 0
    20ee:	0e c0       	rjmp	.+28     	; 0x210c <vfprintf+0x368>
    20f0:	88 e5       	ldi	r24, 0x58	; 88
    20f2:	90 e0       	ldi	r25, 0x00	; 0
    20f4:	0b c0       	rjmp	.+22     	; 0x210c <vfprintf+0x368>
    20f6:	80 2f       	mov	r24, r16
    20f8:	86 78       	andi	r24, 0x86	; 134
    20fa:	91 f0       	breq	.+36     	; 0x2120 <vfprintf+0x37c>
    20fc:	01 ff       	sbrs	r16, 1
    20fe:	02 c0       	rjmp	.+4      	; 0x2104 <vfprintf+0x360>
    2100:	8b e2       	ldi	r24, 0x2B	; 43
    2102:	01 c0       	rjmp	.+2      	; 0x2106 <vfprintf+0x362>
    2104:	80 e2       	ldi	r24, 0x20	; 32
    2106:	f7 fc       	sbrc	r15, 7
    2108:	8d e2       	ldi	r24, 0x2D	; 45
    210a:	90 e0       	ldi	r25, 0x00	; 0
    210c:	b3 01       	movw	r22, r6
    210e:	0e 94 c5 10 	call	0x218a	; 0x218a <fputc>
    2112:	06 c0       	rjmp	.+12     	; 0x2120 <vfprintf+0x37c>
    2114:	80 e3       	ldi	r24, 0x30	; 48
    2116:	90 e0       	ldi	r25, 0x00	; 0
    2118:	b3 01       	movw	r22, r6
    211a:	0e 94 c5 10 	call	0x218a	; 0x218a <fputc>
    211e:	9a 94       	dec	r9
    2120:	d9 14       	cp	r13, r9
    2122:	c0 f3       	brcs	.-16     	; 0x2114 <vfprintf+0x370>
    2124:	da 94       	dec	r13
    2126:	f1 01       	movw	r30, r2
    2128:	ed 0d       	add	r30, r13
    212a:	f1 1d       	adc	r31, r1
    212c:	80 81       	ld	r24, Z
    212e:	90 e0       	ldi	r25, 0x00	; 0
    2130:	b3 01       	movw	r22, r6
    2132:	0e 94 c5 10 	call	0x218a	; 0x218a <fputc>
    2136:	dd 20       	and	r13, r13
    2138:	a9 f7       	brne	.-22     	; 0x2124 <vfprintf+0x380>
    213a:	06 c0       	rjmp	.+12     	; 0x2148 <vfprintf+0x3a4>
    213c:	80 e2       	ldi	r24, 0x20	; 32
    213e:	90 e0       	ldi	r25, 0x00	; 0
    2140:	b3 01       	movw	r22, r6
    2142:	0e 94 c5 10 	call	0x218a	; 0x218a <fputc>
    2146:	ea 94       	dec	r14
    2148:	ee 20       	and	r14, r14
    214a:	c1 f7       	brne	.-16     	; 0x213c <vfprintf+0x398>
    214c:	43 ce       	rjmp	.-890    	; 0x1dd4 <vfprintf+0x30>
    214e:	f3 01       	movw	r30, r6
    2150:	66 81       	ldd	r22, Z+6	; 0x06
    2152:	77 81       	ldd	r23, Z+7	; 0x07
    2154:	cb 01       	movw	r24, r22
    2156:	2b 96       	adiw	r28, 0x0b	; 11
    2158:	e2 e1       	ldi	r30, 0x12	; 18
    215a:	0c 94 93 0e 	jmp	0x1d26	; 0x1d26 <__epilogue_restores__>

0000215e <strnlen_P>:
    215e:	fc 01       	movw	r30, r24
    2160:	05 90       	lpm	r0, Z+
    2162:	61 50       	subi	r22, 0x01	; 1
    2164:	70 40       	sbci	r23, 0x00	; 0
    2166:	01 10       	cpse	r0, r1
    2168:	d8 f7       	brcc	.-10     	; 0x2160 <strnlen_P+0x2>
    216a:	80 95       	com	r24
    216c:	90 95       	com	r25
    216e:	8e 0f       	add	r24, r30
    2170:	9f 1f       	adc	r25, r31
    2172:	08 95       	ret

00002174 <strnlen>:
    2174:	fc 01       	movw	r30, r24
    2176:	61 50       	subi	r22, 0x01	; 1
    2178:	70 40       	sbci	r23, 0x00	; 0
    217a:	01 90       	ld	r0, Z+
    217c:	01 10       	cpse	r0, r1
    217e:	d8 f7       	brcc	.-10     	; 0x2176 <strnlen+0x2>
    2180:	80 95       	com	r24
    2182:	90 95       	com	r25
    2184:	8e 0f       	add	r24, r30
    2186:	9f 1f       	adc	r25, r31
    2188:	08 95       	ret

0000218a <fputc>:
    218a:	0f 93       	push	r16
    218c:	1f 93       	push	r17
    218e:	cf 93       	push	r28
    2190:	df 93       	push	r29
    2192:	8c 01       	movw	r16, r24
    2194:	eb 01       	movw	r28, r22
    2196:	8b 81       	ldd	r24, Y+3	; 0x03
    2198:	81 ff       	sbrs	r24, 1
    219a:	1b c0       	rjmp	.+54     	; 0x21d2 <fputc+0x48>
    219c:	82 ff       	sbrs	r24, 2
    219e:	0d c0       	rjmp	.+26     	; 0x21ba <fputc+0x30>
    21a0:	2e 81       	ldd	r18, Y+6	; 0x06
    21a2:	3f 81       	ldd	r19, Y+7	; 0x07
    21a4:	8c 81       	ldd	r24, Y+4	; 0x04
    21a6:	9d 81       	ldd	r25, Y+5	; 0x05
    21a8:	28 17       	cp	r18, r24
    21aa:	39 07       	cpc	r19, r25
    21ac:	64 f4       	brge	.+24     	; 0x21c6 <fputc+0x3c>
    21ae:	e8 81       	ld	r30, Y
    21b0:	f9 81       	ldd	r31, Y+1	; 0x01
    21b2:	01 93       	st	Z+, r16
    21b4:	f9 83       	std	Y+1, r31	; 0x01
    21b6:	e8 83       	st	Y, r30
    21b8:	06 c0       	rjmp	.+12     	; 0x21c6 <fputc+0x3c>
    21ba:	e8 85       	ldd	r30, Y+8	; 0x08
    21bc:	f9 85       	ldd	r31, Y+9	; 0x09
    21be:	80 2f       	mov	r24, r16
    21c0:	09 95       	icall
    21c2:	89 2b       	or	r24, r25
    21c4:	31 f4       	brne	.+12     	; 0x21d2 <fputc+0x48>
    21c6:	8e 81       	ldd	r24, Y+6	; 0x06
    21c8:	9f 81       	ldd	r25, Y+7	; 0x07
    21ca:	01 96       	adiw	r24, 0x01	; 1
    21cc:	9f 83       	std	Y+7, r25	; 0x07
    21ce:	8e 83       	std	Y+6, r24	; 0x06
    21d0:	02 c0       	rjmp	.+4      	; 0x21d6 <fputc+0x4c>
    21d2:	0f ef       	ldi	r16, 0xFF	; 255
    21d4:	1f ef       	ldi	r17, 0xFF	; 255
    21d6:	c8 01       	movw	r24, r16
    21d8:	df 91       	pop	r29
    21da:	cf 91       	pop	r28
    21dc:	1f 91       	pop	r17
    21de:	0f 91       	pop	r16
    21e0:	08 95       	ret

000021e2 <__ultoa_invert>:
    21e2:	fa 01       	movw	r30, r20
    21e4:	aa 27       	eor	r26, r26
    21e6:	28 30       	cpi	r18, 0x08	; 8
    21e8:	51 f1       	breq	.+84     	; 0x223e <__ultoa_invert+0x5c>
    21ea:	20 31       	cpi	r18, 0x10	; 16
    21ec:	81 f1       	breq	.+96     	; 0x224e <__ultoa_invert+0x6c>
    21ee:	e8 94       	clt
    21f0:	6f 93       	push	r22
    21f2:	6e 7f       	andi	r22, 0xFE	; 254
    21f4:	6e 5f       	subi	r22, 0xFE	; 254
    21f6:	7f 4f       	sbci	r23, 0xFF	; 255
    21f8:	8f 4f       	sbci	r24, 0xFF	; 255
    21fa:	9f 4f       	sbci	r25, 0xFF	; 255
    21fc:	af 4f       	sbci	r26, 0xFF	; 255
    21fe:	b1 e0       	ldi	r27, 0x01	; 1
    2200:	3e d0       	rcall	.+124    	; 0x227e <__ultoa_invert+0x9c>
    2202:	b4 e0       	ldi	r27, 0x04	; 4
    2204:	3c d0       	rcall	.+120    	; 0x227e <__ultoa_invert+0x9c>
    2206:	67 0f       	add	r22, r23
    2208:	78 1f       	adc	r23, r24
    220a:	89 1f       	adc	r24, r25
    220c:	9a 1f       	adc	r25, r26
    220e:	a1 1d       	adc	r26, r1
    2210:	68 0f       	add	r22, r24
    2212:	79 1f       	adc	r23, r25
    2214:	8a 1f       	adc	r24, r26
    2216:	91 1d       	adc	r25, r1
    2218:	a1 1d       	adc	r26, r1
    221a:	6a 0f       	add	r22, r26
    221c:	71 1d       	adc	r23, r1
    221e:	81 1d       	adc	r24, r1
    2220:	91 1d       	adc	r25, r1
    2222:	a1 1d       	adc	r26, r1
    2224:	20 d0       	rcall	.+64     	; 0x2266 <__ultoa_invert+0x84>
    2226:	09 f4       	brne	.+2      	; 0x222a <__ultoa_invert+0x48>
    2228:	68 94       	set
    222a:	3f 91       	pop	r19
    222c:	2a e0       	ldi	r18, 0x0A	; 10
    222e:	26 9f       	mul	r18, r22
    2230:	11 24       	eor	r1, r1
    2232:	30 19       	sub	r19, r0
    2234:	30 5d       	subi	r19, 0xD0	; 208
    2236:	31 93       	st	Z+, r19
    2238:	de f6       	brtc	.-74     	; 0x21f0 <__ultoa_invert+0xe>
    223a:	cf 01       	movw	r24, r30
    223c:	08 95       	ret
    223e:	46 2f       	mov	r20, r22
    2240:	47 70       	andi	r20, 0x07	; 7
    2242:	40 5d       	subi	r20, 0xD0	; 208
    2244:	41 93       	st	Z+, r20
    2246:	b3 e0       	ldi	r27, 0x03	; 3
    2248:	0f d0       	rcall	.+30     	; 0x2268 <__ultoa_invert+0x86>
    224a:	c9 f7       	brne	.-14     	; 0x223e <__ultoa_invert+0x5c>
    224c:	f6 cf       	rjmp	.-20     	; 0x223a <__ultoa_invert+0x58>
    224e:	46 2f       	mov	r20, r22
    2250:	4f 70       	andi	r20, 0x0F	; 15
    2252:	40 5d       	subi	r20, 0xD0	; 208
    2254:	4a 33       	cpi	r20, 0x3A	; 58
    2256:	18 f0       	brcs	.+6      	; 0x225e <__ultoa_invert+0x7c>
    2258:	49 5d       	subi	r20, 0xD9	; 217
    225a:	31 fd       	sbrc	r19, 1
    225c:	40 52       	subi	r20, 0x20	; 32
    225e:	41 93       	st	Z+, r20
    2260:	02 d0       	rcall	.+4      	; 0x2266 <__ultoa_invert+0x84>
    2262:	a9 f7       	brne	.-22     	; 0x224e <__ultoa_invert+0x6c>
    2264:	ea cf       	rjmp	.-44     	; 0x223a <__ultoa_invert+0x58>
    2266:	b4 e0       	ldi	r27, 0x04	; 4
    2268:	a6 95       	lsr	r26
    226a:	97 95       	ror	r25
    226c:	87 95       	ror	r24
    226e:	77 95       	ror	r23
    2270:	67 95       	ror	r22
    2272:	ba 95       	dec	r27
    2274:	c9 f7       	brne	.-14     	; 0x2268 <__ultoa_invert+0x86>
    2276:	00 97       	sbiw	r24, 0x00	; 0
    2278:	61 05       	cpc	r22, r1
    227a:	71 05       	cpc	r23, r1
    227c:	08 95       	ret
    227e:	9b 01       	movw	r18, r22
    2280:	ac 01       	movw	r20, r24
    2282:	0a 2e       	mov	r0, r26
    2284:	06 94       	lsr	r0
    2286:	57 95       	ror	r21
    2288:	47 95       	ror	r20
    228a:	37 95       	ror	r19
    228c:	27 95       	ror	r18
    228e:	ba 95       	dec	r27
    2290:	c9 f7       	brne	.-14     	; 0x2284 <__ultoa_invert+0xa2>
    2292:	62 0f       	add	r22, r18
    2294:	73 1f       	adc	r23, r19
    2296:	84 1f       	adc	r24, r20
    2298:	95 1f       	adc	r25, r21
    229a:	a0 1d       	adc	r26, r0
    229c:	08 95       	ret

0000229e <_exit>:
    229e:	f8 94       	cli

000022a0 <__stop_program>:
    22a0:	ff cf       	rjmp	.-2      	; 0x22a0 <__stop_program>
