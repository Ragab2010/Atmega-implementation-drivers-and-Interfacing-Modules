
Timer0.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000108  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000003b4  00000000  00000000  0000015c  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      0000069b  00000000  00000000  00000510  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 65 00 	call	0xca	; 0xca <main>
  64:	0c 94 82 00 	jmp	0x104	; 0x104 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <Timer0_delay>:
 *      Author: RAGAB
 */

#include <avr/io.h>

void Timer0_delay(){
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	00 d0       	rcall	.+0      	; 0x72 <Timer0_delay+0x6>
  72:	cd b7       	in	r28, 0x3d	; 61
  74:	de b7       	in	r29, 0x3e	; 62
	volatile unsigned int i=0;
  76:	1a 82       	std	Y+2, r1	; 0x02
  78:	19 82       	std	Y+1, r1	; 0x01
	TCCR0 =(1<<FOC0) | (1<<CS00);
  7a:	e3 e5       	ldi	r30, 0x53	; 83
  7c:	f0 e0       	ldi	r31, 0x00	; 0
  7e:	81 e8       	ldi	r24, 0x81	; 129
  80:	80 83       	st	Z, r24
	TCNT0 = 0;
  82:	e2 e5       	ldi	r30, 0x52	; 82
  84:	f0 e0       	ldi	r31, 0x00	; 0
  86:	10 82       	st	Z, r1
  88:	15 c0       	rjmp	.+42     	; 0xb4 <Timer0_delay+0x48>
	while(i < 62500){
		while((TIFR &(1<<TOV0))){
			TIFR |=(1<<TOV0);
  8a:	a8 e5       	ldi	r26, 0x58	; 88
  8c:	b0 e0       	ldi	r27, 0x00	; 0
  8e:	e8 e5       	ldi	r30, 0x58	; 88
  90:	f0 e0       	ldi	r31, 0x00	; 0
  92:	80 81       	ld	r24, Z
  94:	81 60       	ori	r24, 0x01	; 1
  96:	8c 93       	st	X, r24
			i++;
  98:	89 81       	ldd	r24, Y+1	; 0x01
  9a:	9a 81       	ldd	r25, Y+2	; 0x02
  9c:	01 96       	adiw	r24, 0x01	; 1
  9e:	9a 83       	std	Y+2, r25	; 0x02
  a0:	89 83       	std	Y+1, r24	; 0x01
void Timer0_delay(){
	volatile unsigned int i=0;
	TCCR0 =(1<<FOC0) | (1<<CS00);
	TCNT0 = 0;
	while(i < 62500){
		while((TIFR &(1<<TOV0))){
  a2:	e8 e5       	ldi	r30, 0x58	; 88
  a4:	f0 e0       	ldi	r31, 0x00	; 0
  a6:	80 81       	ld	r24, Z
  a8:	88 2f       	mov	r24, r24
  aa:	90 e0       	ldi	r25, 0x00	; 0
  ac:	81 70       	andi	r24, 0x01	; 1
  ae:	90 70       	andi	r25, 0x00	; 0
  b0:	88 23       	and	r24, r24
  b2:	59 f7       	brne	.-42     	; 0x8a <Timer0_delay+0x1e>

void Timer0_delay(){
	volatile unsigned int i=0;
	TCCR0 =(1<<FOC0) | (1<<CS00);
	TCNT0 = 0;
	while(i < 62500){
  b4:	89 81       	ldd	r24, Y+1	; 0x01
  b6:	9a 81       	ldd	r25, Y+2	; 0x02
  b8:	24 ef       	ldi	r18, 0xF4	; 244
  ba:	84 32       	cpi	r24, 0x24	; 36
  bc:	92 07       	cpc	r25, r18
  be:	88 f3       	brcs	.-30     	; 0xa2 <Timer0_delay+0x36>
			i++;
		}
	}


}
  c0:	0f 90       	pop	r0
  c2:	0f 90       	pop	r0
  c4:	cf 91       	pop	r28
  c6:	df 91       	pop	r29
  c8:	08 95       	ret

000000ca <main>:

int main(){
  ca:	df 93       	push	r29
  cc:	cf 93       	push	r28
  ce:	cd b7       	in	r28, 0x3d	; 61
  d0:	de b7       	in	r29, 0x3e	; 62
	DDRB |=(1<<PC0);
  d2:	a7 e3       	ldi	r26, 0x37	; 55
  d4:	b0 e0       	ldi	r27, 0x00	; 0
  d6:	e7 e3       	ldi	r30, 0x37	; 55
  d8:	f0 e0       	ldi	r31, 0x00	; 0
  da:	80 81       	ld	r24, Z
  dc:	81 60       	ori	r24, 0x01	; 1
  de:	8c 93       	st	X, r24
	PORTB &=~(1<<PC0);
  e0:	a8 e3       	ldi	r26, 0x38	; 56
  e2:	b0 e0       	ldi	r27, 0x00	; 0
  e4:	e8 e3       	ldi	r30, 0x38	; 56
  e6:	f0 e0       	ldi	r31, 0x00	; 0
  e8:	80 81       	ld	r24, Z
  ea:	8e 7f       	andi	r24, 0xFE	; 254
  ec:	8c 93       	st	X, r24

	while(1){
		PORTB ^=(1<<PC0);
  ee:	a8 e3       	ldi	r26, 0x38	; 56
  f0:	b0 e0       	ldi	r27, 0x00	; 0
  f2:	e8 e3       	ldi	r30, 0x38	; 56
  f4:	f0 e0       	ldi	r31, 0x00	; 0
  f6:	90 81       	ld	r25, Z
  f8:	81 e0       	ldi	r24, 0x01	; 1
  fa:	89 27       	eor	r24, r25
  fc:	8c 93       	st	X, r24
		Timer0_delay();
  fe:	0e 94 36 00 	call	0x6c	; 0x6c <Timer0_delay>
 102:	f5 cf       	rjmp	.-22     	; 0xee <main+0x24>

00000104 <_exit>:
 104:	f8 94       	cli

00000106 <__stop_program>:
 106:	ff cf       	rjmp	.-2      	; 0x106 <__stop_program>
