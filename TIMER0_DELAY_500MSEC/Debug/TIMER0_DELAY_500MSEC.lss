
TIMER0_DELAY_500MSEC.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000114  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         0000036c  00000000  00000000  00000168  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000691  00000000  00000000  000004d4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 6f 00 	call	0xde	; 0xde <main>
  64:	0c 94 88 00 	jmp	0x110	; 0x110 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <TIMER0_DELAY>:
 */

#include <avr/io.h>


void TIMER0_DELAY(){
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	cd b7       	in	r28, 0x3d	; 61
  72:	de b7       	in	r29, 0x3e	; 62

	//TCNT0=192;
	OCR0 =255;
  74:	ec e5       	ldi	r30, 0x5C	; 92
  76:	f0 e0       	ldi	r31, 0x00	; 0
  78:	8f ef       	ldi	r24, 0xFF	; 255
  7a:	80 83       	st	Z, r24
	TCCR0 = (1<<FOC0)|(1<<CS00)|(1<<CS02)|(1<<COM00);
  7c:	e3 e5       	ldi	r30, 0x53	; 83
  7e:	f0 e0       	ldi	r31, 0x00	; 0
  80:	85 e9       	ldi	r24, 0x95	; 149
  82:	80 83       	st	Z, r24
  84:	14 c0       	rjmp	.+40     	; 0xae <TIMER0_DELAY+0x42>
	while(TIFR &(1<<TIFR)){
		TIFR |=(1<<TIFR);
  86:	a8 e5       	ldi	r26, 0x58	; 88
  88:	b0 e0       	ldi	r27, 0x00	; 0
  8a:	e8 e5       	ldi	r30, 0x58	; 88
  8c:	f0 e0       	ldi	r31, 0x00	; 0
  8e:	80 81       	ld	r24, Z
  90:	48 2f       	mov	r20, r24
  92:	e8 e5       	ldi	r30, 0x58	; 88
  94:	f0 e0       	ldi	r31, 0x00	; 0
  96:	80 81       	ld	r24, Z
  98:	28 2f       	mov	r18, r24
  9a:	30 e0       	ldi	r19, 0x00	; 0
  9c:	81 e0       	ldi	r24, 0x01	; 1
  9e:	90 e0       	ldi	r25, 0x00	; 0
  a0:	02 c0       	rjmp	.+4      	; 0xa6 <TIMER0_DELAY+0x3a>
  a2:	88 0f       	add	r24, r24
  a4:	99 1f       	adc	r25, r25
  a6:	2a 95       	dec	r18
  a8:	e2 f7       	brpl	.-8      	; 0xa2 <TIMER0_DELAY+0x36>
  aa:	84 2b       	or	r24, r20
  ac:	8c 93       	st	X, r24
void TIMER0_DELAY(){

	//TCNT0=192;
	OCR0 =255;
	TCCR0 = (1<<FOC0)|(1<<CS00)|(1<<CS02)|(1<<COM00);
	while(TIFR &(1<<TIFR)){
  ae:	e8 e5       	ldi	r30, 0x58	; 88
  b0:	f0 e0       	ldi	r31, 0x00	; 0
  b2:	80 81       	ld	r24, Z
  b4:	28 2f       	mov	r18, r24
  b6:	30 e0       	ldi	r19, 0x00	; 0
  b8:	e8 e5       	ldi	r30, 0x58	; 88
  ba:	f0 e0       	ldi	r31, 0x00	; 0
  bc:	80 81       	ld	r24, Z
  be:	88 2f       	mov	r24, r24
  c0:	90 e0       	ldi	r25, 0x00	; 0
  c2:	a9 01       	movw	r20, r18
  c4:	02 c0       	rjmp	.+4      	; 0xca <TIMER0_DELAY+0x5e>
  c6:	55 95       	asr	r21
  c8:	47 95       	ror	r20
  ca:	8a 95       	dec	r24
  cc:	e2 f7       	brpl	.-8      	; 0xc6 <TIMER0_DELAY+0x5a>
  ce:	ca 01       	movw	r24, r20
  d0:	81 70       	andi	r24, 0x01	; 1
  d2:	90 70       	andi	r25, 0x00	; 0
  d4:	88 23       	and	r24, r24
  d6:	b9 f6       	brne	.-82     	; 0x86 <TIMER0_DELAY+0x1a>
		TIFR |=(1<<TIFR);
	}
}
  d8:	cf 91       	pop	r28
  da:	df 91       	pop	r29
  dc:	08 95       	ret

000000de <main>:
int main(){
  de:	df 93       	push	r29
  e0:	cf 93       	push	r28
  e2:	cd b7       	in	r28, 0x3d	; 61
  e4:	de b7       	in	r29, 0x3e	; 62

	DDRB  |=(1<<PB3);
  e6:	a7 e3       	ldi	r26, 0x37	; 55
  e8:	b0 e0       	ldi	r27, 0x00	; 0
  ea:	e7 e3       	ldi	r30, 0x37	; 55
  ec:	f0 e0       	ldi	r31, 0x00	; 0
  ee:	80 81       	ld	r24, Z
  f0:	88 60       	ori	r24, 0x08	; 8
  f2:	8c 93       	st	X, r24
	PORTB =0x00;
  f4:	e8 e3       	ldi	r30, 0x38	; 56
  f6:	f0 e0       	ldi	r31, 0x00	; 0
  f8:	10 82       	st	Z, r1
	TIMER0_DELAY();
  fa:	0e 94 36 00 	call	0x6c	; 0x6c <TIMER0_DELAY>
	for(;;){

		PORTB ^=(1<<PB0);
  fe:	a8 e3       	ldi	r26, 0x38	; 56
 100:	b0 e0       	ldi	r27, 0x00	; 0
 102:	e8 e3       	ldi	r30, 0x38	; 56
 104:	f0 e0       	ldi	r31, 0x00	; 0
 106:	90 81       	ld	r25, Z
 108:	81 e0       	ldi	r24, 0x01	; 1
 10a:	89 27       	eor	r24, r25
 10c:	8c 93       	st	X, r24
 10e:	f7 cf       	rjmp	.-18     	; 0xfe <main+0x20>

00000110 <_exit>:
 110:	f8 94       	cli

00000112 <__stop_program>:
 112:	ff cf       	rjmp	.-2      	; 0x112 <__stop_program>
