
TIMERINPUTCAPTURE.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001ca2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000014  00800060  00001ca2  00001d16  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00000edc  00000000  00000000  00001d2c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000a61  00000000  00000000  00002c08  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  00003669  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  000037a9  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  00003919  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  00005562  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  0000644d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  000071fc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  0000735c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  000075e9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00007db7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d4 e0       	ldi	r29, 0x04	; 4
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e2 ea       	ldi	r30, 0xA2	; 162
      68:	fc e1       	ldi	r31, 0x1C	; 28
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a4 37       	cpi	r26, 0x74	; 116
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 51 0b 	call	0x16a2	; 0x16a2 <main>
      7a:	0c 94 4f 0e 	jmp	0x1c9e	; 0x1c9e <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 77 0b 	jmp	0x16ee	; 0x16ee <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a3 e6       	ldi	r26, 0x63	; 99
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 93 0b 	jmp	0x1726	; 0x1726 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 83 0b 	jmp	0x1706	; 0x1706 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 9f 0b 	jmp	0x173e	; 0x173e <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 83 0b 	jmp	0x1706	; 0x1706 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 9f 0b 	jmp	0x173e	; 0x173e <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 77 0b 	jmp	0x16ee	; 0x16ee <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__stack+0x2f>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__stack+0x45>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__stack+0x1d>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__stack+0x2f>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__stack+0x25>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__stack+0x2b>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__stack+0x45>
     484:	83 e6       	ldi	r24, 0x63	; 99
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__stack+0x1b7>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__stack+0x41>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__stack+0x1b7>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__stack+0x57>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__stack+0x1b7>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__stack+0xc3>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__stack+0xb7>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__stack+0xdf>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__stack+0xf9>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__stack+0x7f>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__stack+0x13d>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__stack+0x131>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__stack+0x10f>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__stack+0x15b>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__stack+0x143>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__stack+0x19d>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__stack+0x19d>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__stack+0x19d>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__stack+0x1a7>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 93 0b 	jmp	0x1726	; 0x1726 <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 83 0b 	jmp	0x1706	; 0x1706 <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 9f 0b 	jmp	0x173e	; 0x173e <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 83 0b 	jmp	0x1706	; 0x1706 <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 9f 0b 	jmp	0x173e	; 0x173e <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 83 0b 	jmp	0x1706	; 0x1706 <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 9f 0b 	jmp	0x173e	; 0x173e <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 87 0b 	jmp	0x170e	; 0x170e <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 a3 0b 	jmp	0x1746	; 0x1746 <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__pack_f+0x178>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__pack_f+0x172>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__pack_f+0x17c>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__pack_f+0x114>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__pack_f+0x76>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__pack_f+0xca>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__pack_f+0x86>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__pack_f+0x7e>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__pack_f+0x9c>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__pack_f+0x94>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__pack_f+0xbe>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__pack_f+0xee>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__pack_f+0xf6>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__pack_f+0xf6>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__pack_f+0x10e>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__pack_f+0x162>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__pack_f+0x172>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__pack_f+0x144>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__pack_f+0x154>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__pack_f+0x14c>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__pack_f+0x162>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__pack_f+0x164>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__pack_f+0x17c>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <LCD_init>:
void LCD_intToString(unsigned short data);
void LCD_clearScreen(void);
void LCD_displayStringRowCol(unsigned char row , unsigned char col , unsigned char *str );


void LCD_init(){
     b36:	df 93       	push	r29
     b38:	cf 93       	push	r28
     b3a:	cd b7       	in	r28, 0x3d	; 61
     b3c:	de b7       	in	r29, 0x3e	; 62
	LCD_CTRL_PORT_DIR |=(1<<RS) |(1<<RW) |(1<<E);
     b3e:	a1 e3       	ldi	r26, 0x31	; 49
     b40:	b0 e0       	ldi	r27, 0x00	; 0
     b42:	e1 e3       	ldi	r30, 0x31	; 49
     b44:	f0 e0       	ldi	r31, 0x00	; 0
     b46:	80 81       	ld	r24, Z
     b48:	87 60       	ori	r24, 0x07	; 7
     b4a:	8c 93       	st	X, r24
	LCD_DATA_PORT_DIR = 0XFF;
     b4c:	e4 e3       	ldi	r30, 0x34	; 52
     b4e:	f0 e0       	ldi	r31, 0x00	; 0
     b50:	8f ef       	ldi	r24, 0xFF	; 255
     b52:	80 83       	st	Z, r24
	LCD_command(0x38);
     b54:	88 e3       	ldi	r24, 0x38	; 56
     b56:	0e 94 0e 06 	call	0xc1c	; 0xc1c <LCD_command>
	LCD_command(0x0C);
     b5a:	8c e0       	ldi	r24, 0x0C	; 12
     b5c:	0e 94 0e 06 	call	0xc1c	; 0xc1c <LCD_command>
	LCD_command(0x01);
     b60:	81 e0       	ldi	r24, 0x01	; 1
     b62:	0e 94 0e 06 	call	0xc1c	; 0xc1c <LCD_command>



}
     b66:	cf 91       	pop	r28
     b68:	df 91       	pop	r29
     b6a:	08 95       	ret

00000b6c <storeShape>:
void storeShape(unsigned char row , unsigned char col  ){
     b6c:	df 93       	push	r29
     b6e:	cf 93       	push	r28
     b70:	cd b7       	in	r28, 0x3d	; 61
     b72:	de b7       	in	r29, 0x3e	; 62
     b74:	60 97       	sbiw	r28, 0x10	; 16
     b76:	0f b6       	in	r0, 0x3f	; 63
     b78:	f8 94       	cli
     b7a:	de bf       	out	0x3e, r29	; 62
     b7c:	0f be       	out	0x3f, r0	; 63
     b7e:	cd bf       	out	0x3d, r28	; 61
     b80:	8a 87       	std	Y+10, r24	; 0x0a
     b82:	6b 87       	std	Y+11, r22	; 0x0b
	unsigned char i,shape[8]= {0,0,10,31,31,14,4,0};
     b84:	ce 01       	movw	r24, r28
     b86:	02 96       	adiw	r24, 0x02	; 2
     b88:	9d 87       	std	Y+13, r25	; 0x0d
     b8a:	8c 87       	std	Y+12, r24	; 0x0c
     b8c:	eb e6       	ldi	r30, 0x6B	; 107
     b8e:	f0 e0       	ldi	r31, 0x00	; 0
     b90:	ff 87       	std	Y+15, r31	; 0x0f
     b92:	ee 87       	std	Y+14, r30	; 0x0e
     b94:	f8 e0       	ldi	r31, 0x08	; 8
     b96:	f8 8b       	std	Y+16, r31	; 0x10
     b98:	ee 85       	ldd	r30, Y+14	; 0x0e
     b9a:	ff 85       	ldd	r31, Y+15	; 0x0f
     b9c:	00 80       	ld	r0, Z
     b9e:	8e 85       	ldd	r24, Y+14	; 0x0e
     ba0:	9f 85       	ldd	r25, Y+15	; 0x0f
     ba2:	01 96       	adiw	r24, 0x01	; 1
     ba4:	9f 87       	std	Y+15, r25	; 0x0f
     ba6:	8e 87       	std	Y+14, r24	; 0x0e
     ba8:	ec 85       	ldd	r30, Y+12	; 0x0c
     baa:	fd 85       	ldd	r31, Y+13	; 0x0d
     bac:	00 82       	st	Z, r0
     bae:	8c 85       	ldd	r24, Y+12	; 0x0c
     bb0:	9d 85       	ldd	r25, Y+13	; 0x0d
     bb2:	01 96       	adiw	r24, 0x01	; 1
     bb4:	9d 87       	std	Y+13, r25	; 0x0d
     bb6:	8c 87       	std	Y+12, r24	; 0x0c
     bb8:	98 89       	ldd	r25, Y+16	; 0x10
     bba:	91 50       	subi	r25, 0x01	; 1
     bbc:	98 8b       	std	Y+16, r25	; 0x10
     bbe:	e8 89       	ldd	r30, Y+16	; 0x10
     bc0:	ee 23       	and	r30, r30
     bc2:	51 f7       	brne	.-44     	; 0xb98 <storeShape+0x2c>
	LCD_command(0x40);//set adress pointer to point on adress 00000 in CGRAM
     bc4:	80 e4       	ldi	r24, 0x40	; 64
     bc6:	0e 94 0e 06 	call	0xc1c	; 0xc1c <LCD_command>
	for( i=0 ; i < 8  ; i++ ){
     bca:	19 82       	std	Y+1, r1	; 0x01
     bcc:	0e c0       	rjmp	.+28     	; 0xbea <storeShape+0x7e>
		LCD_Data(shape[i]);
     bce:	89 81       	ldd	r24, Y+1	; 0x01
     bd0:	28 2f       	mov	r18, r24
     bd2:	30 e0       	ldi	r19, 0x00	; 0
     bd4:	ce 01       	movw	r24, r28
     bd6:	02 96       	adiw	r24, 0x02	; 2
     bd8:	fc 01       	movw	r30, r24
     bda:	e2 0f       	add	r30, r18
     bdc:	f3 1f       	adc	r31, r19
     bde:	80 81       	ld	r24, Z
     be0:	0e 94 03 08 	call	0x1006	; 0x1006 <LCD_Data>

}
void storeShape(unsigned char row , unsigned char col  ){
	unsigned char i,shape[8]= {0,0,10,31,31,14,4,0};
	LCD_command(0x40);//set adress pointer to point on adress 00000 in CGRAM
	for( i=0 ; i < 8  ; i++ ){
     be4:	89 81       	ldd	r24, Y+1	; 0x01
     be6:	8f 5f       	subi	r24, 0xFF	; 255
     be8:	89 83       	std	Y+1, r24	; 0x01
     bea:	89 81       	ldd	r24, Y+1	; 0x01
     bec:	88 30       	cpi	r24, 0x08	; 8
     bee:	78 f3       	brcs	.-34     	; 0xbce <storeShape+0x62>
		LCD_Data(shape[i]);

	}
	LCD_goToRowCol(row , col);
     bf0:	8a 85       	ldd	r24, Y+10	; 0x0a
     bf2:	48 2f       	mov	r20, r24
     bf4:	50 e0       	ldi	r21, 0x00	; 0
     bf6:	8b 85       	ldd	r24, Y+11	; 0x0b
     bf8:	28 2f       	mov	r18, r24
     bfa:	30 e0       	ldi	r19, 0x00	; 0
     bfc:	ca 01       	movw	r24, r20
     bfe:	b9 01       	movw	r22, r18
     c00:	0e 94 ff 09 	call	0x13fe	; 0x13fe <LCD_goToRowCol>
	LCD_Data(0x00); // show the address this of CGRAM
     c04:	80 e0       	ldi	r24, 0x00	; 0
     c06:	0e 94 03 08 	call	0x1006	; 0x1006 <LCD_Data>

}
     c0a:	60 96       	adiw	r28, 0x10	; 16
     c0c:	0f b6       	in	r0, 0x3f	; 63
     c0e:	f8 94       	cli
     c10:	de bf       	out	0x3e, r29	; 62
     c12:	0f be       	out	0x3f, r0	; 63
     c14:	cd bf       	out	0x3d, r28	; 61
     c16:	cf 91       	pop	r28
     c18:	df 91       	pop	r29
     c1a:	08 95       	ret

00000c1c <LCD_command>:
void LCD_command(unsigned char command){
     c1c:	df 93       	push	r29
     c1e:	cf 93       	push	r28
     c20:	cd b7       	in	r28, 0x3d	; 61
     c22:	de b7       	in	r29, 0x3e	; 62
     c24:	e9 97       	sbiw	r28, 0x39	; 57
     c26:	0f b6       	in	r0, 0x3f	; 63
     c28:	f8 94       	cli
     c2a:	de bf       	out	0x3e, r29	; 62
     c2c:	0f be       	out	0x3f, r0	; 63
     c2e:	cd bf       	out	0x3d, r28	; 61
     c30:	89 af       	std	Y+57, r24	; 0x39
	LCD_CTRL_PORT &=~((1<<RS)|(1<<RW));
     c32:	a2 e3       	ldi	r26, 0x32	; 50
     c34:	b0 e0       	ldi	r27, 0x00	; 0
     c36:	e2 e3       	ldi	r30, 0x32	; 50
     c38:	f0 e0       	ldi	r31, 0x00	; 0
     c3a:	80 81       	ld	r24, Z
     c3c:	8c 7f       	andi	r24, 0xFC	; 252
     c3e:	8c 93       	st	X, r24
     c40:	80 e0       	ldi	r24, 0x00	; 0
     c42:	90 e0       	ldi	r25, 0x00	; 0
     c44:	a0 e8       	ldi	r26, 0x80	; 128
     c46:	bf e3       	ldi	r27, 0x3F	; 63
     c48:	8d ab       	std	Y+53, r24	; 0x35
     c4a:	9e ab       	std	Y+54, r25	; 0x36
     c4c:	af ab       	std	Y+55, r26	; 0x37
     c4e:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     c50:	6d a9       	ldd	r22, Y+53	; 0x35
     c52:	7e a9       	ldd	r23, Y+54	; 0x36
     c54:	8f a9       	ldd	r24, Y+55	; 0x37
     c56:	98 ad       	ldd	r25, Y+56	; 0x38
     c58:	20 e0       	ldi	r18, 0x00	; 0
     c5a:	30 e0       	ldi	r19, 0x00	; 0
     c5c:	4a ef       	ldi	r20, 0xFA	; 250
     c5e:	54 e4       	ldi	r21, 0x44	; 68
     c60:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     c64:	dc 01       	movw	r26, r24
     c66:	cb 01       	movw	r24, r22
     c68:	89 ab       	std	Y+49, r24	; 0x31
     c6a:	9a ab       	std	Y+50, r25	; 0x32
     c6c:	ab ab       	std	Y+51, r26	; 0x33
     c6e:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
     c70:	69 a9       	ldd	r22, Y+49	; 0x31
     c72:	7a a9       	ldd	r23, Y+50	; 0x32
     c74:	8b a9       	ldd	r24, Y+51	; 0x33
     c76:	9c a9       	ldd	r25, Y+52	; 0x34
     c78:	20 e0       	ldi	r18, 0x00	; 0
     c7a:	30 e0       	ldi	r19, 0x00	; 0
     c7c:	40 e8       	ldi	r20, 0x80	; 128
     c7e:	5f e3       	ldi	r21, 0x3F	; 63
     c80:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     c84:	88 23       	and	r24, r24
     c86:	2c f4       	brge	.+10     	; 0xc92 <LCD_command+0x76>
		__ticks = 1;
     c88:	81 e0       	ldi	r24, 0x01	; 1
     c8a:	90 e0       	ldi	r25, 0x00	; 0
     c8c:	98 ab       	std	Y+48, r25	; 0x30
     c8e:	8f a7       	std	Y+47, r24	; 0x2f
     c90:	3f c0       	rjmp	.+126    	; 0xd10 <LCD_command+0xf4>
	else if (__tmp > 65535)
     c92:	69 a9       	ldd	r22, Y+49	; 0x31
     c94:	7a a9       	ldd	r23, Y+50	; 0x32
     c96:	8b a9       	ldd	r24, Y+51	; 0x33
     c98:	9c a9       	ldd	r25, Y+52	; 0x34
     c9a:	20 e0       	ldi	r18, 0x00	; 0
     c9c:	3f ef       	ldi	r19, 0xFF	; 255
     c9e:	4f e7       	ldi	r20, 0x7F	; 127
     ca0:	57 e4       	ldi	r21, 0x47	; 71
     ca2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     ca6:	18 16       	cp	r1, r24
     ca8:	4c f5       	brge	.+82     	; 0xcfc <LCD_command+0xe0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     caa:	6d a9       	ldd	r22, Y+53	; 0x35
     cac:	7e a9       	ldd	r23, Y+54	; 0x36
     cae:	8f a9       	ldd	r24, Y+55	; 0x37
     cb0:	98 ad       	ldd	r25, Y+56	; 0x38
     cb2:	20 e0       	ldi	r18, 0x00	; 0
     cb4:	30 e0       	ldi	r19, 0x00	; 0
     cb6:	40 e2       	ldi	r20, 0x20	; 32
     cb8:	51 e4       	ldi	r21, 0x41	; 65
     cba:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     cbe:	dc 01       	movw	r26, r24
     cc0:	cb 01       	movw	r24, r22
     cc2:	bc 01       	movw	r22, r24
     cc4:	cd 01       	movw	r24, r26
     cc6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     cca:	dc 01       	movw	r26, r24
     ccc:	cb 01       	movw	r24, r22
     cce:	98 ab       	std	Y+48, r25	; 0x30
     cd0:	8f a7       	std	Y+47, r24	; 0x2f
     cd2:	0f c0       	rjmp	.+30     	; 0xcf2 <LCD_command+0xd6>
     cd4:	88 ec       	ldi	r24, 0xC8	; 200
     cd6:	90 e0       	ldi	r25, 0x00	; 0
     cd8:	9e a7       	std	Y+46, r25	; 0x2e
     cda:	8d a7       	std	Y+45, r24	; 0x2d
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     cdc:	8d a5       	ldd	r24, Y+45	; 0x2d
     cde:	9e a5       	ldd	r25, Y+46	; 0x2e
     ce0:	01 97       	sbiw	r24, 0x01	; 1
     ce2:	f1 f7       	brne	.-4      	; 0xce0 <LCD_command+0xc4>
     ce4:	9e a7       	std	Y+46, r25	; 0x2e
     ce6:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     ce8:	8f a5       	ldd	r24, Y+47	; 0x2f
     cea:	98 a9       	ldd	r25, Y+48	; 0x30
     cec:	01 97       	sbiw	r24, 0x01	; 1
     cee:	98 ab       	std	Y+48, r25	; 0x30
     cf0:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     cf2:	8f a5       	ldd	r24, Y+47	; 0x2f
     cf4:	98 a9       	ldd	r25, Y+48	; 0x30
     cf6:	00 97       	sbiw	r24, 0x00	; 0
     cf8:	69 f7       	brne	.-38     	; 0xcd4 <LCD_command+0xb8>
     cfa:	14 c0       	rjmp	.+40     	; 0xd24 <LCD_command+0x108>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     cfc:	69 a9       	ldd	r22, Y+49	; 0x31
     cfe:	7a a9       	ldd	r23, Y+50	; 0x32
     d00:	8b a9       	ldd	r24, Y+51	; 0x33
     d02:	9c a9       	ldd	r25, Y+52	; 0x34
     d04:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     d08:	dc 01       	movw	r26, r24
     d0a:	cb 01       	movw	r24, r22
     d0c:	98 ab       	std	Y+48, r25	; 0x30
     d0e:	8f a7       	std	Y+47, r24	; 0x2f
     d10:	8f a5       	ldd	r24, Y+47	; 0x2f
     d12:	98 a9       	ldd	r25, Y+48	; 0x30
     d14:	9c a7       	std	Y+44, r25	; 0x2c
     d16:	8b a7       	std	Y+43, r24	; 0x2b
     d18:	8b a5       	ldd	r24, Y+43	; 0x2b
     d1a:	9c a5       	ldd	r25, Y+44	; 0x2c
     d1c:	01 97       	sbiw	r24, 0x01	; 1
     d1e:	f1 f7       	brne	.-4      	; 0xd1c <LCD_command+0x100>
     d20:	9c a7       	std	Y+44, r25	; 0x2c
     d22:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(1);
	LCD_CTRL_PORT |=(1<<E);
     d24:	a2 e3       	ldi	r26, 0x32	; 50
     d26:	b0 e0       	ldi	r27, 0x00	; 0
     d28:	e2 e3       	ldi	r30, 0x32	; 50
     d2a:	f0 e0       	ldi	r31, 0x00	; 0
     d2c:	80 81       	ld	r24, Z
     d2e:	84 60       	ori	r24, 0x04	; 4
     d30:	8c 93       	st	X, r24
     d32:	80 e0       	ldi	r24, 0x00	; 0
     d34:	90 e0       	ldi	r25, 0x00	; 0
     d36:	a0 e8       	ldi	r26, 0x80	; 128
     d38:	bf e3       	ldi	r27, 0x3F	; 63
     d3a:	8f a3       	std	Y+39, r24	; 0x27
     d3c:	98 a7       	std	Y+40, r25	; 0x28
     d3e:	a9 a7       	std	Y+41, r26	; 0x29
     d40:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     d42:	6f a1       	ldd	r22, Y+39	; 0x27
     d44:	78 a5       	ldd	r23, Y+40	; 0x28
     d46:	89 a5       	ldd	r24, Y+41	; 0x29
     d48:	9a a5       	ldd	r25, Y+42	; 0x2a
     d4a:	20 e0       	ldi	r18, 0x00	; 0
     d4c:	30 e0       	ldi	r19, 0x00	; 0
     d4e:	4a ef       	ldi	r20, 0xFA	; 250
     d50:	54 e4       	ldi	r21, 0x44	; 68
     d52:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     d56:	dc 01       	movw	r26, r24
     d58:	cb 01       	movw	r24, r22
     d5a:	8b a3       	std	Y+35, r24	; 0x23
     d5c:	9c a3       	std	Y+36, r25	; 0x24
     d5e:	ad a3       	std	Y+37, r26	; 0x25
     d60:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     d62:	6b a1       	ldd	r22, Y+35	; 0x23
     d64:	7c a1       	ldd	r23, Y+36	; 0x24
     d66:	8d a1       	ldd	r24, Y+37	; 0x25
     d68:	9e a1       	ldd	r25, Y+38	; 0x26
     d6a:	20 e0       	ldi	r18, 0x00	; 0
     d6c:	30 e0       	ldi	r19, 0x00	; 0
     d6e:	40 e8       	ldi	r20, 0x80	; 128
     d70:	5f e3       	ldi	r21, 0x3F	; 63
     d72:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     d76:	88 23       	and	r24, r24
     d78:	2c f4       	brge	.+10     	; 0xd84 <LCD_command+0x168>
		__ticks = 1;
     d7a:	81 e0       	ldi	r24, 0x01	; 1
     d7c:	90 e0       	ldi	r25, 0x00	; 0
     d7e:	9a a3       	std	Y+34, r25	; 0x22
     d80:	89 a3       	std	Y+33, r24	; 0x21
     d82:	3f c0       	rjmp	.+126    	; 0xe02 <LCD_command+0x1e6>
	else if (__tmp > 65535)
     d84:	6b a1       	ldd	r22, Y+35	; 0x23
     d86:	7c a1       	ldd	r23, Y+36	; 0x24
     d88:	8d a1       	ldd	r24, Y+37	; 0x25
     d8a:	9e a1       	ldd	r25, Y+38	; 0x26
     d8c:	20 e0       	ldi	r18, 0x00	; 0
     d8e:	3f ef       	ldi	r19, 0xFF	; 255
     d90:	4f e7       	ldi	r20, 0x7F	; 127
     d92:	57 e4       	ldi	r21, 0x47	; 71
     d94:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     d98:	18 16       	cp	r1, r24
     d9a:	4c f5       	brge	.+82     	; 0xdee <LCD_command+0x1d2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     d9c:	6f a1       	ldd	r22, Y+39	; 0x27
     d9e:	78 a5       	ldd	r23, Y+40	; 0x28
     da0:	89 a5       	ldd	r24, Y+41	; 0x29
     da2:	9a a5       	ldd	r25, Y+42	; 0x2a
     da4:	20 e0       	ldi	r18, 0x00	; 0
     da6:	30 e0       	ldi	r19, 0x00	; 0
     da8:	40 e2       	ldi	r20, 0x20	; 32
     daa:	51 e4       	ldi	r21, 0x41	; 65
     dac:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     db0:	dc 01       	movw	r26, r24
     db2:	cb 01       	movw	r24, r22
     db4:	bc 01       	movw	r22, r24
     db6:	cd 01       	movw	r24, r26
     db8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     dbc:	dc 01       	movw	r26, r24
     dbe:	cb 01       	movw	r24, r22
     dc0:	9a a3       	std	Y+34, r25	; 0x22
     dc2:	89 a3       	std	Y+33, r24	; 0x21
     dc4:	0f c0       	rjmp	.+30     	; 0xde4 <LCD_command+0x1c8>
     dc6:	88 ec       	ldi	r24, 0xC8	; 200
     dc8:	90 e0       	ldi	r25, 0x00	; 0
     dca:	98 a3       	std	Y+32, r25	; 0x20
     dcc:	8f 8f       	std	Y+31, r24	; 0x1f
     dce:	8f 8d       	ldd	r24, Y+31	; 0x1f
     dd0:	98 a1       	ldd	r25, Y+32	; 0x20
     dd2:	01 97       	sbiw	r24, 0x01	; 1
     dd4:	f1 f7       	brne	.-4      	; 0xdd2 <LCD_command+0x1b6>
     dd6:	98 a3       	std	Y+32, r25	; 0x20
     dd8:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     dda:	89 a1       	ldd	r24, Y+33	; 0x21
     ddc:	9a a1       	ldd	r25, Y+34	; 0x22
     dde:	01 97       	sbiw	r24, 0x01	; 1
     de0:	9a a3       	std	Y+34, r25	; 0x22
     de2:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     de4:	89 a1       	ldd	r24, Y+33	; 0x21
     de6:	9a a1       	ldd	r25, Y+34	; 0x22
     de8:	00 97       	sbiw	r24, 0x00	; 0
     dea:	69 f7       	brne	.-38     	; 0xdc6 <LCD_command+0x1aa>
     dec:	14 c0       	rjmp	.+40     	; 0xe16 <LCD_command+0x1fa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     dee:	6b a1       	ldd	r22, Y+35	; 0x23
     df0:	7c a1       	ldd	r23, Y+36	; 0x24
     df2:	8d a1       	ldd	r24, Y+37	; 0x25
     df4:	9e a1       	ldd	r25, Y+38	; 0x26
     df6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     dfa:	dc 01       	movw	r26, r24
     dfc:	cb 01       	movw	r24, r22
     dfe:	9a a3       	std	Y+34, r25	; 0x22
     e00:	89 a3       	std	Y+33, r24	; 0x21
     e02:	89 a1       	ldd	r24, Y+33	; 0x21
     e04:	9a a1       	ldd	r25, Y+34	; 0x22
     e06:	9e 8f       	std	Y+30, r25	; 0x1e
     e08:	8d 8f       	std	Y+29, r24	; 0x1d
     e0a:	8d 8d       	ldd	r24, Y+29	; 0x1d
     e0c:	9e 8d       	ldd	r25, Y+30	; 0x1e
     e0e:	01 97       	sbiw	r24, 0x01	; 1
     e10:	f1 f7       	brne	.-4      	; 0xe0e <LCD_command+0x1f2>
     e12:	9e 8f       	std	Y+30, r25	; 0x1e
     e14:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1);
	LCD_DATA_PORT = command;
     e16:	e5 e3       	ldi	r30, 0x35	; 53
     e18:	f0 e0       	ldi	r31, 0x00	; 0
     e1a:	89 ad       	ldd	r24, Y+57	; 0x39
     e1c:	80 83       	st	Z, r24
     e1e:	80 e0       	ldi	r24, 0x00	; 0
     e20:	90 e0       	ldi	r25, 0x00	; 0
     e22:	a0 e8       	ldi	r26, 0x80	; 128
     e24:	bf e3       	ldi	r27, 0x3F	; 63
     e26:	89 8f       	std	Y+25, r24	; 0x19
     e28:	9a 8f       	std	Y+26, r25	; 0x1a
     e2a:	ab 8f       	std	Y+27, r26	; 0x1b
     e2c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     e2e:	69 8d       	ldd	r22, Y+25	; 0x19
     e30:	7a 8d       	ldd	r23, Y+26	; 0x1a
     e32:	8b 8d       	ldd	r24, Y+27	; 0x1b
     e34:	9c 8d       	ldd	r25, Y+28	; 0x1c
     e36:	20 e0       	ldi	r18, 0x00	; 0
     e38:	30 e0       	ldi	r19, 0x00	; 0
     e3a:	4a ef       	ldi	r20, 0xFA	; 250
     e3c:	54 e4       	ldi	r21, 0x44	; 68
     e3e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     e42:	dc 01       	movw	r26, r24
     e44:	cb 01       	movw	r24, r22
     e46:	8d 8b       	std	Y+21, r24	; 0x15
     e48:	9e 8b       	std	Y+22, r25	; 0x16
     e4a:	af 8b       	std	Y+23, r26	; 0x17
     e4c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     e4e:	6d 89       	ldd	r22, Y+21	; 0x15
     e50:	7e 89       	ldd	r23, Y+22	; 0x16
     e52:	8f 89       	ldd	r24, Y+23	; 0x17
     e54:	98 8d       	ldd	r25, Y+24	; 0x18
     e56:	20 e0       	ldi	r18, 0x00	; 0
     e58:	30 e0       	ldi	r19, 0x00	; 0
     e5a:	40 e8       	ldi	r20, 0x80	; 128
     e5c:	5f e3       	ldi	r21, 0x3F	; 63
     e5e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     e62:	88 23       	and	r24, r24
     e64:	2c f4       	brge	.+10     	; 0xe70 <LCD_command+0x254>
		__ticks = 1;
     e66:	81 e0       	ldi	r24, 0x01	; 1
     e68:	90 e0       	ldi	r25, 0x00	; 0
     e6a:	9c 8b       	std	Y+20, r25	; 0x14
     e6c:	8b 8b       	std	Y+19, r24	; 0x13
     e6e:	3f c0       	rjmp	.+126    	; 0xeee <LCD_command+0x2d2>
	else if (__tmp > 65535)
     e70:	6d 89       	ldd	r22, Y+21	; 0x15
     e72:	7e 89       	ldd	r23, Y+22	; 0x16
     e74:	8f 89       	ldd	r24, Y+23	; 0x17
     e76:	98 8d       	ldd	r25, Y+24	; 0x18
     e78:	20 e0       	ldi	r18, 0x00	; 0
     e7a:	3f ef       	ldi	r19, 0xFF	; 255
     e7c:	4f e7       	ldi	r20, 0x7F	; 127
     e7e:	57 e4       	ldi	r21, 0x47	; 71
     e80:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     e84:	18 16       	cp	r1, r24
     e86:	4c f5       	brge	.+82     	; 0xeda <LCD_command+0x2be>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     e88:	69 8d       	ldd	r22, Y+25	; 0x19
     e8a:	7a 8d       	ldd	r23, Y+26	; 0x1a
     e8c:	8b 8d       	ldd	r24, Y+27	; 0x1b
     e8e:	9c 8d       	ldd	r25, Y+28	; 0x1c
     e90:	20 e0       	ldi	r18, 0x00	; 0
     e92:	30 e0       	ldi	r19, 0x00	; 0
     e94:	40 e2       	ldi	r20, 0x20	; 32
     e96:	51 e4       	ldi	r21, 0x41	; 65
     e98:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     e9c:	dc 01       	movw	r26, r24
     e9e:	cb 01       	movw	r24, r22
     ea0:	bc 01       	movw	r22, r24
     ea2:	cd 01       	movw	r24, r26
     ea4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     ea8:	dc 01       	movw	r26, r24
     eaa:	cb 01       	movw	r24, r22
     eac:	9c 8b       	std	Y+20, r25	; 0x14
     eae:	8b 8b       	std	Y+19, r24	; 0x13
     eb0:	0f c0       	rjmp	.+30     	; 0xed0 <LCD_command+0x2b4>
     eb2:	88 ec       	ldi	r24, 0xC8	; 200
     eb4:	90 e0       	ldi	r25, 0x00	; 0
     eb6:	9a 8b       	std	Y+18, r25	; 0x12
     eb8:	89 8b       	std	Y+17, r24	; 0x11
     eba:	89 89       	ldd	r24, Y+17	; 0x11
     ebc:	9a 89       	ldd	r25, Y+18	; 0x12
     ebe:	01 97       	sbiw	r24, 0x01	; 1
     ec0:	f1 f7       	brne	.-4      	; 0xebe <LCD_command+0x2a2>
     ec2:	9a 8b       	std	Y+18, r25	; 0x12
     ec4:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     ec6:	8b 89       	ldd	r24, Y+19	; 0x13
     ec8:	9c 89       	ldd	r25, Y+20	; 0x14
     eca:	01 97       	sbiw	r24, 0x01	; 1
     ecc:	9c 8b       	std	Y+20, r25	; 0x14
     ece:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     ed0:	8b 89       	ldd	r24, Y+19	; 0x13
     ed2:	9c 89       	ldd	r25, Y+20	; 0x14
     ed4:	00 97       	sbiw	r24, 0x00	; 0
     ed6:	69 f7       	brne	.-38     	; 0xeb2 <LCD_command+0x296>
     ed8:	14 c0       	rjmp	.+40     	; 0xf02 <LCD_command+0x2e6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     eda:	6d 89       	ldd	r22, Y+21	; 0x15
     edc:	7e 89       	ldd	r23, Y+22	; 0x16
     ede:	8f 89       	ldd	r24, Y+23	; 0x17
     ee0:	98 8d       	ldd	r25, Y+24	; 0x18
     ee2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     ee6:	dc 01       	movw	r26, r24
     ee8:	cb 01       	movw	r24, r22
     eea:	9c 8b       	std	Y+20, r25	; 0x14
     eec:	8b 8b       	std	Y+19, r24	; 0x13
     eee:	8b 89       	ldd	r24, Y+19	; 0x13
     ef0:	9c 89       	ldd	r25, Y+20	; 0x14
     ef2:	98 8b       	std	Y+16, r25	; 0x10
     ef4:	8f 87       	std	Y+15, r24	; 0x0f
     ef6:	8f 85       	ldd	r24, Y+15	; 0x0f
     ef8:	98 89       	ldd	r25, Y+16	; 0x10
     efa:	01 97       	sbiw	r24, 0x01	; 1
     efc:	f1 f7       	brne	.-4      	; 0xefa <LCD_command+0x2de>
     efe:	98 8b       	std	Y+16, r25	; 0x10
     f00:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	LCD_CTRL_PORT &=~(1<<E);
     f02:	a2 e3       	ldi	r26, 0x32	; 50
     f04:	b0 e0       	ldi	r27, 0x00	; 0
     f06:	e2 e3       	ldi	r30, 0x32	; 50
     f08:	f0 e0       	ldi	r31, 0x00	; 0
     f0a:	80 81       	ld	r24, Z
     f0c:	8b 7f       	andi	r24, 0xFB	; 251
     f0e:	8c 93       	st	X, r24
     f10:	80 e0       	ldi	r24, 0x00	; 0
     f12:	90 e0       	ldi	r25, 0x00	; 0
     f14:	a0 e8       	ldi	r26, 0x80	; 128
     f16:	bf e3       	ldi	r27, 0x3F	; 63
     f18:	8b 87       	std	Y+11, r24	; 0x0b
     f1a:	9c 87       	std	Y+12, r25	; 0x0c
     f1c:	ad 87       	std	Y+13, r26	; 0x0d
     f1e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     f20:	6b 85       	ldd	r22, Y+11	; 0x0b
     f22:	7c 85       	ldd	r23, Y+12	; 0x0c
     f24:	8d 85       	ldd	r24, Y+13	; 0x0d
     f26:	9e 85       	ldd	r25, Y+14	; 0x0e
     f28:	20 e0       	ldi	r18, 0x00	; 0
     f2a:	30 e0       	ldi	r19, 0x00	; 0
     f2c:	4a ef       	ldi	r20, 0xFA	; 250
     f2e:	54 e4       	ldi	r21, 0x44	; 68
     f30:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     f34:	dc 01       	movw	r26, r24
     f36:	cb 01       	movw	r24, r22
     f38:	8f 83       	std	Y+7, r24	; 0x07
     f3a:	98 87       	std	Y+8, r25	; 0x08
     f3c:	a9 87       	std	Y+9, r26	; 0x09
     f3e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     f40:	6f 81       	ldd	r22, Y+7	; 0x07
     f42:	78 85       	ldd	r23, Y+8	; 0x08
     f44:	89 85       	ldd	r24, Y+9	; 0x09
     f46:	9a 85       	ldd	r25, Y+10	; 0x0a
     f48:	20 e0       	ldi	r18, 0x00	; 0
     f4a:	30 e0       	ldi	r19, 0x00	; 0
     f4c:	40 e8       	ldi	r20, 0x80	; 128
     f4e:	5f e3       	ldi	r21, 0x3F	; 63
     f50:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     f54:	88 23       	and	r24, r24
     f56:	2c f4       	brge	.+10     	; 0xf62 <LCD_command+0x346>
		__ticks = 1;
     f58:	81 e0       	ldi	r24, 0x01	; 1
     f5a:	90 e0       	ldi	r25, 0x00	; 0
     f5c:	9e 83       	std	Y+6, r25	; 0x06
     f5e:	8d 83       	std	Y+5, r24	; 0x05
     f60:	3f c0       	rjmp	.+126    	; 0xfe0 <LCD_command+0x3c4>
	else if (__tmp > 65535)
     f62:	6f 81       	ldd	r22, Y+7	; 0x07
     f64:	78 85       	ldd	r23, Y+8	; 0x08
     f66:	89 85       	ldd	r24, Y+9	; 0x09
     f68:	9a 85       	ldd	r25, Y+10	; 0x0a
     f6a:	20 e0       	ldi	r18, 0x00	; 0
     f6c:	3f ef       	ldi	r19, 0xFF	; 255
     f6e:	4f e7       	ldi	r20, 0x7F	; 127
     f70:	57 e4       	ldi	r21, 0x47	; 71
     f72:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     f76:	18 16       	cp	r1, r24
     f78:	4c f5       	brge	.+82     	; 0xfcc <LCD_command+0x3b0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     f7a:	6b 85       	ldd	r22, Y+11	; 0x0b
     f7c:	7c 85       	ldd	r23, Y+12	; 0x0c
     f7e:	8d 85       	ldd	r24, Y+13	; 0x0d
     f80:	9e 85       	ldd	r25, Y+14	; 0x0e
     f82:	20 e0       	ldi	r18, 0x00	; 0
     f84:	30 e0       	ldi	r19, 0x00	; 0
     f86:	40 e2       	ldi	r20, 0x20	; 32
     f88:	51 e4       	ldi	r21, 0x41	; 65
     f8a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     f8e:	dc 01       	movw	r26, r24
     f90:	cb 01       	movw	r24, r22
     f92:	bc 01       	movw	r22, r24
     f94:	cd 01       	movw	r24, r26
     f96:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     f9a:	dc 01       	movw	r26, r24
     f9c:	cb 01       	movw	r24, r22
     f9e:	9e 83       	std	Y+6, r25	; 0x06
     fa0:	8d 83       	std	Y+5, r24	; 0x05
     fa2:	0f c0       	rjmp	.+30     	; 0xfc2 <LCD_command+0x3a6>
     fa4:	88 ec       	ldi	r24, 0xC8	; 200
     fa6:	90 e0       	ldi	r25, 0x00	; 0
     fa8:	9c 83       	std	Y+4, r25	; 0x04
     faa:	8b 83       	std	Y+3, r24	; 0x03
     fac:	8b 81       	ldd	r24, Y+3	; 0x03
     fae:	9c 81       	ldd	r25, Y+4	; 0x04
     fb0:	01 97       	sbiw	r24, 0x01	; 1
     fb2:	f1 f7       	brne	.-4      	; 0xfb0 <LCD_command+0x394>
     fb4:	9c 83       	std	Y+4, r25	; 0x04
     fb6:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     fb8:	8d 81       	ldd	r24, Y+5	; 0x05
     fba:	9e 81       	ldd	r25, Y+6	; 0x06
     fbc:	01 97       	sbiw	r24, 0x01	; 1
     fbe:	9e 83       	std	Y+6, r25	; 0x06
     fc0:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     fc2:	8d 81       	ldd	r24, Y+5	; 0x05
     fc4:	9e 81       	ldd	r25, Y+6	; 0x06
     fc6:	00 97       	sbiw	r24, 0x00	; 0
     fc8:	69 f7       	brne	.-38     	; 0xfa4 <LCD_command+0x388>
     fca:	14 c0       	rjmp	.+40     	; 0xff4 <LCD_command+0x3d8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     fcc:	6f 81       	ldd	r22, Y+7	; 0x07
     fce:	78 85       	ldd	r23, Y+8	; 0x08
     fd0:	89 85       	ldd	r24, Y+9	; 0x09
     fd2:	9a 85       	ldd	r25, Y+10	; 0x0a
     fd4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     fd8:	dc 01       	movw	r26, r24
     fda:	cb 01       	movw	r24, r22
     fdc:	9e 83       	std	Y+6, r25	; 0x06
     fde:	8d 83       	std	Y+5, r24	; 0x05
     fe0:	8d 81       	ldd	r24, Y+5	; 0x05
     fe2:	9e 81       	ldd	r25, Y+6	; 0x06
     fe4:	9a 83       	std	Y+2, r25	; 0x02
     fe6:	89 83       	std	Y+1, r24	; 0x01
     fe8:	89 81       	ldd	r24, Y+1	; 0x01
     fea:	9a 81       	ldd	r25, Y+2	; 0x02
     fec:	01 97       	sbiw	r24, 0x01	; 1
     fee:	f1 f7       	brne	.-4      	; 0xfec <LCD_command+0x3d0>
     ff0:	9a 83       	std	Y+2, r25	; 0x02
     ff2:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
}
     ff4:	e9 96       	adiw	r28, 0x39	; 57
     ff6:	0f b6       	in	r0, 0x3f	; 63
     ff8:	f8 94       	cli
     ffa:	de bf       	out	0x3e, r29	; 62
     ffc:	0f be       	out	0x3f, r0	; 63
     ffe:	cd bf       	out	0x3d, r28	; 61
    1000:	cf 91       	pop	r28
    1002:	df 91       	pop	r29
    1004:	08 95       	ret

00001006 <LCD_Data>:
void LCD_Data(unsigned char data){
    1006:	df 93       	push	r29
    1008:	cf 93       	push	r28
    100a:	cd b7       	in	r28, 0x3d	; 61
    100c:	de b7       	in	r29, 0x3e	; 62
    100e:	e9 97       	sbiw	r28, 0x39	; 57
    1010:	0f b6       	in	r0, 0x3f	; 63
    1012:	f8 94       	cli
    1014:	de bf       	out	0x3e, r29	; 62
    1016:	0f be       	out	0x3f, r0	; 63
    1018:	cd bf       	out	0x3d, r28	; 61
    101a:	89 af       	std	Y+57, r24	; 0x39
	LCD_CTRL_PORT |=(1<<RS);
    101c:	a2 e3       	ldi	r26, 0x32	; 50
    101e:	b0 e0       	ldi	r27, 0x00	; 0
    1020:	e2 e3       	ldi	r30, 0x32	; 50
    1022:	f0 e0       	ldi	r31, 0x00	; 0
    1024:	80 81       	ld	r24, Z
    1026:	81 60       	ori	r24, 0x01	; 1
    1028:	8c 93       	st	X, r24
	LCD_CTRL_PORT &=~(1<<RW);
    102a:	a2 e3       	ldi	r26, 0x32	; 50
    102c:	b0 e0       	ldi	r27, 0x00	; 0
    102e:	e2 e3       	ldi	r30, 0x32	; 50
    1030:	f0 e0       	ldi	r31, 0x00	; 0
    1032:	80 81       	ld	r24, Z
    1034:	8d 7f       	andi	r24, 0xFD	; 253
    1036:	8c 93       	st	X, r24
    1038:	80 e0       	ldi	r24, 0x00	; 0
    103a:	90 e0       	ldi	r25, 0x00	; 0
    103c:	a0 e8       	ldi	r26, 0x80	; 128
    103e:	bf e3       	ldi	r27, 0x3F	; 63
    1040:	8d ab       	std	Y+53, r24	; 0x35
    1042:	9e ab       	std	Y+54, r25	; 0x36
    1044:	af ab       	std	Y+55, r26	; 0x37
    1046:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1048:	6d a9       	ldd	r22, Y+53	; 0x35
    104a:	7e a9       	ldd	r23, Y+54	; 0x36
    104c:	8f a9       	ldd	r24, Y+55	; 0x37
    104e:	98 ad       	ldd	r25, Y+56	; 0x38
    1050:	20 e0       	ldi	r18, 0x00	; 0
    1052:	30 e0       	ldi	r19, 0x00	; 0
    1054:	4a ef       	ldi	r20, 0xFA	; 250
    1056:	54 e4       	ldi	r21, 0x44	; 68
    1058:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    105c:	dc 01       	movw	r26, r24
    105e:	cb 01       	movw	r24, r22
    1060:	89 ab       	std	Y+49, r24	; 0x31
    1062:	9a ab       	std	Y+50, r25	; 0x32
    1064:	ab ab       	std	Y+51, r26	; 0x33
    1066:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1068:	69 a9       	ldd	r22, Y+49	; 0x31
    106a:	7a a9       	ldd	r23, Y+50	; 0x32
    106c:	8b a9       	ldd	r24, Y+51	; 0x33
    106e:	9c a9       	ldd	r25, Y+52	; 0x34
    1070:	20 e0       	ldi	r18, 0x00	; 0
    1072:	30 e0       	ldi	r19, 0x00	; 0
    1074:	40 e8       	ldi	r20, 0x80	; 128
    1076:	5f e3       	ldi	r21, 0x3F	; 63
    1078:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    107c:	88 23       	and	r24, r24
    107e:	2c f4       	brge	.+10     	; 0x108a <LCD_Data+0x84>
		__ticks = 1;
    1080:	81 e0       	ldi	r24, 0x01	; 1
    1082:	90 e0       	ldi	r25, 0x00	; 0
    1084:	98 ab       	std	Y+48, r25	; 0x30
    1086:	8f a7       	std	Y+47, r24	; 0x2f
    1088:	3f c0       	rjmp	.+126    	; 0x1108 <LCD_Data+0x102>
	else if (__tmp > 65535)
    108a:	69 a9       	ldd	r22, Y+49	; 0x31
    108c:	7a a9       	ldd	r23, Y+50	; 0x32
    108e:	8b a9       	ldd	r24, Y+51	; 0x33
    1090:	9c a9       	ldd	r25, Y+52	; 0x34
    1092:	20 e0       	ldi	r18, 0x00	; 0
    1094:	3f ef       	ldi	r19, 0xFF	; 255
    1096:	4f e7       	ldi	r20, 0x7F	; 127
    1098:	57 e4       	ldi	r21, 0x47	; 71
    109a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    109e:	18 16       	cp	r1, r24
    10a0:	4c f5       	brge	.+82     	; 0x10f4 <LCD_Data+0xee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    10a2:	6d a9       	ldd	r22, Y+53	; 0x35
    10a4:	7e a9       	ldd	r23, Y+54	; 0x36
    10a6:	8f a9       	ldd	r24, Y+55	; 0x37
    10a8:	98 ad       	ldd	r25, Y+56	; 0x38
    10aa:	20 e0       	ldi	r18, 0x00	; 0
    10ac:	30 e0       	ldi	r19, 0x00	; 0
    10ae:	40 e2       	ldi	r20, 0x20	; 32
    10b0:	51 e4       	ldi	r21, 0x41	; 65
    10b2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    10b6:	dc 01       	movw	r26, r24
    10b8:	cb 01       	movw	r24, r22
    10ba:	bc 01       	movw	r22, r24
    10bc:	cd 01       	movw	r24, r26
    10be:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    10c2:	dc 01       	movw	r26, r24
    10c4:	cb 01       	movw	r24, r22
    10c6:	98 ab       	std	Y+48, r25	; 0x30
    10c8:	8f a7       	std	Y+47, r24	; 0x2f
    10ca:	0f c0       	rjmp	.+30     	; 0x10ea <LCD_Data+0xe4>
    10cc:	88 ec       	ldi	r24, 0xC8	; 200
    10ce:	90 e0       	ldi	r25, 0x00	; 0
    10d0:	9e a7       	std	Y+46, r25	; 0x2e
    10d2:	8d a7       	std	Y+45, r24	; 0x2d
    10d4:	8d a5       	ldd	r24, Y+45	; 0x2d
    10d6:	9e a5       	ldd	r25, Y+46	; 0x2e
    10d8:	01 97       	sbiw	r24, 0x01	; 1
    10da:	f1 f7       	brne	.-4      	; 0x10d8 <LCD_Data+0xd2>
    10dc:	9e a7       	std	Y+46, r25	; 0x2e
    10de:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    10e0:	8f a5       	ldd	r24, Y+47	; 0x2f
    10e2:	98 a9       	ldd	r25, Y+48	; 0x30
    10e4:	01 97       	sbiw	r24, 0x01	; 1
    10e6:	98 ab       	std	Y+48, r25	; 0x30
    10e8:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    10ea:	8f a5       	ldd	r24, Y+47	; 0x2f
    10ec:	98 a9       	ldd	r25, Y+48	; 0x30
    10ee:	00 97       	sbiw	r24, 0x00	; 0
    10f0:	69 f7       	brne	.-38     	; 0x10cc <LCD_Data+0xc6>
    10f2:	14 c0       	rjmp	.+40     	; 0x111c <LCD_Data+0x116>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    10f4:	69 a9       	ldd	r22, Y+49	; 0x31
    10f6:	7a a9       	ldd	r23, Y+50	; 0x32
    10f8:	8b a9       	ldd	r24, Y+51	; 0x33
    10fa:	9c a9       	ldd	r25, Y+52	; 0x34
    10fc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1100:	dc 01       	movw	r26, r24
    1102:	cb 01       	movw	r24, r22
    1104:	98 ab       	std	Y+48, r25	; 0x30
    1106:	8f a7       	std	Y+47, r24	; 0x2f
    1108:	8f a5       	ldd	r24, Y+47	; 0x2f
    110a:	98 a9       	ldd	r25, Y+48	; 0x30
    110c:	9c a7       	std	Y+44, r25	; 0x2c
    110e:	8b a7       	std	Y+43, r24	; 0x2b
    1110:	8b a5       	ldd	r24, Y+43	; 0x2b
    1112:	9c a5       	ldd	r25, Y+44	; 0x2c
    1114:	01 97       	sbiw	r24, 0x01	; 1
    1116:	f1 f7       	brne	.-4      	; 0x1114 <LCD_Data+0x10e>
    1118:	9c a7       	std	Y+44, r25	; 0x2c
    111a:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(1);
	LCD_CTRL_PORT |=(1<<E);
    111c:	a2 e3       	ldi	r26, 0x32	; 50
    111e:	b0 e0       	ldi	r27, 0x00	; 0
    1120:	e2 e3       	ldi	r30, 0x32	; 50
    1122:	f0 e0       	ldi	r31, 0x00	; 0
    1124:	80 81       	ld	r24, Z
    1126:	84 60       	ori	r24, 0x04	; 4
    1128:	8c 93       	st	X, r24
    112a:	80 e0       	ldi	r24, 0x00	; 0
    112c:	90 e0       	ldi	r25, 0x00	; 0
    112e:	a0 e8       	ldi	r26, 0x80	; 128
    1130:	bf e3       	ldi	r27, 0x3F	; 63
    1132:	8f a3       	std	Y+39, r24	; 0x27
    1134:	98 a7       	std	Y+40, r25	; 0x28
    1136:	a9 a7       	std	Y+41, r26	; 0x29
    1138:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    113a:	6f a1       	ldd	r22, Y+39	; 0x27
    113c:	78 a5       	ldd	r23, Y+40	; 0x28
    113e:	89 a5       	ldd	r24, Y+41	; 0x29
    1140:	9a a5       	ldd	r25, Y+42	; 0x2a
    1142:	20 e0       	ldi	r18, 0x00	; 0
    1144:	30 e0       	ldi	r19, 0x00	; 0
    1146:	4a ef       	ldi	r20, 0xFA	; 250
    1148:	54 e4       	ldi	r21, 0x44	; 68
    114a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    114e:	dc 01       	movw	r26, r24
    1150:	cb 01       	movw	r24, r22
    1152:	8b a3       	std	Y+35, r24	; 0x23
    1154:	9c a3       	std	Y+36, r25	; 0x24
    1156:	ad a3       	std	Y+37, r26	; 0x25
    1158:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    115a:	6b a1       	ldd	r22, Y+35	; 0x23
    115c:	7c a1       	ldd	r23, Y+36	; 0x24
    115e:	8d a1       	ldd	r24, Y+37	; 0x25
    1160:	9e a1       	ldd	r25, Y+38	; 0x26
    1162:	20 e0       	ldi	r18, 0x00	; 0
    1164:	30 e0       	ldi	r19, 0x00	; 0
    1166:	40 e8       	ldi	r20, 0x80	; 128
    1168:	5f e3       	ldi	r21, 0x3F	; 63
    116a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    116e:	88 23       	and	r24, r24
    1170:	2c f4       	brge	.+10     	; 0x117c <LCD_Data+0x176>
		__ticks = 1;
    1172:	81 e0       	ldi	r24, 0x01	; 1
    1174:	90 e0       	ldi	r25, 0x00	; 0
    1176:	9a a3       	std	Y+34, r25	; 0x22
    1178:	89 a3       	std	Y+33, r24	; 0x21
    117a:	3f c0       	rjmp	.+126    	; 0x11fa <LCD_Data+0x1f4>
	else if (__tmp > 65535)
    117c:	6b a1       	ldd	r22, Y+35	; 0x23
    117e:	7c a1       	ldd	r23, Y+36	; 0x24
    1180:	8d a1       	ldd	r24, Y+37	; 0x25
    1182:	9e a1       	ldd	r25, Y+38	; 0x26
    1184:	20 e0       	ldi	r18, 0x00	; 0
    1186:	3f ef       	ldi	r19, 0xFF	; 255
    1188:	4f e7       	ldi	r20, 0x7F	; 127
    118a:	57 e4       	ldi	r21, 0x47	; 71
    118c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1190:	18 16       	cp	r1, r24
    1192:	4c f5       	brge	.+82     	; 0x11e6 <LCD_Data+0x1e0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1194:	6f a1       	ldd	r22, Y+39	; 0x27
    1196:	78 a5       	ldd	r23, Y+40	; 0x28
    1198:	89 a5       	ldd	r24, Y+41	; 0x29
    119a:	9a a5       	ldd	r25, Y+42	; 0x2a
    119c:	20 e0       	ldi	r18, 0x00	; 0
    119e:	30 e0       	ldi	r19, 0x00	; 0
    11a0:	40 e2       	ldi	r20, 0x20	; 32
    11a2:	51 e4       	ldi	r21, 0x41	; 65
    11a4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    11a8:	dc 01       	movw	r26, r24
    11aa:	cb 01       	movw	r24, r22
    11ac:	bc 01       	movw	r22, r24
    11ae:	cd 01       	movw	r24, r26
    11b0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    11b4:	dc 01       	movw	r26, r24
    11b6:	cb 01       	movw	r24, r22
    11b8:	9a a3       	std	Y+34, r25	; 0x22
    11ba:	89 a3       	std	Y+33, r24	; 0x21
    11bc:	0f c0       	rjmp	.+30     	; 0x11dc <LCD_Data+0x1d6>
    11be:	88 ec       	ldi	r24, 0xC8	; 200
    11c0:	90 e0       	ldi	r25, 0x00	; 0
    11c2:	98 a3       	std	Y+32, r25	; 0x20
    11c4:	8f 8f       	std	Y+31, r24	; 0x1f
    11c6:	8f 8d       	ldd	r24, Y+31	; 0x1f
    11c8:	98 a1       	ldd	r25, Y+32	; 0x20
    11ca:	01 97       	sbiw	r24, 0x01	; 1
    11cc:	f1 f7       	brne	.-4      	; 0x11ca <LCD_Data+0x1c4>
    11ce:	98 a3       	std	Y+32, r25	; 0x20
    11d0:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    11d2:	89 a1       	ldd	r24, Y+33	; 0x21
    11d4:	9a a1       	ldd	r25, Y+34	; 0x22
    11d6:	01 97       	sbiw	r24, 0x01	; 1
    11d8:	9a a3       	std	Y+34, r25	; 0x22
    11da:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    11dc:	89 a1       	ldd	r24, Y+33	; 0x21
    11de:	9a a1       	ldd	r25, Y+34	; 0x22
    11e0:	00 97       	sbiw	r24, 0x00	; 0
    11e2:	69 f7       	brne	.-38     	; 0x11be <LCD_Data+0x1b8>
    11e4:	14 c0       	rjmp	.+40     	; 0x120e <LCD_Data+0x208>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    11e6:	6b a1       	ldd	r22, Y+35	; 0x23
    11e8:	7c a1       	ldd	r23, Y+36	; 0x24
    11ea:	8d a1       	ldd	r24, Y+37	; 0x25
    11ec:	9e a1       	ldd	r25, Y+38	; 0x26
    11ee:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    11f2:	dc 01       	movw	r26, r24
    11f4:	cb 01       	movw	r24, r22
    11f6:	9a a3       	std	Y+34, r25	; 0x22
    11f8:	89 a3       	std	Y+33, r24	; 0x21
    11fa:	89 a1       	ldd	r24, Y+33	; 0x21
    11fc:	9a a1       	ldd	r25, Y+34	; 0x22
    11fe:	9e 8f       	std	Y+30, r25	; 0x1e
    1200:	8d 8f       	std	Y+29, r24	; 0x1d
    1202:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1204:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1206:	01 97       	sbiw	r24, 0x01	; 1
    1208:	f1 f7       	brne	.-4      	; 0x1206 <LCD_Data+0x200>
    120a:	9e 8f       	std	Y+30, r25	; 0x1e
    120c:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1);
	LCD_DATA_PORT = data;
    120e:	e5 e3       	ldi	r30, 0x35	; 53
    1210:	f0 e0       	ldi	r31, 0x00	; 0
    1212:	89 ad       	ldd	r24, Y+57	; 0x39
    1214:	80 83       	st	Z, r24
    1216:	80 e0       	ldi	r24, 0x00	; 0
    1218:	90 e0       	ldi	r25, 0x00	; 0
    121a:	a0 e8       	ldi	r26, 0x80	; 128
    121c:	bf e3       	ldi	r27, 0x3F	; 63
    121e:	89 8f       	std	Y+25, r24	; 0x19
    1220:	9a 8f       	std	Y+26, r25	; 0x1a
    1222:	ab 8f       	std	Y+27, r26	; 0x1b
    1224:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1226:	69 8d       	ldd	r22, Y+25	; 0x19
    1228:	7a 8d       	ldd	r23, Y+26	; 0x1a
    122a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    122c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    122e:	20 e0       	ldi	r18, 0x00	; 0
    1230:	30 e0       	ldi	r19, 0x00	; 0
    1232:	4a ef       	ldi	r20, 0xFA	; 250
    1234:	54 e4       	ldi	r21, 0x44	; 68
    1236:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    123a:	dc 01       	movw	r26, r24
    123c:	cb 01       	movw	r24, r22
    123e:	8d 8b       	std	Y+21, r24	; 0x15
    1240:	9e 8b       	std	Y+22, r25	; 0x16
    1242:	af 8b       	std	Y+23, r26	; 0x17
    1244:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1246:	6d 89       	ldd	r22, Y+21	; 0x15
    1248:	7e 89       	ldd	r23, Y+22	; 0x16
    124a:	8f 89       	ldd	r24, Y+23	; 0x17
    124c:	98 8d       	ldd	r25, Y+24	; 0x18
    124e:	20 e0       	ldi	r18, 0x00	; 0
    1250:	30 e0       	ldi	r19, 0x00	; 0
    1252:	40 e8       	ldi	r20, 0x80	; 128
    1254:	5f e3       	ldi	r21, 0x3F	; 63
    1256:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    125a:	88 23       	and	r24, r24
    125c:	2c f4       	brge	.+10     	; 0x1268 <LCD_Data+0x262>
		__ticks = 1;
    125e:	81 e0       	ldi	r24, 0x01	; 1
    1260:	90 e0       	ldi	r25, 0x00	; 0
    1262:	9c 8b       	std	Y+20, r25	; 0x14
    1264:	8b 8b       	std	Y+19, r24	; 0x13
    1266:	3f c0       	rjmp	.+126    	; 0x12e6 <LCD_Data+0x2e0>
	else if (__tmp > 65535)
    1268:	6d 89       	ldd	r22, Y+21	; 0x15
    126a:	7e 89       	ldd	r23, Y+22	; 0x16
    126c:	8f 89       	ldd	r24, Y+23	; 0x17
    126e:	98 8d       	ldd	r25, Y+24	; 0x18
    1270:	20 e0       	ldi	r18, 0x00	; 0
    1272:	3f ef       	ldi	r19, 0xFF	; 255
    1274:	4f e7       	ldi	r20, 0x7F	; 127
    1276:	57 e4       	ldi	r21, 0x47	; 71
    1278:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    127c:	18 16       	cp	r1, r24
    127e:	4c f5       	brge	.+82     	; 0x12d2 <LCD_Data+0x2cc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1280:	69 8d       	ldd	r22, Y+25	; 0x19
    1282:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1284:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1286:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1288:	20 e0       	ldi	r18, 0x00	; 0
    128a:	30 e0       	ldi	r19, 0x00	; 0
    128c:	40 e2       	ldi	r20, 0x20	; 32
    128e:	51 e4       	ldi	r21, 0x41	; 65
    1290:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1294:	dc 01       	movw	r26, r24
    1296:	cb 01       	movw	r24, r22
    1298:	bc 01       	movw	r22, r24
    129a:	cd 01       	movw	r24, r26
    129c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    12a0:	dc 01       	movw	r26, r24
    12a2:	cb 01       	movw	r24, r22
    12a4:	9c 8b       	std	Y+20, r25	; 0x14
    12a6:	8b 8b       	std	Y+19, r24	; 0x13
    12a8:	0f c0       	rjmp	.+30     	; 0x12c8 <LCD_Data+0x2c2>
    12aa:	88 ec       	ldi	r24, 0xC8	; 200
    12ac:	90 e0       	ldi	r25, 0x00	; 0
    12ae:	9a 8b       	std	Y+18, r25	; 0x12
    12b0:	89 8b       	std	Y+17, r24	; 0x11
    12b2:	89 89       	ldd	r24, Y+17	; 0x11
    12b4:	9a 89       	ldd	r25, Y+18	; 0x12
    12b6:	01 97       	sbiw	r24, 0x01	; 1
    12b8:	f1 f7       	brne	.-4      	; 0x12b6 <LCD_Data+0x2b0>
    12ba:	9a 8b       	std	Y+18, r25	; 0x12
    12bc:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    12be:	8b 89       	ldd	r24, Y+19	; 0x13
    12c0:	9c 89       	ldd	r25, Y+20	; 0x14
    12c2:	01 97       	sbiw	r24, 0x01	; 1
    12c4:	9c 8b       	std	Y+20, r25	; 0x14
    12c6:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    12c8:	8b 89       	ldd	r24, Y+19	; 0x13
    12ca:	9c 89       	ldd	r25, Y+20	; 0x14
    12cc:	00 97       	sbiw	r24, 0x00	; 0
    12ce:	69 f7       	brne	.-38     	; 0x12aa <LCD_Data+0x2a4>
    12d0:	14 c0       	rjmp	.+40     	; 0x12fa <LCD_Data+0x2f4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    12d2:	6d 89       	ldd	r22, Y+21	; 0x15
    12d4:	7e 89       	ldd	r23, Y+22	; 0x16
    12d6:	8f 89       	ldd	r24, Y+23	; 0x17
    12d8:	98 8d       	ldd	r25, Y+24	; 0x18
    12da:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    12de:	dc 01       	movw	r26, r24
    12e0:	cb 01       	movw	r24, r22
    12e2:	9c 8b       	std	Y+20, r25	; 0x14
    12e4:	8b 8b       	std	Y+19, r24	; 0x13
    12e6:	8b 89       	ldd	r24, Y+19	; 0x13
    12e8:	9c 89       	ldd	r25, Y+20	; 0x14
    12ea:	98 8b       	std	Y+16, r25	; 0x10
    12ec:	8f 87       	std	Y+15, r24	; 0x0f
    12ee:	8f 85       	ldd	r24, Y+15	; 0x0f
    12f0:	98 89       	ldd	r25, Y+16	; 0x10
    12f2:	01 97       	sbiw	r24, 0x01	; 1
    12f4:	f1 f7       	brne	.-4      	; 0x12f2 <LCD_Data+0x2ec>
    12f6:	98 8b       	std	Y+16, r25	; 0x10
    12f8:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	LCD_CTRL_PORT &=~(1<<E);
    12fa:	a2 e3       	ldi	r26, 0x32	; 50
    12fc:	b0 e0       	ldi	r27, 0x00	; 0
    12fe:	e2 e3       	ldi	r30, 0x32	; 50
    1300:	f0 e0       	ldi	r31, 0x00	; 0
    1302:	80 81       	ld	r24, Z
    1304:	8b 7f       	andi	r24, 0xFB	; 251
    1306:	8c 93       	st	X, r24
    1308:	80 e0       	ldi	r24, 0x00	; 0
    130a:	90 e0       	ldi	r25, 0x00	; 0
    130c:	a0 e8       	ldi	r26, 0x80	; 128
    130e:	bf e3       	ldi	r27, 0x3F	; 63
    1310:	8b 87       	std	Y+11, r24	; 0x0b
    1312:	9c 87       	std	Y+12, r25	; 0x0c
    1314:	ad 87       	std	Y+13, r26	; 0x0d
    1316:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1318:	6b 85       	ldd	r22, Y+11	; 0x0b
    131a:	7c 85       	ldd	r23, Y+12	; 0x0c
    131c:	8d 85       	ldd	r24, Y+13	; 0x0d
    131e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1320:	20 e0       	ldi	r18, 0x00	; 0
    1322:	30 e0       	ldi	r19, 0x00	; 0
    1324:	4a ef       	ldi	r20, 0xFA	; 250
    1326:	54 e4       	ldi	r21, 0x44	; 68
    1328:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    132c:	dc 01       	movw	r26, r24
    132e:	cb 01       	movw	r24, r22
    1330:	8f 83       	std	Y+7, r24	; 0x07
    1332:	98 87       	std	Y+8, r25	; 0x08
    1334:	a9 87       	std	Y+9, r26	; 0x09
    1336:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1338:	6f 81       	ldd	r22, Y+7	; 0x07
    133a:	78 85       	ldd	r23, Y+8	; 0x08
    133c:	89 85       	ldd	r24, Y+9	; 0x09
    133e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1340:	20 e0       	ldi	r18, 0x00	; 0
    1342:	30 e0       	ldi	r19, 0x00	; 0
    1344:	40 e8       	ldi	r20, 0x80	; 128
    1346:	5f e3       	ldi	r21, 0x3F	; 63
    1348:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    134c:	88 23       	and	r24, r24
    134e:	2c f4       	brge	.+10     	; 0x135a <LCD_Data+0x354>
		__ticks = 1;
    1350:	81 e0       	ldi	r24, 0x01	; 1
    1352:	90 e0       	ldi	r25, 0x00	; 0
    1354:	9e 83       	std	Y+6, r25	; 0x06
    1356:	8d 83       	std	Y+5, r24	; 0x05
    1358:	3f c0       	rjmp	.+126    	; 0x13d8 <LCD_Data+0x3d2>
	else if (__tmp > 65535)
    135a:	6f 81       	ldd	r22, Y+7	; 0x07
    135c:	78 85       	ldd	r23, Y+8	; 0x08
    135e:	89 85       	ldd	r24, Y+9	; 0x09
    1360:	9a 85       	ldd	r25, Y+10	; 0x0a
    1362:	20 e0       	ldi	r18, 0x00	; 0
    1364:	3f ef       	ldi	r19, 0xFF	; 255
    1366:	4f e7       	ldi	r20, 0x7F	; 127
    1368:	57 e4       	ldi	r21, 0x47	; 71
    136a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    136e:	18 16       	cp	r1, r24
    1370:	4c f5       	brge	.+82     	; 0x13c4 <LCD_Data+0x3be>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1372:	6b 85       	ldd	r22, Y+11	; 0x0b
    1374:	7c 85       	ldd	r23, Y+12	; 0x0c
    1376:	8d 85       	ldd	r24, Y+13	; 0x0d
    1378:	9e 85       	ldd	r25, Y+14	; 0x0e
    137a:	20 e0       	ldi	r18, 0x00	; 0
    137c:	30 e0       	ldi	r19, 0x00	; 0
    137e:	40 e2       	ldi	r20, 0x20	; 32
    1380:	51 e4       	ldi	r21, 0x41	; 65
    1382:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1386:	dc 01       	movw	r26, r24
    1388:	cb 01       	movw	r24, r22
    138a:	bc 01       	movw	r22, r24
    138c:	cd 01       	movw	r24, r26
    138e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1392:	dc 01       	movw	r26, r24
    1394:	cb 01       	movw	r24, r22
    1396:	9e 83       	std	Y+6, r25	; 0x06
    1398:	8d 83       	std	Y+5, r24	; 0x05
    139a:	0f c0       	rjmp	.+30     	; 0x13ba <LCD_Data+0x3b4>
    139c:	88 ec       	ldi	r24, 0xC8	; 200
    139e:	90 e0       	ldi	r25, 0x00	; 0
    13a0:	9c 83       	std	Y+4, r25	; 0x04
    13a2:	8b 83       	std	Y+3, r24	; 0x03
    13a4:	8b 81       	ldd	r24, Y+3	; 0x03
    13a6:	9c 81       	ldd	r25, Y+4	; 0x04
    13a8:	01 97       	sbiw	r24, 0x01	; 1
    13aa:	f1 f7       	brne	.-4      	; 0x13a8 <LCD_Data+0x3a2>
    13ac:	9c 83       	std	Y+4, r25	; 0x04
    13ae:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    13b0:	8d 81       	ldd	r24, Y+5	; 0x05
    13b2:	9e 81       	ldd	r25, Y+6	; 0x06
    13b4:	01 97       	sbiw	r24, 0x01	; 1
    13b6:	9e 83       	std	Y+6, r25	; 0x06
    13b8:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    13ba:	8d 81       	ldd	r24, Y+5	; 0x05
    13bc:	9e 81       	ldd	r25, Y+6	; 0x06
    13be:	00 97       	sbiw	r24, 0x00	; 0
    13c0:	69 f7       	brne	.-38     	; 0x139c <LCD_Data+0x396>
    13c2:	14 c0       	rjmp	.+40     	; 0x13ec <LCD_Data+0x3e6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    13c4:	6f 81       	ldd	r22, Y+7	; 0x07
    13c6:	78 85       	ldd	r23, Y+8	; 0x08
    13c8:	89 85       	ldd	r24, Y+9	; 0x09
    13ca:	9a 85       	ldd	r25, Y+10	; 0x0a
    13cc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    13d0:	dc 01       	movw	r26, r24
    13d2:	cb 01       	movw	r24, r22
    13d4:	9e 83       	std	Y+6, r25	; 0x06
    13d6:	8d 83       	std	Y+5, r24	; 0x05
    13d8:	8d 81       	ldd	r24, Y+5	; 0x05
    13da:	9e 81       	ldd	r25, Y+6	; 0x06
    13dc:	9a 83       	std	Y+2, r25	; 0x02
    13de:	89 83       	std	Y+1, r24	; 0x01
    13e0:	89 81       	ldd	r24, Y+1	; 0x01
    13e2:	9a 81       	ldd	r25, Y+2	; 0x02
    13e4:	01 97       	sbiw	r24, 0x01	; 1
    13e6:	f1 f7       	brne	.-4      	; 0x13e4 <LCD_Data+0x3de>
    13e8:	9a 83       	std	Y+2, r25	; 0x02
    13ea:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
}
    13ec:	e9 96       	adiw	r28, 0x39	; 57
    13ee:	0f b6       	in	r0, 0x3f	; 63
    13f0:	f8 94       	cli
    13f2:	de bf       	out	0x3e, r29	; 62
    13f4:	0f be       	out	0x3f, r0	; 63
    13f6:	cd bf       	out	0x3d, r28	; 61
    13f8:	cf 91       	pop	r28
    13fa:	df 91       	pop	r29
    13fc:	08 95       	ret

000013fe <LCD_goToRowCol>:
void LCD_goToRowCol(unsigned char row ,unsigned char col ){
    13fe:	df 93       	push	r29
    1400:	cf 93       	push	r28
    1402:	cd b7       	in	r28, 0x3d	; 61
    1404:	de b7       	in	r29, 0x3e	; 62
    1406:	64 97       	sbiw	r28, 0x14	; 20
    1408:	0f b6       	in	r0, 0x3f	; 63
    140a:	f8 94       	cli
    140c:	de bf       	out	0x3e, r29	; 62
    140e:	0f be       	out	0x3f, r0	; 63
    1410:	cd bf       	out	0x3d, r28	; 61
    1412:	8b 8b       	std	Y+19, r24	; 0x13
    1414:	6c 8b       	std	Y+20, r22	; 0x14
	unsigned char fristCharAddr[]={0x80 , 0XC0, 0X94 ,0XD4};
    1416:	80 e8       	ldi	r24, 0x80	; 128
    1418:	8f 87       	std	Y+15, r24	; 0x0f
    141a:	80 ec       	ldi	r24, 0xC0	; 192
    141c:	88 8b       	std	Y+16, r24	; 0x10
    141e:	84 e9       	ldi	r24, 0x94	; 148
    1420:	89 8b       	std	Y+17, r24	; 0x11
    1422:	84 ed       	ldi	r24, 0xD4	; 212
    1424:	8a 8b       	std	Y+18, r24	; 0x12
	LCD_command(fristCharAddr[row-1] + col-1);
    1426:	8b 89       	ldd	r24, Y+19	; 0x13
    1428:	88 2f       	mov	r24, r24
    142a:	90 e0       	ldi	r25, 0x00	; 0
    142c:	9c 01       	movw	r18, r24
    142e:	21 50       	subi	r18, 0x01	; 1
    1430:	30 40       	sbci	r19, 0x00	; 0
    1432:	ce 01       	movw	r24, r28
    1434:	0f 96       	adiw	r24, 0x0f	; 15
    1436:	fc 01       	movw	r30, r24
    1438:	e2 0f       	add	r30, r18
    143a:	f3 1f       	adc	r31, r19
    143c:	90 81       	ld	r25, Z
    143e:	8c 89       	ldd	r24, Y+20	; 0x14
    1440:	89 0f       	add	r24, r25
    1442:	81 50       	subi	r24, 0x01	; 1
    1444:	0e 94 0e 06 	call	0xc1c	; 0xc1c <LCD_command>
    1448:	80 e0       	ldi	r24, 0x00	; 0
    144a:	90 e0       	ldi	r25, 0x00	; 0
    144c:	a0 e8       	ldi	r26, 0x80	; 128
    144e:	bf e3       	ldi	r27, 0x3F	; 63
    1450:	8b 87       	std	Y+11, r24	; 0x0b
    1452:	9c 87       	std	Y+12, r25	; 0x0c
    1454:	ad 87       	std	Y+13, r26	; 0x0d
    1456:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1458:	6b 85       	ldd	r22, Y+11	; 0x0b
    145a:	7c 85       	ldd	r23, Y+12	; 0x0c
    145c:	8d 85       	ldd	r24, Y+13	; 0x0d
    145e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1460:	20 e0       	ldi	r18, 0x00	; 0
    1462:	30 e0       	ldi	r19, 0x00	; 0
    1464:	4a ef       	ldi	r20, 0xFA	; 250
    1466:	54 e4       	ldi	r21, 0x44	; 68
    1468:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    146c:	dc 01       	movw	r26, r24
    146e:	cb 01       	movw	r24, r22
    1470:	8f 83       	std	Y+7, r24	; 0x07
    1472:	98 87       	std	Y+8, r25	; 0x08
    1474:	a9 87       	std	Y+9, r26	; 0x09
    1476:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1478:	6f 81       	ldd	r22, Y+7	; 0x07
    147a:	78 85       	ldd	r23, Y+8	; 0x08
    147c:	89 85       	ldd	r24, Y+9	; 0x09
    147e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1480:	20 e0       	ldi	r18, 0x00	; 0
    1482:	30 e0       	ldi	r19, 0x00	; 0
    1484:	40 e8       	ldi	r20, 0x80	; 128
    1486:	5f e3       	ldi	r21, 0x3F	; 63
    1488:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    148c:	88 23       	and	r24, r24
    148e:	2c f4       	brge	.+10     	; 0x149a <LCD_goToRowCol+0x9c>
		__ticks = 1;
    1490:	81 e0       	ldi	r24, 0x01	; 1
    1492:	90 e0       	ldi	r25, 0x00	; 0
    1494:	9e 83       	std	Y+6, r25	; 0x06
    1496:	8d 83       	std	Y+5, r24	; 0x05
    1498:	3f c0       	rjmp	.+126    	; 0x1518 <LCD_goToRowCol+0x11a>
	else if (__tmp > 65535)
    149a:	6f 81       	ldd	r22, Y+7	; 0x07
    149c:	78 85       	ldd	r23, Y+8	; 0x08
    149e:	89 85       	ldd	r24, Y+9	; 0x09
    14a0:	9a 85       	ldd	r25, Y+10	; 0x0a
    14a2:	20 e0       	ldi	r18, 0x00	; 0
    14a4:	3f ef       	ldi	r19, 0xFF	; 255
    14a6:	4f e7       	ldi	r20, 0x7F	; 127
    14a8:	57 e4       	ldi	r21, 0x47	; 71
    14aa:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    14ae:	18 16       	cp	r1, r24
    14b0:	4c f5       	brge	.+82     	; 0x1504 <LCD_goToRowCol+0x106>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    14b2:	6b 85       	ldd	r22, Y+11	; 0x0b
    14b4:	7c 85       	ldd	r23, Y+12	; 0x0c
    14b6:	8d 85       	ldd	r24, Y+13	; 0x0d
    14b8:	9e 85       	ldd	r25, Y+14	; 0x0e
    14ba:	20 e0       	ldi	r18, 0x00	; 0
    14bc:	30 e0       	ldi	r19, 0x00	; 0
    14be:	40 e2       	ldi	r20, 0x20	; 32
    14c0:	51 e4       	ldi	r21, 0x41	; 65
    14c2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    14c6:	dc 01       	movw	r26, r24
    14c8:	cb 01       	movw	r24, r22
    14ca:	bc 01       	movw	r22, r24
    14cc:	cd 01       	movw	r24, r26
    14ce:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    14d2:	dc 01       	movw	r26, r24
    14d4:	cb 01       	movw	r24, r22
    14d6:	9e 83       	std	Y+6, r25	; 0x06
    14d8:	8d 83       	std	Y+5, r24	; 0x05
    14da:	0f c0       	rjmp	.+30     	; 0x14fa <LCD_goToRowCol+0xfc>
    14dc:	88 ec       	ldi	r24, 0xC8	; 200
    14de:	90 e0       	ldi	r25, 0x00	; 0
    14e0:	9c 83       	std	Y+4, r25	; 0x04
    14e2:	8b 83       	std	Y+3, r24	; 0x03
    14e4:	8b 81       	ldd	r24, Y+3	; 0x03
    14e6:	9c 81       	ldd	r25, Y+4	; 0x04
    14e8:	01 97       	sbiw	r24, 0x01	; 1
    14ea:	f1 f7       	brne	.-4      	; 0x14e8 <LCD_goToRowCol+0xea>
    14ec:	9c 83       	std	Y+4, r25	; 0x04
    14ee:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    14f0:	8d 81       	ldd	r24, Y+5	; 0x05
    14f2:	9e 81       	ldd	r25, Y+6	; 0x06
    14f4:	01 97       	sbiw	r24, 0x01	; 1
    14f6:	9e 83       	std	Y+6, r25	; 0x06
    14f8:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    14fa:	8d 81       	ldd	r24, Y+5	; 0x05
    14fc:	9e 81       	ldd	r25, Y+6	; 0x06
    14fe:	00 97       	sbiw	r24, 0x00	; 0
    1500:	69 f7       	brne	.-38     	; 0x14dc <LCD_goToRowCol+0xde>
    1502:	14 c0       	rjmp	.+40     	; 0x152c <LCD_goToRowCol+0x12e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1504:	6f 81       	ldd	r22, Y+7	; 0x07
    1506:	78 85       	ldd	r23, Y+8	; 0x08
    1508:	89 85       	ldd	r24, Y+9	; 0x09
    150a:	9a 85       	ldd	r25, Y+10	; 0x0a
    150c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1510:	dc 01       	movw	r26, r24
    1512:	cb 01       	movw	r24, r22
    1514:	9e 83       	std	Y+6, r25	; 0x06
    1516:	8d 83       	std	Y+5, r24	; 0x05
    1518:	8d 81       	ldd	r24, Y+5	; 0x05
    151a:	9e 81       	ldd	r25, Y+6	; 0x06
    151c:	9a 83       	std	Y+2, r25	; 0x02
    151e:	89 83       	std	Y+1, r24	; 0x01
    1520:	89 81       	ldd	r24, Y+1	; 0x01
    1522:	9a 81       	ldd	r25, Y+2	; 0x02
    1524:	01 97       	sbiw	r24, 0x01	; 1
    1526:	f1 f7       	brne	.-4      	; 0x1524 <LCD_goToRowCol+0x126>
    1528:	9a 83       	std	Y+2, r25	; 0x02
    152a:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);

}
    152c:	64 96       	adiw	r28, 0x14	; 20
    152e:	0f b6       	in	r0, 0x3f	; 63
    1530:	f8 94       	cli
    1532:	de bf       	out	0x3e, r29	; 62
    1534:	0f be       	out	0x3f, r0	; 63
    1536:	cd bf       	out	0x3d, r28	; 61
    1538:	cf 91       	pop	r28
    153a:	df 91       	pop	r29
    153c:	08 95       	ret

0000153e <LCD_displayCharacter>:
void LCD_displayCharacter(unsigned char Byte ){
    153e:	df 93       	push	r29
    1540:	cf 93       	push	r28
    1542:	0f 92       	push	r0
    1544:	cd b7       	in	r28, 0x3d	; 61
    1546:	de b7       	in	r29, 0x3e	; 62
    1548:	89 83       	std	Y+1, r24	; 0x01
	LCD_Data(Byte);
    154a:	89 81       	ldd	r24, Y+1	; 0x01
    154c:	0e 94 03 08 	call	0x1006	; 0x1006 <LCD_Data>
}
    1550:	0f 90       	pop	r0
    1552:	cf 91       	pop	r28
    1554:	df 91       	pop	r29
    1556:	08 95       	ret

00001558 <LCD_displayString>:

void LCD_displayString(unsigned char *str ){
    1558:	df 93       	push	r29
    155a:	cf 93       	push	r28
    155c:	00 d0       	rcall	.+0      	; 0x155e <LCD_displayString+0x6>
    155e:	cd b7       	in	r28, 0x3d	; 61
    1560:	de b7       	in	r29, 0x3e	; 62
    1562:	9a 83       	std	Y+2, r25	; 0x02
    1564:	89 83       	std	Y+1, r24	; 0x01
	do{
		LCD_Data(*str++);
    1566:	e9 81       	ldd	r30, Y+1	; 0x01
    1568:	fa 81       	ldd	r31, Y+2	; 0x02
    156a:	20 81       	ld	r18, Z
    156c:	89 81       	ldd	r24, Y+1	; 0x01
    156e:	9a 81       	ldd	r25, Y+2	; 0x02
    1570:	01 96       	adiw	r24, 0x01	; 1
    1572:	9a 83       	std	Y+2, r25	; 0x02
    1574:	89 83       	std	Y+1, r24	; 0x01
    1576:	82 2f       	mov	r24, r18
    1578:	0e 94 03 08 	call	0x1006	; 0x1006 <LCD_Data>
	}while(*str);
    157c:	e9 81       	ldd	r30, Y+1	; 0x01
    157e:	fa 81       	ldd	r31, Y+2	; 0x02
    1580:	80 81       	ld	r24, Z
    1582:	88 23       	and	r24, r24
    1584:	81 f7       	brne	.-32     	; 0x1566 <LCD_displayString+0xe>
}
    1586:	0f 90       	pop	r0
    1588:	0f 90       	pop	r0
    158a:	cf 91       	pop	r28
    158c:	df 91       	pop	r29
    158e:	08 95       	ret

00001590 <LCD_displayStringRowCol>:
void LCD_displayStringRowCol(unsigned char row , unsigned char col , unsigned char *str ){
    1590:	df 93       	push	r29
    1592:	cf 93       	push	r28
    1594:	00 d0       	rcall	.+0      	; 0x1596 <LCD_displayStringRowCol+0x6>
    1596:	00 d0       	rcall	.+0      	; 0x1598 <LCD_displayStringRowCol+0x8>
    1598:	cd b7       	in	r28, 0x3d	; 61
    159a:	de b7       	in	r29, 0x3e	; 62
    159c:	89 83       	std	Y+1, r24	; 0x01
    159e:	6a 83       	std	Y+2, r22	; 0x02
    15a0:	5c 83       	std	Y+4, r21	; 0x04
    15a2:	4b 83       	std	Y+3, r20	; 0x03
	LCD_goToRowCol(row , col);
    15a4:	89 81       	ldd	r24, Y+1	; 0x01
    15a6:	6a 81       	ldd	r22, Y+2	; 0x02
    15a8:	0e 94 ff 09 	call	0x13fe	; 0x13fe <LCD_goToRowCol>
	LCD_displayString(str);
    15ac:	8b 81       	ldd	r24, Y+3	; 0x03
    15ae:	9c 81       	ldd	r25, Y+4	; 0x04
    15b0:	0e 94 ac 0a 	call	0x1558	; 0x1558 <LCD_displayString>
}
    15b4:	0f 90       	pop	r0
    15b6:	0f 90       	pop	r0
    15b8:	0f 90       	pop	r0
    15ba:	0f 90       	pop	r0
    15bc:	cf 91       	pop	r28
    15be:	df 91       	pop	r29
    15c0:	08 95       	ret

000015c2 <LCD_clearScreen>:
void LCD_clearScreen(void){
    15c2:	df 93       	push	r29
    15c4:	cf 93       	push	r28
    15c6:	cd b7       	in	r28, 0x3d	; 61
    15c8:	de b7       	in	r29, 0x3e	; 62
	LCD_command(0x01); //clear display
    15ca:	81 e0       	ldi	r24, 0x01	; 1
    15cc:	0e 94 0e 06 	call	0xc1c	; 0xc1c <LCD_command>
}
    15d0:	cf 91       	pop	r28
    15d2:	df 91       	pop	r29
    15d4:	08 95       	ret

000015d6 <LCD_intToString>:
void LCD_intToString(unsigned short data){
    15d6:	df 93       	push	r29
    15d8:	cf 93       	push	r28
    15da:	cd b7       	in	r28, 0x3d	; 61
    15dc:	de b7       	in	r29, 0x3e	; 62
    15de:	62 97       	sbiw	r28, 0x12	; 18
    15e0:	0f b6       	in	r0, 0x3f	; 63
    15e2:	f8 94       	cli
    15e4:	de bf       	out	0x3e, r29	; 62
    15e6:	0f be       	out	0x3f, r0	; 63
    15e8:	cd bf       	out	0x3d, r28	; 61
    15ea:	9a 8b       	std	Y+18, r25	; 0x12
    15ec:	89 8b       	std	Y+17, r24	; 0x11
	unsigned char buff[16]; /* String to hold the ascii result */
	// itoa(data,buff,10); /* 10 for decimal */
	sprintf(buff ,"%d",data);
    15ee:	00 d0       	rcall	.+0      	; 0x15f0 <LCD_intToString+0x1a>
    15f0:	00 d0       	rcall	.+0      	; 0x15f2 <LCD_intToString+0x1c>
    15f2:	00 d0       	rcall	.+0      	; 0x15f4 <LCD_intToString+0x1e>
    15f4:	ed b7       	in	r30, 0x3d	; 61
    15f6:	fe b7       	in	r31, 0x3e	; 62
    15f8:	31 96       	adiw	r30, 0x01	; 1
    15fa:	ce 01       	movw	r24, r28
    15fc:	01 96       	adiw	r24, 0x01	; 1
    15fe:	91 83       	std	Z+1, r25	; 0x01
    1600:	80 83       	st	Z, r24
    1602:	80 e6       	ldi	r24, 0x60	; 96
    1604:	90 e0       	ldi	r25, 0x00	; 0
    1606:	93 83       	std	Z+3, r25	; 0x03
    1608:	82 83       	std	Z+2, r24	; 0x02
    160a:	89 89       	ldd	r24, Y+17	; 0x11
    160c:	9a 89       	ldd	r25, Y+18	; 0x12
    160e:	95 83       	std	Z+5, r25	; 0x05
    1610:	84 83       	std	Z+4, r24	; 0x04
    1612:	0e 94 ae 0b 	call	0x175c	; 0x175c <sprintf>
    1616:	8d b7       	in	r24, 0x3d	; 61
    1618:	9e b7       	in	r25, 0x3e	; 62
    161a:	06 96       	adiw	r24, 0x06	; 6
    161c:	0f b6       	in	r0, 0x3f	; 63
    161e:	f8 94       	cli
    1620:	9e bf       	out	0x3e, r25	; 62
    1622:	0f be       	out	0x3f, r0	; 63
    1624:	8d bf       	out	0x3d, r24	; 61
	 LCD_displayString(buff);
    1626:	ce 01       	movw	r24, r28
    1628:	01 96       	adiw	r24, 0x01	; 1
    162a:	0e 94 ac 0a 	call	0x1558	; 0x1558 <LCD_displayString>
}
    162e:	62 96       	adiw	r28, 0x12	; 18
    1630:	0f b6       	in	r0, 0x3f	; 63
    1632:	f8 94       	cli
    1634:	de bf       	out	0x3e, r29	; 62
    1636:	0f be       	out	0x3f, r0	; 63
    1638:	cd bf       	out	0x3d, r28	; 61
    163a:	cf 91       	pop	r28
    163c:	df 91       	pop	r29
    163e:	08 95       	ret

00001640 <timer1_inputcapture_init>:

#include "avr/delay.h"
#include <stdlib.h>
#include "lcdlib.h"

void timer1_inputcapture_init(){
    1640:	df 93       	push	r29
    1642:	cf 93       	push	r28
    1644:	cd b7       	in	r28, 0x3d	; 61
    1646:	de b7       	in	r29, 0x3e	; 62
	DDRD &=~(1<<PD6);
    1648:	a1 e3       	ldi	r26, 0x31	; 49
    164a:	b0 e0       	ldi	r27, 0x00	; 0
    164c:	e1 e3       	ldi	r30, 0x31	; 49
    164e:	f0 e0       	ldi	r31, 0x00	; 0
    1650:	80 81       	ld	r24, Z
    1652:	8f 7b       	andi	r24, 0xBF	; 191
    1654:	8c 93       	st	X, r24
	TCCR1A =(1<<WGM12)|(1<<WGM13);
    1656:	ef e4       	ldi	r30, 0x4F	; 79
    1658:	f0 e0       	ldi	r31, 0x00	; 0
    165a:	88 e1       	ldi	r24, 0x18	; 24
    165c:	80 83       	st	Z, r24
	TCCR1B =(1<<CS10);
    165e:	ee e4       	ldi	r30, 0x4E	; 78
    1660:	f0 e0       	ldi	r31, 0x00	; 0
    1662:	81 e0       	ldi	r24, 0x01	; 1
    1664:	80 83       	st	Z, r24
}
    1666:	cf 91       	pop	r28
    1668:	df 91       	pop	r29
    166a:	08 95       	ret

0000166c <inputCapture>:

unsigned short inputCapture(){
    166c:	df 93       	push	r29
    166e:	cf 93       	push	r28
    1670:	cd b7       	in	r28, 0x3d	; 61
    1672:	de b7       	in	r29, 0x3e	; 62

	while(!(TIFR & (1<<ICF1)));
    1674:	e8 e5       	ldi	r30, 0x58	; 88
    1676:	f0 e0       	ldi	r31, 0x00	; 0
    1678:	80 81       	ld	r24, Z
    167a:	88 2f       	mov	r24, r24
    167c:	90 e0       	ldi	r25, 0x00	; 0
    167e:	80 72       	andi	r24, 0x20	; 32
    1680:	90 70       	andi	r25, 0x00	; 0
    1682:	00 97       	sbiw	r24, 0x00	; 0
    1684:	b9 f3       	breq	.-18     	; 0x1674 <inputCapture+0x8>
	TIFR |= (1<<ICF1);
    1686:	a8 e5       	ldi	r26, 0x58	; 88
    1688:	b0 e0       	ldi	r27, 0x00	; 0
    168a:	e8 e5       	ldi	r30, 0x58	; 88
    168c:	f0 e0       	ldi	r31, 0x00	; 0
    168e:	80 81       	ld	r24, Z
    1690:	80 62       	ori	r24, 0x20	; 32
    1692:	8c 93       	st	X, r24
	return  ICR1;
    1694:	e6 e4       	ldi	r30, 0x46	; 70
    1696:	f0 e0       	ldi	r31, 0x00	; 0
    1698:	80 81       	ld	r24, Z
    169a:	91 81       	ldd	r25, Z+1	; 0x01

}
    169c:	cf 91       	pop	r28
    169e:	df 91       	pop	r29
    16a0:	08 95       	ret

000016a2 <main>:

int main(){
    16a2:	df 93       	push	r29
    16a4:	cf 93       	push	r28
    16a6:	00 d0       	rcall	.+0      	; 0x16a8 <main+0x6>
    16a8:	00 d0       	rcall	.+0      	; 0x16aa <main+0x8>
    16aa:	00 d0       	rcall	.+0      	; 0x16ac <main+0xa>
    16ac:	cd b7       	in	r28, 0x3d	; 61
    16ae:	de b7       	in	r29, 0x3e	; 62
	LCD_init();
    16b0:	0e 94 9b 05 	call	0xb36	; 0xb36 <LCD_init>
	timer1_inputcapture_init();
    16b4:	0e 94 20 0b 	call	0x1640	; 0x1640 <timer1_inputcapture_init>
	unsigned short T ,P , B;
	while(1){
		T=inputCapture();
    16b8:	0e 94 36 0b 	call	0x166c	; 0x166c <inputCapture>
    16bc:	9e 83       	std	Y+6, r25	; 0x06
    16be:	8d 83       	std	Y+5, r24	; 0x05
		B=inputCapture();
    16c0:	0e 94 36 0b 	call	0x166c	; 0x166c <inputCapture>
    16c4:	9a 83       	std	Y+2, r25	; 0x02
    16c6:	89 83       	std	Y+1, r24	; 0x01
		P=T-B;
    16c8:	2d 81       	ldd	r18, Y+5	; 0x05
    16ca:	3e 81       	ldd	r19, Y+6	; 0x06
    16cc:	89 81       	ldd	r24, Y+1	; 0x01
    16ce:	9a 81       	ldd	r25, Y+2	; 0x02
    16d0:	a9 01       	movw	r20, r18
    16d2:	48 1b       	sub	r20, r24
    16d4:	59 0b       	sbc	r21, r25
    16d6:	ca 01       	movw	r24, r20
    16d8:	9c 83       	std	Y+4, r25	; 0x04
    16da:	8b 83       	std	Y+3, r24	; 0x03
		LCD_goToRowCol(1,1);
    16dc:	81 e0       	ldi	r24, 0x01	; 1
    16de:	61 e0       	ldi	r22, 0x01	; 1
    16e0:	0e 94 ff 09 	call	0x13fe	; 0x13fe <LCD_goToRowCol>
		LCD_intToString(P);
    16e4:	8b 81       	ldd	r24, Y+3	; 0x03
    16e6:	9c 81       	ldd	r25, Y+4	; 0x04
    16e8:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <LCD_intToString>
    16ec:	e5 cf       	rjmp	.-54     	; 0x16b8 <main+0x16>

000016ee <__prologue_saves__>:
    16ee:	2f 92       	push	r2
    16f0:	3f 92       	push	r3
    16f2:	4f 92       	push	r4
    16f4:	5f 92       	push	r5
    16f6:	6f 92       	push	r6
    16f8:	7f 92       	push	r7
    16fa:	8f 92       	push	r8
    16fc:	9f 92       	push	r9
    16fe:	af 92       	push	r10
    1700:	bf 92       	push	r11
    1702:	cf 92       	push	r12
    1704:	df 92       	push	r13
    1706:	ef 92       	push	r14
    1708:	ff 92       	push	r15
    170a:	0f 93       	push	r16
    170c:	1f 93       	push	r17
    170e:	cf 93       	push	r28
    1710:	df 93       	push	r29
    1712:	cd b7       	in	r28, 0x3d	; 61
    1714:	de b7       	in	r29, 0x3e	; 62
    1716:	ca 1b       	sub	r28, r26
    1718:	db 0b       	sbc	r29, r27
    171a:	0f b6       	in	r0, 0x3f	; 63
    171c:	f8 94       	cli
    171e:	de bf       	out	0x3e, r29	; 62
    1720:	0f be       	out	0x3f, r0	; 63
    1722:	cd bf       	out	0x3d, r28	; 61
    1724:	09 94       	ijmp

00001726 <__epilogue_restores__>:
    1726:	2a 88       	ldd	r2, Y+18	; 0x12
    1728:	39 88       	ldd	r3, Y+17	; 0x11
    172a:	48 88       	ldd	r4, Y+16	; 0x10
    172c:	5f 84       	ldd	r5, Y+15	; 0x0f
    172e:	6e 84       	ldd	r6, Y+14	; 0x0e
    1730:	7d 84       	ldd	r7, Y+13	; 0x0d
    1732:	8c 84       	ldd	r8, Y+12	; 0x0c
    1734:	9b 84       	ldd	r9, Y+11	; 0x0b
    1736:	aa 84       	ldd	r10, Y+10	; 0x0a
    1738:	b9 84       	ldd	r11, Y+9	; 0x09
    173a:	c8 84       	ldd	r12, Y+8	; 0x08
    173c:	df 80       	ldd	r13, Y+7	; 0x07
    173e:	ee 80       	ldd	r14, Y+6	; 0x06
    1740:	fd 80       	ldd	r15, Y+5	; 0x05
    1742:	0c 81       	ldd	r16, Y+4	; 0x04
    1744:	1b 81       	ldd	r17, Y+3	; 0x03
    1746:	aa 81       	ldd	r26, Y+2	; 0x02
    1748:	b9 81       	ldd	r27, Y+1	; 0x01
    174a:	ce 0f       	add	r28, r30
    174c:	d1 1d       	adc	r29, r1
    174e:	0f b6       	in	r0, 0x3f	; 63
    1750:	f8 94       	cli
    1752:	de bf       	out	0x3e, r29	; 62
    1754:	0f be       	out	0x3f, r0	; 63
    1756:	cd bf       	out	0x3d, r28	; 61
    1758:	ed 01       	movw	r28, r26
    175a:	08 95       	ret

0000175c <sprintf>:
    175c:	ae e0       	ldi	r26, 0x0E	; 14
    175e:	b0 e0       	ldi	r27, 0x00	; 0
    1760:	e4 eb       	ldi	r30, 0xB4	; 180
    1762:	fb e0       	ldi	r31, 0x0B	; 11
    1764:	0c 94 85 0b 	jmp	0x170a	; 0x170a <__prologue_saves__+0x1c>
    1768:	0d 89       	ldd	r16, Y+21	; 0x15
    176a:	1e 89       	ldd	r17, Y+22	; 0x16
    176c:	86 e0       	ldi	r24, 0x06	; 6
    176e:	8c 83       	std	Y+4, r24	; 0x04
    1770:	1a 83       	std	Y+2, r17	; 0x02
    1772:	09 83       	std	Y+1, r16	; 0x01
    1774:	8f ef       	ldi	r24, 0xFF	; 255
    1776:	9f e7       	ldi	r25, 0x7F	; 127
    1778:	9e 83       	std	Y+6, r25	; 0x06
    177a:	8d 83       	std	Y+5, r24	; 0x05
    177c:	9e 01       	movw	r18, r28
    177e:	27 5e       	subi	r18, 0xE7	; 231
    1780:	3f 4f       	sbci	r19, 0xFF	; 255
    1782:	ce 01       	movw	r24, r28
    1784:	01 96       	adiw	r24, 0x01	; 1
    1786:	6f 89       	ldd	r22, Y+23	; 0x17
    1788:	78 8d       	ldd	r23, Y+24	; 0x18
    178a:	a9 01       	movw	r20, r18
    178c:	0e 94 d2 0b 	call	0x17a4	; 0x17a4 <vfprintf>
    1790:	2f 81       	ldd	r18, Y+7	; 0x07
    1792:	38 85       	ldd	r19, Y+8	; 0x08
    1794:	02 0f       	add	r16, r18
    1796:	13 1f       	adc	r17, r19
    1798:	f8 01       	movw	r30, r16
    179a:	10 82       	st	Z, r1
    179c:	2e 96       	adiw	r28, 0x0e	; 14
    179e:	e4 e0       	ldi	r30, 0x04	; 4
    17a0:	0c 94 a1 0b 	jmp	0x1742	; 0x1742 <__epilogue_restores__+0x1c>

000017a4 <vfprintf>:
    17a4:	ab e0       	ldi	r26, 0x0B	; 11
    17a6:	b0 e0       	ldi	r27, 0x00	; 0
    17a8:	e8 ed       	ldi	r30, 0xD8	; 216
    17aa:	fb e0       	ldi	r31, 0x0B	; 11
    17ac:	0c 94 77 0b 	jmp	0x16ee	; 0x16ee <__prologue_saves__>
    17b0:	3c 01       	movw	r6, r24
    17b2:	2b 01       	movw	r4, r22
    17b4:	5a 01       	movw	r10, r20
    17b6:	fc 01       	movw	r30, r24
    17b8:	17 82       	std	Z+7, r1	; 0x07
    17ba:	16 82       	std	Z+6, r1	; 0x06
    17bc:	83 81       	ldd	r24, Z+3	; 0x03
    17be:	81 fd       	sbrc	r24, 1
    17c0:	03 c0       	rjmp	.+6      	; 0x17c8 <vfprintf+0x24>
    17c2:	6f ef       	ldi	r22, 0xFF	; 255
    17c4:	7f ef       	ldi	r23, 0xFF	; 255
    17c6:	c6 c1       	rjmp	.+908    	; 0x1b54 <vfprintf+0x3b0>
    17c8:	9a e0       	ldi	r25, 0x0A	; 10
    17ca:	89 2e       	mov	r8, r25
    17cc:	1e 01       	movw	r2, r28
    17ce:	08 94       	sec
    17d0:	21 1c       	adc	r2, r1
    17d2:	31 1c       	adc	r3, r1
    17d4:	f3 01       	movw	r30, r6
    17d6:	23 81       	ldd	r18, Z+3	; 0x03
    17d8:	f2 01       	movw	r30, r4
    17da:	23 fd       	sbrc	r18, 3
    17dc:	85 91       	lpm	r24, Z+
    17de:	23 ff       	sbrs	r18, 3
    17e0:	81 91       	ld	r24, Z+
    17e2:	2f 01       	movw	r4, r30
    17e4:	88 23       	and	r24, r24
    17e6:	09 f4       	brne	.+2      	; 0x17ea <vfprintf+0x46>
    17e8:	b2 c1       	rjmp	.+868    	; 0x1b4e <vfprintf+0x3aa>
    17ea:	85 32       	cpi	r24, 0x25	; 37
    17ec:	39 f4       	brne	.+14     	; 0x17fc <vfprintf+0x58>
    17ee:	23 fd       	sbrc	r18, 3
    17f0:	85 91       	lpm	r24, Z+
    17f2:	23 ff       	sbrs	r18, 3
    17f4:	81 91       	ld	r24, Z+
    17f6:	2f 01       	movw	r4, r30
    17f8:	85 32       	cpi	r24, 0x25	; 37
    17fa:	29 f4       	brne	.+10     	; 0x1806 <vfprintf+0x62>
    17fc:	90 e0       	ldi	r25, 0x00	; 0
    17fe:	b3 01       	movw	r22, r6
    1800:	0e 94 c5 0d 	call	0x1b8a	; 0x1b8a <fputc>
    1804:	e7 cf       	rjmp	.-50     	; 0x17d4 <vfprintf+0x30>
    1806:	98 2f       	mov	r25, r24
    1808:	ff 24       	eor	r15, r15
    180a:	ee 24       	eor	r14, r14
    180c:	99 24       	eor	r9, r9
    180e:	ff e1       	ldi	r31, 0x1F	; 31
    1810:	ff 15       	cp	r31, r15
    1812:	d0 f0       	brcs	.+52     	; 0x1848 <vfprintf+0xa4>
    1814:	9b 32       	cpi	r25, 0x2B	; 43
    1816:	69 f0       	breq	.+26     	; 0x1832 <vfprintf+0x8e>
    1818:	9c 32       	cpi	r25, 0x2C	; 44
    181a:	28 f4       	brcc	.+10     	; 0x1826 <vfprintf+0x82>
    181c:	90 32       	cpi	r25, 0x20	; 32
    181e:	59 f0       	breq	.+22     	; 0x1836 <vfprintf+0x92>
    1820:	93 32       	cpi	r25, 0x23	; 35
    1822:	91 f4       	brne	.+36     	; 0x1848 <vfprintf+0xa4>
    1824:	0e c0       	rjmp	.+28     	; 0x1842 <vfprintf+0x9e>
    1826:	9d 32       	cpi	r25, 0x2D	; 45
    1828:	49 f0       	breq	.+18     	; 0x183c <vfprintf+0x98>
    182a:	90 33       	cpi	r25, 0x30	; 48
    182c:	69 f4       	brne	.+26     	; 0x1848 <vfprintf+0xa4>
    182e:	41 e0       	ldi	r20, 0x01	; 1
    1830:	24 c0       	rjmp	.+72     	; 0x187a <vfprintf+0xd6>
    1832:	52 e0       	ldi	r21, 0x02	; 2
    1834:	f5 2a       	or	r15, r21
    1836:	84 e0       	ldi	r24, 0x04	; 4
    1838:	f8 2a       	or	r15, r24
    183a:	28 c0       	rjmp	.+80     	; 0x188c <vfprintf+0xe8>
    183c:	98 e0       	ldi	r25, 0x08	; 8
    183e:	f9 2a       	or	r15, r25
    1840:	25 c0       	rjmp	.+74     	; 0x188c <vfprintf+0xe8>
    1842:	e0 e1       	ldi	r30, 0x10	; 16
    1844:	fe 2a       	or	r15, r30
    1846:	22 c0       	rjmp	.+68     	; 0x188c <vfprintf+0xe8>
    1848:	f7 fc       	sbrc	r15, 7
    184a:	29 c0       	rjmp	.+82     	; 0x189e <vfprintf+0xfa>
    184c:	89 2f       	mov	r24, r25
    184e:	80 53       	subi	r24, 0x30	; 48
    1850:	8a 30       	cpi	r24, 0x0A	; 10
    1852:	70 f4       	brcc	.+28     	; 0x1870 <vfprintf+0xcc>
    1854:	f6 fe       	sbrs	r15, 6
    1856:	05 c0       	rjmp	.+10     	; 0x1862 <vfprintf+0xbe>
    1858:	98 9c       	mul	r9, r8
    185a:	90 2c       	mov	r9, r0
    185c:	11 24       	eor	r1, r1
    185e:	98 0e       	add	r9, r24
    1860:	15 c0       	rjmp	.+42     	; 0x188c <vfprintf+0xe8>
    1862:	e8 9c       	mul	r14, r8
    1864:	e0 2c       	mov	r14, r0
    1866:	11 24       	eor	r1, r1
    1868:	e8 0e       	add	r14, r24
    186a:	f0 e2       	ldi	r31, 0x20	; 32
    186c:	ff 2a       	or	r15, r31
    186e:	0e c0       	rjmp	.+28     	; 0x188c <vfprintf+0xe8>
    1870:	9e 32       	cpi	r25, 0x2E	; 46
    1872:	29 f4       	brne	.+10     	; 0x187e <vfprintf+0xda>
    1874:	f6 fc       	sbrc	r15, 6
    1876:	6b c1       	rjmp	.+726    	; 0x1b4e <vfprintf+0x3aa>
    1878:	40 e4       	ldi	r20, 0x40	; 64
    187a:	f4 2a       	or	r15, r20
    187c:	07 c0       	rjmp	.+14     	; 0x188c <vfprintf+0xe8>
    187e:	9c 36       	cpi	r25, 0x6C	; 108
    1880:	19 f4       	brne	.+6      	; 0x1888 <vfprintf+0xe4>
    1882:	50 e8       	ldi	r21, 0x80	; 128
    1884:	f5 2a       	or	r15, r21
    1886:	02 c0       	rjmp	.+4      	; 0x188c <vfprintf+0xe8>
    1888:	98 36       	cpi	r25, 0x68	; 104
    188a:	49 f4       	brne	.+18     	; 0x189e <vfprintf+0xfa>
    188c:	f2 01       	movw	r30, r4
    188e:	23 fd       	sbrc	r18, 3
    1890:	95 91       	lpm	r25, Z+
    1892:	23 ff       	sbrs	r18, 3
    1894:	91 91       	ld	r25, Z+
    1896:	2f 01       	movw	r4, r30
    1898:	99 23       	and	r25, r25
    189a:	09 f0       	breq	.+2      	; 0x189e <vfprintf+0xfa>
    189c:	b8 cf       	rjmp	.-144    	; 0x180e <vfprintf+0x6a>
    189e:	89 2f       	mov	r24, r25
    18a0:	85 54       	subi	r24, 0x45	; 69
    18a2:	83 30       	cpi	r24, 0x03	; 3
    18a4:	18 f0       	brcs	.+6      	; 0x18ac <vfprintf+0x108>
    18a6:	80 52       	subi	r24, 0x20	; 32
    18a8:	83 30       	cpi	r24, 0x03	; 3
    18aa:	38 f4       	brcc	.+14     	; 0x18ba <vfprintf+0x116>
    18ac:	44 e0       	ldi	r20, 0x04	; 4
    18ae:	50 e0       	ldi	r21, 0x00	; 0
    18b0:	a4 0e       	add	r10, r20
    18b2:	b5 1e       	adc	r11, r21
    18b4:	5f e3       	ldi	r21, 0x3F	; 63
    18b6:	59 83       	std	Y+1, r21	; 0x01
    18b8:	0f c0       	rjmp	.+30     	; 0x18d8 <vfprintf+0x134>
    18ba:	93 36       	cpi	r25, 0x63	; 99
    18bc:	31 f0       	breq	.+12     	; 0x18ca <vfprintf+0x126>
    18be:	93 37       	cpi	r25, 0x73	; 115
    18c0:	79 f0       	breq	.+30     	; 0x18e0 <vfprintf+0x13c>
    18c2:	93 35       	cpi	r25, 0x53	; 83
    18c4:	09 f0       	breq	.+2      	; 0x18c8 <vfprintf+0x124>
    18c6:	56 c0       	rjmp	.+172    	; 0x1974 <vfprintf+0x1d0>
    18c8:	20 c0       	rjmp	.+64     	; 0x190a <vfprintf+0x166>
    18ca:	f5 01       	movw	r30, r10
    18cc:	80 81       	ld	r24, Z
    18ce:	89 83       	std	Y+1, r24	; 0x01
    18d0:	42 e0       	ldi	r20, 0x02	; 2
    18d2:	50 e0       	ldi	r21, 0x00	; 0
    18d4:	a4 0e       	add	r10, r20
    18d6:	b5 1e       	adc	r11, r21
    18d8:	61 01       	movw	r12, r2
    18da:	01 e0       	ldi	r16, 0x01	; 1
    18dc:	10 e0       	ldi	r17, 0x00	; 0
    18de:	12 c0       	rjmp	.+36     	; 0x1904 <vfprintf+0x160>
    18e0:	f5 01       	movw	r30, r10
    18e2:	c0 80       	ld	r12, Z
    18e4:	d1 80       	ldd	r13, Z+1	; 0x01
    18e6:	f6 fc       	sbrc	r15, 6
    18e8:	03 c0       	rjmp	.+6      	; 0x18f0 <vfprintf+0x14c>
    18ea:	6f ef       	ldi	r22, 0xFF	; 255
    18ec:	7f ef       	ldi	r23, 0xFF	; 255
    18ee:	02 c0       	rjmp	.+4      	; 0x18f4 <vfprintf+0x150>
    18f0:	69 2d       	mov	r22, r9
    18f2:	70 e0       	ldi	r23, 0x00	; 0
    18f4:	42 e0       	ldi	r20, 0x02	; 2
    18f6:	50 e0       	ldi	r21, 0x00	; 0
    18f8:	a4 0e       	add	r10, r20
    18fa:	b5 1e       	adc	r11, r21
    18fc:	c6 01       	movw	r24, r12
    18fe:	0e 94 ba 0d 	call	0x1b74	; 0x1b74 <strnlen>
    1902:	8c 01       	movw	r16, r24
    1904:	5f e7       	ldi	r21, 0x7F	; 127
    1906:	f5 22       	and	r15, r21
    1908:	14 c0       	rjmp	.+40     	; 0x1932 <vfprintf+0x18e>
    190a:	f5 01       	movw	r30, r10
    190c:	c0 80       	ld	r12, Z
    190e:	d1 80       	ldd	r13, Z+1	; 0x01
    1910:	f6 fc       	sbrc	r15, 6
    1912:	03 c0       	rjmp	.+6      	; 0x191a <vfprintf+0x176>
    1914:	6f ef       	ldi	r22, 0xFF	; 255
    1916:	7f ef       	ldi	r23, 0xFF	; 255
    1918:	02 c0       	rjmp	.+4      	; 0x191e <vfprintf+0x17a>
    191a:	69 2d       	mov	r22, r9
    191c:	70 e0       	ldi	r23, 0x00	; 0
    191e:	42 e0       	ldi	r20, 0x02	; 2
    1920:	50 e0       	ldi	r21, 0x00	; 0
    1922:	a4 0e       	add	r10, r20
    1924:	b5 1e       	adc	r11, r21
    1926:	c6 01       	movw	r24, r12
    1928:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <strnlen_P>
    192c:	8c 01       	movw	r16, r24
    192e:	50 e8       	ldi	r21, 0x80	; 128
    1930:	f5 2a       	or	r15, r21
    1932:	f3 fe       	sbrs	r15, 3
    1934:	07 c0       	rjmp	.+14     	; 0x1944 <vfprintf+0x1a0>
    1936:	1a c0       	rjmp	.+52     	; 0x196c <vfprintf+0x1c8>
    1938:	80 e2       	ldi	r24, 0x20	; 32
    193a:	90 e0       	ldi	r25, 0x00	; 0
    193c:	b3 01       	movw	r22, r6
    193e:	0e 94 c5 0d 	call	0x1b8a	; 0x1b8a <fputc>
    1942:	ea 94       	dec	r14
    1944:	8e 2d       	mov	r24, r14
    1946:	90 e0       	ldi	r25, 0x00	; 0
    1948:	08 17       	cp	r16, r24
    194a:	19 07       	cpc	r17, r25
    194c:	a8 f3       	brcs	.-22     	; 0x1938 <vfprintf+0x194>
    194e:	0e c0       	rjmp	.+28     	; 0x196c <vfprintf+0x1c8>
    1950:	f6 01       	movw	r30, r12
    1952:	f7 fc       	sbrc	r15, 7
    1954:	85 91       	lpm	r24, Z+
    1956:	f7 fe       	sbrs	r15, 7
    1958:	81 91       	ld	r24, Z+
    195a:	6f 01       	movw	r12, r30
    195c:	90 e0       	ldi	r25, 0x00	; 0
    195e:	b3 01       	movw	r22, r6
    1960:	0e 94 c5 0d 	call	0x1b8a	; 0x1b8a <fputc>
    1964:	e1 10       	cpse	r14, r1
    1966:	ea 94       	dec	r14
    1968:	01 50       	subi	r16, 0x01	; 1
    196a:	10 40       	sbci	r17, 0x00	; 0
    196c:	01 15       	cp	r16, r1
    196e:	11 05       	cpc	r17, r1
    1970:	79 f7       	brne	.-34     	; 0x1950 <vfprintf+0x1ac>
    1972:	ea c0       	rjmp	.+468    	; 0x1b48 <vfprintf+0x3a4>
    1974:	94 36       	cpi	r25, 0x64	; 100
    1976:	11 f0       	breq	.+4      	; 0x197c <vfprintf+0x1d8>
    1978:	99 36       	cpi	r25, 0x69	; 105
    197a:	69 f5       	brne	.+90     	; 0x19d6 <vfprintf+0x232>
    197c:	f7 fe       	sbrs	r15, 7
    197e:	08 c0       	rjmp	.+16     	; 0x1990 <vfprintf+0x1ec>
    1980:	f5 01       	movw	r30, r10
    1982:	20 81       	ld	r18, Z
    1984:	31 81       	ldd	r19, Z+1	; 0x01
    1986:	42 81       	ldd	r20, Z+2	; 0x02
    1988:	53 81       	ldd	r21, Z+3	; 0x03
    198a:	84 e0       	ldi	r24, 0x04	; 4
    198c:	90 e0       	ldi	r25, 0x00	; 0
    198e:	0a c0       	rjmp	.+20     	; 0x19a4 <vfprintf+0x200>
    1990:	f5 01       	movw	r30, r10
    1992:	80 81       	ld	r24, Z
    1994:	91 81       	ldd	r25, Z+1	; 0x01
    1996:	9c 01       	movw	r18, r24
    1998:	44 27       	eor	r20, r20
    199a:	37 fd       	sbrc	r19, 7
    199c:	40 95       	com	r20
    199e:	54 2f       	mov	r21, r20
    19a0:	82 e0       	ldi	r24, 0x02	; 2
    19a2:	90 e0       	ldi	r25, 0x00	; 0
    19a4:	a8 0e       	add	r10, r24
    19a6:	b9 1e       	adc	r11, r25
    19a8:	9f e6       	ldi	r25, 0x6F	; 111
    19aa:	f9 22       	and	r15, r25
    19ac:	57 ff       	sbrs	r21, 7
    19ae:	09 c0       	rjmp	.+18     	; 0x19c2 <vfprintf+0x21e>
    19b0:	50 95       	com	r21
    19b2:	40 95       	com	r20
    19b4:	30 95       	com	r19
    19b6:	21 95       	neg	r18
    19b8:	3f 4f       	sbci	r19, 0xFF	; 255
    19ba:	4f 4f       	sbci	r20, 0xFF	; 255
    19bc:	5f 4f       	sbci	r21, 0xFF	; 255
    19be:	e0 e8       	ldi	r30, 0x80	; 128
    19c0:	fe 2a       	or	r15, r30
    19c2:	ca 01       	movw	r24, r20
    19c4:	b9 01       	movw	r22, r18
    19c6:	a1 01       	movw	r20, r2
    19c8:	2a e0       	ldi	r18, 0x0A	; 10
    19ca:	30 e0       	ldi	r19, 0x00	; 0
    19cc:	0e 94 f1 0d 	call	0x1be2	; 0x1be2 <__ultoa_invert>
    19d0:	d8 2e       	mov	r13, r24
    19d2:	d2 18       	sub	r13, r2
    19d4:	40 c0       	rjmp	.+128    	; 0x1a56 <vfprintf+0x2b2>
    19d6:	95 37       	cpi	r25, 0x75	; 117
    19d8:	29 f4       	brne	.+10     	; 0x19e4 <vfprintf+0x240>
    19da:	1f 2d       	mov	r17, r15
    19dc:	1f 7e       	andi	r17, 0xEF	; 239
    19de:	2a e0       	ldi	r18, 0x0A	; 10
    19e0:	30 e0       	ldi	r19, 0x00	; 0
    19e2:	1d c0       	rjmp	.+58     	; 0x1a1e <vfprintf+0x27a>
    19e4:	1f 2d       	mov	r17, r15
    19e6:	19 7f       	andi	r17, 0xF9	; 249
    19e8:	9f 36       	cpi	r25, 0x6F	; 111
    19ea:	61 f0       	breq	.+24     	; 0x1a04 <vfprintf+0x260>
    19ec:	90 37       	cpi	r25, 0x70	; 112
    19ee:	20 f4       	brcc	.+8      	; 0x19f8 <vfprintf+0x254>
    19f0:	98 35       	cpi	r25, 0x58	; 88
    19f2:	09 f0       	breq	.+2      	; 0x19f6 <vfprintf+0x252>
    19f4:	ac c0       	rjmp	.+344    	; 0x1b4e <vfprintf+0x3aa>
    19f6:	0f c0       	rjmp	.+30     	; 0x1a16 <vfprintf+0x272>
    19f8:	90 37       	cpi	r25, 0x70	; 112
    19fa:	39 f0       	breq	.+14     	; 0x1a0a <vfprintf+0x266>
    19fc:	98 37       	cpi	r25, 0x78	; 120
    19fe:	09 f0       	breq	.+2      	; 0x1a02 <vfprintf+0x25e>
    1a00:	a6 c0       	rjmp	.+332    	; 0x1b4e <vfprintf+0x3aa>
    1a02:	04 c0       	rjmp	.+8      	; 0x1a0c <vfprintf+0x268>
    1a04:	28 e0       	ldi	r18, 0x08	; 8
    1a06:	30 e0       	ldi	r19, 0x00	; 0
    1a08:	0a c0       	rjmp	.+20     	; 0x1a1e <vfprintf+0x27a>
    1a0a:	10 61       	ori	r17, 0x10	; 16
    1a0c:	14 fd       	sbrc	r17, 4
    1a0e:	14 60       	ori	r17, 0x04	; 4
    1a10:	20 e1       	ldi	r18, 0x10	; 16
    1a12:	30 e0       	ldi	r19, 0x00	; 0
    1a14:	04 c0       	rjmp	.+8      	; 0x1a1e <vfprintf+0x27a>
    1a16:	14 fd       	sbrc	r17, 4
    1a18:	16 60       	ori	r17, 0x06	; 6
    1a1a:	20 e1       	ldi	r18, 0x10	; 16
    1a1c:	32 e0       	ldi	r19, 0x02	; 2
    1a1e:	17 ff       	sbrs	r17, 7
    1a20:	08 c0       	rjmp	.+16     	; 0x1a32 <vfprintf+0x28e>
    1a22:	f5 01       	movw	r30, r10
    1a24:	60 81       	ld	r22, Z
    1a26:	71 81       	ldd	r23, Z+1	; 0x01
    1a28:	82 81       	ldd	r24, Z+2	; 0x02
    1a2a:	93 81       	ldd	r25, Z+3	; 0x03
    1a2c:	44 e0       	ldi	r20, 0x04	; 4
    1a2e:	50 e0       	ldi	r21, 0x00	; 0
    1a30:	08 c0       	rjmp	.+16     	; 0x1a42 <vfprintf+0x29e>
    1a32:	f5 01       	movw	r30, r10
    1a34:	80 81       	ld	r24, Z
    1a36:	91 81       	ldd	r25, Z+1	; 0x01
    1a38:	bc 01       	movw	r22, r24
    1a3a:	80 e0       	ldi	r24, 0x00	; 0
    1a3c:	90 e0       	ldi	r25, 0x00	; 0
    1a3e:	42 e0       	ldi	r20, 0x02	; 2
    1a40:	50 e0       	ldi	r21, 0x00	; 0
    1a42:	a4 0e       	add	r10, r20
    1a44:	b5 1e       	adc	r11, r21
    1a46:	a1 01       	movw	r20, r2
    1a48:	0e 94 f1 0d 	call	0x1be2	; 0x1be2 <__ultoa_invert>
    1a4c:	d8 2e       	mov	r13, r24
    1a4e:	d2 18       	sub	r13, r2
    1a50:	8f e7       	ldi	r24, 0x7F	; 127
    1a52:	f8 2e       	mov	r15, r24
    1a54:	f1 22       	and	r15, r17
    1a56:	f6 fe       	sbrs	r15, 6
    1a58:	0b c0       	rjmp	.+22     	; 0x1a70 <vfprintf+0x2cc>
    1a5a:	5e ef       	ldi	r21, 0xFE	; 254
    1a5c:	f5 22       	and	r15, r21
    1a5e:	d9 14       	cp	r13, r9
    1a60:	38 f4       	brcc	.+14     	; 0x1a70 <vfprintf+0x2cc>
    1a62:	f4 fe       	sbrs	r15, 4
    1a64:	07 c0       	rjmp	.+14     	; 0x1a74 <vfprintf+0x2d0>
    1a66:	f2 fc       	sbrc	r15, 2
    1a68:	05 c0       	rjmp	.+10     	; 0x1a74 <vfprintf+0x2d0>
    1a6a:	8f ee       	ldi	r24, 0xEF	; 239
    1a6c:	f8 22       	and	r15, r24
    1a6e:	02 c0       	rjmp	.+4      	; 0x1a74 <vfprintf+0x2d0>
    1a70:	1d 2d       	mov	r17, r13
    1a72:	01 c0       	rjmp	.+2      	; 0x1a76 <vfprintf+0x2d2>
    1a74:	19 2d       	mov	r17, r9
    1a76:	f4 fe       	sbrs	r15, 4
    1a78:	0d c0       	rjmp	.+26     	; 0x1a94 <vfprintf+0x2f0>
    1a7a:	fe 01       	movw	r30, r28
    1a7c:	ed 0d       	add	r30, r13
    1a7e:	f1 1d       	adc	r31, r1
    1a80:	80 81       	ld	r24, Z
    1a82:	80 33       	cpi	r24, 0x30	; 48
    1a84:	19 f4       	brne	.+6      	; 0x1a8c <vfprintf+0x2e8>
    1a86:	99 ee       	ldi	r25, 0xE9	; 233
    1a88:	f9 22       	and	r15, r25
    1a8a:	08 c0       	rjmp	.+16     	; 0x1a9c <vfprintf+0x2f8>
    1a8c:	1f 5f       	subi	r17, 0xFF	; 255
    1a8e:	f2 fe       	sbrs	r15, 2
    1a90:	05 c0       	rjmp	.+10     	; 0x1a9c <vfprintf+0x2f8>
    1a92:	03 c0       	rjmp	.+6      	; 0x1a9a <vfprintf+0x2f6>
    1a94:	8f 2d       	mov	r24, r15
    1a96:	86 78       	andi	r24, 0x86	; 134
    1a98:	09 f0       	breq	.+2      	; 0x1a9c <vfprintf+0x2f8>
    1a9a:	1f 5f       	subi	r17, 0xFF	; 255
    1a9c:	0f 2d       	mov	r16, r15
    1a9e:	f3 fc       	sbrc	r15, 3
    1aa0:	14 c0       	rjmp	.+40     	; 0x1aca <vfprintf+0x326>
    1aa2:	f0 fe       	sbrs	r15, 0
    1aa4:	0f c0       	rjmp	.+30     	; 0x1ac4 <vfprintf+0x320>
    1aa6:	1e 15       	cp	r17, r14
    1aa8:	10 f0       	brcs	.+4      	; 0x1aae <vfprintf+0x30a>
    1aaa:	9d 2c       	mov	r9, r13
    1aac:	0b c0       	rjmp	.+22     	; 0x1ac4 <vfprintf+0x320>
    1aae:	9d 2c       	mov	r9, r13
    1ab0:	9e 0c       	add	r9, r14
    1ab2:	91 1a       	sub	r9, r17
    1ab4:	1e 2d       	mov	r17, r14
    1ab6:	06 c0       	rjmp	.+12     	; 0x1ac4 <vfprintf+0x320>
    1ab8:	80 e2       	ldi	r24, 0x20	; 32
    1aba:	90 e0       	ldi	r25, 0x00	; 0
    1abc:	b3 01       	movw	r22, r6
    1abe:	0e 94 c5 0d 	call	0x1b8a	; 0x1b8a <fputc>
    1ac2:	1f 5f       	subi	r17, 0xFF	; 255
    1ac4:	1e 15       	cp	r17, r14
    1ac6:	c0 f3       	brcs	.-16     	; 0x1ab8 <vfprintf+0x314>
    1ac8:	04 c0       	rjmp	.+8      	; 0x1ad2 <vfprintf+0x32e>
    1aca:	1e 15       	cp	r17, r14
    1acc:	10 f4       	brcc	.+4      	; 0x1ad2 <vfprintf+0x32e>
    1ace:	e1 1a       	sub	r14, r17
    1ad0:	01 c0       	rjmp	.+2      	; 0x1ad4 <vfprintf+0x330>
    1ad2:	ee 24       	eor	r14, r14
    1ad4:	04 ff       	sbrs	r16, 4
    1ad6:	0f c0       	rjmp	.+30     	; 0x1af6 <vfprintf+0x352>
    1ad8:	80 e3       	ldi	r24, 0x30	; 48
    1ada:	90 e0       	ldi	r25, 0x00	; 0
    1adc:	b3 01       	movw	r22, r6
    1ade:	0e 94 c5 0d 	call	0x1b8a	; 0x1b8a <fputc>
    1ae2:	02 ff       	sbrs	r16, 2
    1ae4:	1d c0       	rjmp	.+58     	; 0x1b20 <vfprintf+0x37c>
    1ae6:	01 fd       	sbrc	r16, 1
    1ae8:	03 c0       	rjmp	.+6      	; 0x1af0 <vfprintf+0x34c>
    1aea:	88 e7       	ldi	r24, 0x78	; 120
    1aec:	90 e0       	ldi	r25, 0x00	; 0
    1aee:	0e c0       	rjmp	.+28     	; 0x1b0c <vfprintf+0x368>
    1af0:	88 e5       	ldi	r24, 0x58	; 88
    1af2:	90 e0       	ldi	r25, 0x00	; 0
    1af4:	0b c0       	rjmp	.+22     	; 0x1b0c <vfprintf+0x368>
    1af6:	80 2f       	mov	r24, r16
    1af8:	86 78       	andi	r24, 0x86	; 134
    1afa:	91 f0       	breq	.+36     	; 0x1b20 <vfprintf+0x37c>
    1afc:	01 ff       	sbrs	r16, 1
    1afe:	02 c0       	rjmp	.+4      	; 0x1b04 <vfprintf+0x360>
    1b00:	8b e2       	ldi	r24, 0x2B	; 43
    1b02:	01 c0       	rjmp	.+2      	; 0x1b06 <vfprintf+0x362>
    1b04:	80 e2       	ldi	r24, 0x20	; 32
    1b06:	f7 fc       	sbrc	r15, 7
    1b08:	8d e2       	ldi	r24, 0x2D	; 45
    1b0a:	90 e0       	ldi	r25, 0x00	; 0
    1b0c:	b3 01       	movw	r22, r6
    1b0e:	0e 94 c5 0d 	call	0x1b8a	; 0x1b8a <fputc>
    1b12:	06 c0       	rjmp	.+12     	; 0x1b20 <vfprintf+0x37c>
    1b14:	80 e3       	ldi	r24, 0x30	; 48
    1b16:	90 e0       	ldi	r25, 0x00	; 0
    1b18:	b3 01       	movw	r22, r6
    1b1a:	0e 94 c5 0d 	call	0x1b8a	; 0x1b8a <fputc>
    1b1e:	9a 94       	dec	r9
    1b20:	d9 14       	cp	r13, r9
    1b22:	c0 f3       	brcs	.-16     	; 0x1b14 <vfprintf+0x370>
    1b24:	da 94       	dec	r13
    1b26:	f1 01       	movw	r30, r2
    1b28:	ed 0d       	add	r30, r13
    1b2a:	f1 1d       	adc	r31, r1
    1b2c:	80 81       	ld	r24, Z
    1b2e:	90 e0       	ldi	r25, 0x00	; 0
    1b30:	b3 01       	movw	r22, r6
    1b32:	0e 94 c5 0d 	call	0x1b8a	; 0x1b8a <fputc>
    1b36:	dd 20       	and	r13, r13
    1b38:	a9 f7       	brne	.-22     	; 0x1b24 <vfprintf+0x380>
    1b3a:	06 c0       	rjmp	.+12     	; 0x1b48 <vfprintf+0x3a4>
    1b3c:	80 e2       	ldi	r24, 0x20	; 32
    1b3e:	90 e0       	ldi	r25, 0x00	; 0
    1b40:	b3 01       	movw	r22, r6
    1b42:	0e 94 c5 0d 	call	0x1b8a	; 0x1b8a <fputc>
    1b46:	ea 94       	dec	r14
    1b48:	ee 20       	and	r14, r14
    1b4a:	c1 f7       	brne	.-16     	; 0x1b3c <vfprintf+0x398>
    1b4c:	43 ce       	rjmp	.-890    	; 0x17d4 <vfprintf+0x30>
    1b4e:	f3 01       	movw	r30, r6
    1b50:	66 81       	ldd	r22, Z+6	; 0x06
    1b52:	77 81       	ldd	r23, Z+7	; 0x07
    1b54:	cb 01       	movw	r24, r22
    1b56:	2b 96       	adiw	r28, 0x0b	; 11
    1b58:	e2 e1       	ldi	r30, 0x12	; 18
    1b5a:	0c 94 93 0b 	jmp	0x1726	; 0x1726 <__epilogue_restores__>

00001b5e <strnlen_P>:
    1b5e:	fc 01       	movw	r30, r24
    1b60:	05 90       	lpm	r0, Z+
    1b62:	61 50       	subi	r22, 0x01	; 1
    1b64:	70 40       	sbci	r23, 0x00	; 0
    1b66:	01 10       	cpse	r0, r1
    1b68:	d8 f7       	brcc	.-10     	; 0x1b60 <strnlen_P+0x2>
    1b6a:	80 95       	com	r24
    1b6c:	90 95       	com	r25
    1b6e:	8e 0f       	add	r24, r30
    1b70:	9f 1f       	adc	r25, r31
    1b72:	08 95       	ret

00001b74 <strnlen>:
    1b74:	fc 01       	movw	r30, r24
    1b76:	61 50       	subi	r22, 0x01	; 1
    1b78:	70 40       	sbci	r23, 0x00	; 0
    1b7a:	01 90       	ld	r0, Z+
    1b7c:	01 10       	cpse	r0, r1
    1b7e:	d8 f7       	brcc	.-10     	; 0x1b76 <strnlen+0x2>
    1b80:	80 95       	com	r24
    1b82:	90 95       	com	r25
    1b84:	8e 0f       	add	r24, r30
    1b86:	9f 1f       	adc	r25, r31
    1b88:	08 95       	ret

00001b8a <fputc>:
    1b8a:	0f 93       	push	r16
    1b8c:	1f 93       	push	r17
    1b8e:	cf 93       	push	r28
    1b90:	df 93       	push	r29
    1b92:	8c 01       	movw	r16, r24
    1b94:	eb 01       	movw	r28, r22
    1b96:	8b 81       	ldd	r24, Y+3	; 0x03
    1b98:	81 ff       	sbrs	r24, 1
    1b9a:	1b c0       	rjmp	.+54     	; 0x1bd2 <fputc+0x48>
    1b9c:	82 ff       	sbrs	r24, 2
    1b9e:	0d c0       	rjmp	.+26     	; 0x1bba <fputc+0x30>
    1ba0:	2e 81       	ldd	r18, Y+6	; 0x06
    1ba2:	3f 81       	ldd	r19, Y+7	; 0x07
    1ba4:	8c 81       	ldd	r24, Y+4	; 0x04
    1ba6:	9d 81       	ldd	r25, Y+5	; 0x05
    1ba8:	28 17       	cp	r18, r24
    1baa:	39 07       	cpc	r19, r25
    1bac:	64 f4       	brge	.+24     	; 0x1bc6 <fputc+0x3c>
    1bae:	e8 81       	ld	r30, Y
    1bb0:	f9 81       	ldd	r31, Y+1	; 0x01
    1bb2:	01 93       	st	Z+, r16
    1bb4:	f9 83       	std	Y+1, r31	; 0x01
    1bb6:	e8 83       	st	Y, r30
    1bb8:	06 c0       	rjmp	.+12     	; 0x1bc6 <fputc+0x3c>
    1bba:	e8 85       	ldd	r30, Y+8	; 0x08
    1bbc:	f9 85       	ldd	r31, Y+9	; 0x09
    1bbe:	80 2f       	mov	r24, r16
    1bc0:	09 95       	icall
    1bc2:	89 2b       	or	r24, r25
    1bc4:	31 f4       	brne	.+12     	; 0x1bd2 <fputc+0x48>
    1bc6:	8e 81       	ldd	r24, Y+6	; 0x06
    1bc8:	9f 81       	ldd	r25, Y+7	; 0x07
    1bca:	01 96       	adiw	r24, 0x01	; 1
    1bcc:	9f 83       	std	Y+7, r25	; 0x07
    1bce:	8e 83       	std	Y+6, r24	; 0x06
    1bd0:	02 c0       	rjmp	.+4      	; 0x1bd6 <fputc+0x4c>
    1bd2:	0f ef       	ldi	r16, 0xFF	; 255
    1bd4:	1f ef       	ldi	r17, 0xFF	; 255
    1bd6:	c8 01       	movw	r24, r16
    1bd8:	df 91       	pop	r29
    1bda:	cf 91       	pop	r28
    1bdc:	1f 91       	pop	r17
    1bde:	0f 91       	pop	r16
    1be0:	08 95       	ret

00001be2 <__ultoa_invert>:
    1be2:	fa 01       	movw	r30, r20
    1be4:	aa 27       	eor	r26, r26
    1be6:	28 30       	cpi	r18, 0x08	; 8
    1be8:	51 f1       	breq	.+84     	; 0x1c3e <__ultoa_invert+0x5c>
    1bea:	20 31       	cpi	r18, 0x10	; 16
    1bec:	81 f1       	breq	.+96     	; 0x1c4e <__ultoa_invert+0x6c>
    1bee:	e8 94       	clt
    1bf0:	6f 93       	push	r22
    1bf2:	6e 7f       	andi	r22, 0xFE	; 254
    1bf4:	6e 5f       	subi	r22, 0xFE	; 254
    1bf6:	7f 4f       	sbci	r23, 0xFF	; 255
    1bf8:	8f 4f       	sbci	r24, 0xFF	; 255
    1bfa:	9f 4f       	sbci	r25, 0xFF	; 255
    1bfc:	af 4f       	sbci	r26, 0xFF	; 255
    1bfe:	b1 e0       	ldi	r27, 0x01	; 1
    1c00:	3e d0       	rcall	.+124    	; 0x1c7e <__ultoa_invert+0x9c>
    1c02:	b4 e0       	ldi	r27, 0x04	; 4
    1c04:	3c d0       	rcall	.+120    	; 0x1c7e <__ultoa_invert+0x9c>
    1c06:	67 0f       	add	r22, r23
    1c08:	78 1f       	adc	r23, r24
    1c0a:	89 1f       	adc	r24, r25
    1c0c:	9a 1f       	adc	r25, r26
    1c0e:	a1 1d       	adc	r26, r1
    1c10:	68 0f       	add	r22, r24
    1c12:	79 1f       	adc	r23, r25
    1c14:	8a 1f       	adc	r24, r26
    1c16:	91 1d       	adc	r25, r1
    1c18:	a1 1d       	adc	r26, r1
    1c1a:	6a 0f       	add	r22, r26
    1c1c:	71 1d       	adc	r23, r1
    1c1e:	81 1d       	adc	r24, r1
    1c20:	91 1d       	adc	r25, r1
    1c22:	a1 1d       	adc	r26, r1
    1c24:	20 d0       	rcall	.+64     	; 0x1c66 <__ultoa_invert+0x84>
    1c26:	09 f4       	brne	.+2      	; 0x1c2a <__ultoa_invert+0x48>
    1c28:	68 94       	set
    1c2a:	3f 91       	pop	r19
    1c2c:	2a e0       	ldi	r18, 0x0A	; 10
    1c2e:	26 9f       	mul	r18, r22
    1c30:	11 24       	eor	r1, r1
    1c32:	30 19       	sub	r19, r0
    1c34:	30 5d       	subi	r19, 0xD0	; 208
    1c36:	31 93       	st	Z+, r19
    1c38:	de f6       	brtc	.-74     	; 0x1bf0 <__ultoa_invert+0xe>
    1c3a:	cf 01       	movw	r24, r30
    1c3c:	08 95       	ret
    1c3e:	46 2f       	mov	r20, r22
    1c40:	47 70       	andi	r20, 0x07	; 7
    1c42:	40 5d       	subi	r20, 0xD0	; 208
    1c44:	41 93       	st	Z+, r20
    1c46:	b3 e0       	ldi	r27, 0x03	; 3
    1c48:	0f d0       	rcall	.+30     	; 0x1c68 <__ultoa_invert+0x86>
    1c4a:	c9 f7       	brne	.-14     	; 0x1c3e <__ultoa_invert+0x5c>
    1c4c:	f6 cf       	rjmp	.-20     	; 0x1c3a <__ultoa_invert+0x58>
    1c4e:	46 2f       	mov	r20, r22
    1c50:	4f 70       	andi	r20, 0x0F	; 15
    1c52:	40 5d       	subi	r20, 0xD0	; 208
    1c54:	4a 33       	cpi	r20, 0x3A	; 58
    1c56:	18 f0       	brcs	.+6      	; 0x1c5e <__ultoa_invert+0x7c>
    1c58:	49 5d       	subi	r20, 0xD9	; 217
    1c5a:	31 fd       	sbrc	r19, 1
    1c5c:	40 52       	subi	r20, 0x20	; 32
    1c5e:	41 93       	st	Z+, r20
    1c60:	02 d0       	rcall	.+4      	; 0x1c66 <__ultoa_invert+0x84>
    1c62:	a9 f7       	brne	.-22     	; 0x1c4e <__ultoa_invert+0x6c>
    1c64:	ea cf       	rjmp	.-44     	; 0x1c3a <__ultoa_invert+0x58>
    1c66:	b4 e0       	ldi	r27, 0x04	; 4
    1c68:	a6 95       	lsr	r26
    1c6a:	97 95       	ror	r25
    1c6c:	87 95       	ror	r24
    1c6e:	77 95       	ror	r23
    1c70:	67 95       	ror	r22
    1c72:	ba 95       	dec	r27
    1c74:	c9 f7       	brne	.-14     	; 0x1c68 <__ultoa_invert+0x86>
    1c76:	00 97       	sbiw	r24, 0x00	; 0
    1c78:	61 05       	cpc	r22, r1
    1c7a:	71 05       	cpc	r23, r1
    1c7c:	08 95       	ret
    1c7e:	9b 01       	movw	r18, r22
    1c80:	ac 01       	movw	r20, r24
    1c82:	0a 2e       	mov	r0, r26
    1c84:	06 94       	lsr	r0
    1c86:	57 95       	ror	r21
    1c88:	47 95       	ror	r20
    1c8a:	37 95       	ror	r19
    1c8c:	27 95       	ror	r18
    1c8e:	ba 95       	dec	r27
    1c90:	c9 f7       	brne	.-14     	; 0x1c84 <__ultoa_invert+0xa2>
    1c92:	62 0f       	add	r22, r18
    1c94:	73 1f       	adc	r23, r19
    1c96:	84 1f       	adc	r24, r20
    1c98:	95 1f       	adc	r25, r21
    1c9a:	a0 1d       	adc	r26, r0
    1c9c:	08 95       	ret

00001c9e <_exit>:
    1c9e:	f8 94       	cli

00001ca0 <__stop_program>:
    1ca0:	ff cf       	rjmp	.-2      	; 0x1ca0 <__stop_program>
